{"version":3,"sources":["ui/App.module.css","ui/elements/LoadingIndicator.module.css","ui/elements/Menu.module.css","ui/elements/Line.module.css","ui/admin/Admin.module.css","http/http.exception.ts","logger/logger.ts","http/http.client.ts","typings/enums.ts","browser-storage/browser-storage.ts","store/user/user.subscriptions.ts","store/user/user.slice.ts","store/annotation/annotation.slice.ts","judgements/judgements.service.ts","store/annotation/annotation.subscriptions.ts","store/middleware/logger.ts","store/reducers.ts","store/store.ts","auth/auth.service.ts","ui/elements/FloatingTextInput.tsx","ui/elements/LoadingIndicator.tsx","ui/elements/Button.tsx","ui/login/Login.tsx","admin/admin.service.ts","util/types.util.ts","store/util/actions.util.ts","store/user/user.hooks.ts","ui/elements/Menu.tsx","ui/util/events.hooks.ts","ui/elements/Line.tsx","ui/admin/Admin.tsx","util/functions.ts","ui/annotation/RateButton.tsx","ui/annotation/AnnotationPart.tsx","ui/annotation/Annotation.tsx","ui/annotation/AnnotationContainer.tsx","store/annotation/annotation.hooks.ts","annotators/annotators.service.ts","ui/annotation/AnnotationInfo.tsx","ui/PrivateRoute.tsx","ui/App.tsx","serviceWorker.ts","boot/load-stored-user.ts","boot/boot.ts","index.tsx","ui/annotation/Annotation.module.css","ui/login/Login.module.css","ui/elements/FloatingTextInput.module.css","ui/annotation/AnnotationPart.module.css","ui/elements/Button.module.css","ui/annotation/RateButton.module.css"],"names":["module","exports","HttpException","errorText","status","message","this","Error","createLogger","context","logWithContext","logFn","optionalParams","debug","console","info","error","dir","group","groupEnd","axiosClient","axios","create","baseURL","window","location","origin","timeout","logger","httpClient","loginRequest","a","async","username","post","data","response","refreshRequest","attempt","lastError","accessToken","headers","authorization","judgementId","submitJudgementRequest","put","get","updateConfigRequest","ms","Promise","res","setTimeout","JudgementMode","RelevanceLevel","browserStorage","user","localStorage","setItem","JSON","stringify","removeItem","storedUser","getItem","currentlyStoredUser","parse","UserRole","RateLevels","text","relevanceLevel","MISLEADING_ANSWER","annotationRequired","buttonColor","NOT_RELEVANT","TOPIC_RELEVANT_DOES_NOT_ANSWER","GOOD_ANSWER","PERFECT_ANSWER","JudgementPairStatus","authenticate","createAction","acknowledgeInfoScreen","logout","reducer","createReducer","builder","addCase","state","action","accessTokenJwtPayload","jwt","payload","refreshTokenJwtPayload","refreshToken","isAdmin","resource_access","roles","some","role","acknowledgedInfoScreen","val","expiry","exp","ADMIN","ANNOTATOR","actions","INITIAL_STATE","judgementPairs","preloadJudgements","rateJudgementPair","selectRangeStartEnd","deleteRange","setJudgementStatus","selectJudgementPair","alreadyFinished","remainingToFinish","judgementPairsReceived","judgements","map","judgement","jp1","jp2","localEquivalentPair","find","pair","id","queryText","docAnnotationParts","length","part","index","annotatedRanges","TO_JUDGE","currentJudgementPair","currentJudgementPairId","rateLevel","currentAnnotationStart","undefined","annotationPartIndex","start","end","actualStart","actualEnd","push","filter","range","currentJudgementPairSelectedOnMs","Date","getTime","userActions","judgementsService","store","getState","dispatch","annotationActions","annotationState","annotation","submitCurrentJudgement","relevancePositions","annotatedRange","i","now","durationUsedToJudgeMs","SEND_PENDING","SEND_FAILED","SEND_SUCCESS","addMemoizedSubscription","subscription","memoizedValue","memoizeOnValue","subscribe","newValueOfStore","listener","loggerMiddleware","next","type","result","combineReducers","userReducer","annotationReducer","configureStore","rootReducer","middleware","getDefaultMiddleware","scheduleId","REFRESH_OFFSET","moment","duration","currentUser","userOfStore","previousUser","clearTimeout","timeStampToRefresh","unix","subtract","timeUntilRefreshMs","diff","asMilliseconds","authService","refresh","toString","subscribedStore","nextPair","forEach","login","password","loginResponse","refreshResponse","FloatingLabelInput","children","props","className","styles","floatingLabelInput","FloatingLabelInputContainer","floatingLabelInputContainer","FloatingLabel","active","floatingLabelActive","floatingLabel","FloatingInput","inputRef","ref","onBlur","floatingInputActive","floatingInput","FloatingTextInput","label","value","otherProps","useState","setActive","useRef","onClick","current","focus","htmlFor","event","target","onFocus","LoadingIndicator","ldsEllipsis","Button","React","forwardRef","buttonStyle","buttonType","animate","setAnimate","e","onTransitionEnd","button","styleNormal","styleBold","typePrimary","TextInput","useField","field","meta","showError","touched","inputField","inputFieldError","name","Login","useSelector","to","container","headline","inputArea","inputHeadline","initialValues","loginError","validate","values","errors","onSubmit","setSubmitting","setErrors","getStatus","test","code","isSubmitting","autoComplete","autoCorrect","autoCapitalize","disabled","adminService","exportJudgements","saveTsv","updateConfig","config","getStatistics","filename","blob","Blob","elem","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","assertUnreachable","x","useActionsWithDispatch","useDispatch","actionsWithDispatch","hasOwnProperty","useUserState","userRole","userAcknowledgedInfoScreen","MenuButton","menuButton","xmlns","height","viewBox","width","d","fill","Menu","onViewportClick","showMenu","setShowMenu","useEffect","viewportClickHandler","addEventListener","passive","removeEventListener","history","useHistory","onLogout","onShowStartScreen","INFO_RELATIVE_URL","toggleShowMenu","oldVal","createMenuButton","Manager","Reference","Popper","placement","style","data-placement","Line","horizontalLine","Admin","statistics","updateStatistics","adminArea","actionBar","orientation","judgementMode","SCORING_AND_SELECT_SPANS","rotateDocumentText","options","as","Object","key","statisticsContainer","statistic","statisticValue","statisticLabel","noop","RateButton","background","AnnotationPart","isRangeStart","isInSelectedRange","showTooltip","annotationIsAllowedOnPart","annotationIsAllowedInGeneral","onPartClick","onTooltipClick","textToShow","replace","currentRangeStartStyle","rangeStart","annotationAllowedOnPartStyle","annotationAllowedOnPart","annotationAllowedInGeneralStyle","annotationAllowedInGeneral","annotatePartSpan","annotatePart","isInRange","annotatePartTooltipButton","Annotation","keyFunctionMap","tooltipAnnotatePartIndex","setTooltipAnnotatePartIndex","createJudgementFn","Digit1","Digit2","Digit3","Digit4","Digit5","keyUpHandler","currentRateLevel","finishedFraction","ratingRequired","currentSelectionNotFinished","mode","annotationIsRequired","hideTooltip","progressBar","onClickCapture","annotationArea","annotationPart","canAnnotatePart","footer","rateButton","guideText","AnnotationContainer","pairsSuccessfullySent","useAnnotationState","annotatorsService","redirectOnSuccess","AnnotationInfo","ANNOTATE_RELATIVE_URL","PrivateRoute","requiredRole","rest","RouteToPage","AnnotatorRouter","match","useRouteMatch","path","App","app","exact","Boolean","hostname","bootScripts","bootScript","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.639b7d84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__16eIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsEllipsis\":\"LoadingIndicator_ldsEllipsis__1NuRE\",\"lds-ellipsis1\":\"LoadingIndicator_lds-ellipsis1__3Vee3\",\"lds-ellipsis2\":\"LoadingIndicator_lds-ellipsis2__1xuwq\",\"lds-ellipsis3\":\"LoadingIndicator_lds-ellipsis3__14o4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuButton\":\"Menu_menuButton__2DoUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontalLine\":\"Line_horizontalLine__2MX1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Admin_container__33nz2\",\"adminArea\":\"Admin_adminArea__sWTs7\",\"actionBar\":\"Admin_actionBar__Av4NJ\",\"options\":\"Admin_options__12fPG\",\"button\":\"Admin_button__2e16L\",\"statisticsContainer\":\"Admin_statisticsContainer__2Up_0\",\"statisticValue\":\"Admin_statisticValue__IzxVH\",\"statisticLabel\":\"Admin_statisticLabel__3LSN1\",\"statistic\":\"Admin_statistic__1m6bn\"};","import { HttpStatus } from './http-status.enum';\r\n\r\nexport class HttpException extends Error {\r\n  private errorText: string;\r\n  private status: HttpStatus;\r\n  /**\r\n   * Instantiate a plain HTTP Exception.\r\n   *\r\n   * @example\r\n   * `throw new HttpException()`\r\n   *\r\n   * @param errorText string describing the error condition.\r\n   * @param status HTTP response status code\r\n   */\r\n  constructor(errorText: string, status: HttpStatus) {\r\n    super();\r\n    this.errorText = errorText;\r\n    this.status = status;\r\n    this.message = errorText;\r\n  }\r\n  getResponse() {\r\n    return this.errorText;\r\n  }\r\n  getStatus() {\r\n    return this.status;\r\n  }\r\n  toString() {\r\n    return `HttpException: status=${this.status}, errorText='${this.errorText}'`;\r\n  }\r\n}\r\n","/* eslint-disable no-console */\r\n/* tslint:disable no-console */\r\n\r\nexport const createLogger = (context: string) => {\r\n  const logWithContext = (logFn: (message?: any, ...optionalParams: any[]) => void) => (\r\n    message?: any,\r\n    ...optionalParams: any[]\r\n  ) => logFn(`[${context}] ${message}`, ...optionalParams);\r\n\r\n  return {\r\n    debug: logWithContext(console.debug),\r\n    info: logWithContext(console.info),\r\n    error: logWithContext(console.error),\r\n    dir: logWithContext(console.dir),\r\n    group: console.group,\r\n    groupEnd: console.groupEnd,\r\n  };\r\n};\r\n","import axios from 'axios';\r\n\r\nimport { HttpException } from './http.exception';\r\nimport { createLogger } from '../logger/logger';\r\n\r\nimport {\r\n  LoginRequest,\r\n  ImportUsersResponse,\r\n  ImportUsersRequest,\r\n  AuthResponse,\r\n  RefreshRequest,\r\n  ImportDocumentsReq,\r\n  ImportDocumentsResp,\r\n  ImportQueriesReq,\r\n  ImportQueriesResp,\r\n  ImportJudgementPairsReq,\r\n  ImportJudgementPairsResp,\r\n  PreloadJudgementResponse,\r\n  SaveJudgement,\r\n  StatisticsResp,\r\n  UpdateConfig,\r\n} from '../typings/fira-be-typings';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: window.location.origin,\r\n  timeout: 5000,\r\n});\r\nconst logger = createLogger('http.client');\r\nconst REFRESH_RETRY_COUNT = 5;\r\nconst REFRESH_RETRY_DELAY = 3 * 1000; // 3 seconds\r\n\r\nexport const httpClient = {\r\n  login: async (loginRequest: LoginRequest): Promise<AuthResponse> => {\r\n    logger.info('executing login...', { username: loginRequest.username });\r\n\r\n    try {\r\n      return (await axiosClient.post<AuthResponse>('auth/v1/login', loginRequest)).data;\r\n    } catch (e) {\r\n      logger.error('login failed!', e);\r\n      if (e.response?.status === 401) {\r\n        throw new HttpException('credentials invalid', 401);\r\n      }\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  refresh: async (refreshRequest: RefreshRequest): Promise<AuthResponse> => {\r\n    logger.info('executing refresh...', { refreshRequest });\r\n\r\n    // retry refresh with same token 3 times because if the internet connection was idle,\r\n    // ERR_NETWORK_IO_SUSPENDED can occur on the first try\r\n    let attempt = 1;\r\n    let lastError;\r\n    while (attempt <= REFRESH_RETRY_COUNT) {\r\n      try {\r\n        return (await axiosClient.post<AuthResponse>('auth/v1/refresh', refreshRequest)).data;\r\n      } catch (e) {\r\n        logger.info(`refresh failed for attempt=${attempt}`, { error: e });\r\n        lastError = e;\r\n        attempt++;\r\n        if (e.response?.status) {\r\n          // got some response from backend --> no retry necessary\r\n          break;\r\n        }\r\n        if (attempt <= REFRESH_RETRY_COUNT) {\r\n          await timeout(REFRESH_RETRY_DELAY);\r\n        }\r\n      }\r\n    }\r\n    logger.error('refresh failed!', lastError);\r\n    throw lastError;\r\n  },\r\n\r\n  importUsers: async (\r\n    accessToken: string,\r\n    importUsersRequest: ImportUsersRequest,\r\n  ): Promise<ImportUsersResponse> => {\r\n    logger.info('executing import users...', { importUsersRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.post<ImportUsersResponse>('admin/v1/import/users', importUsersRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import users failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importDocuments: async (\r\n    accessToken: string,\r\n    importDocumentsRequest: ImportDocumentsReq,\r\n  ): Promise<ImportDocumentsResp> => {\r\n    logger.info('executing import documents...', { importDocumentsRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put<ImportDocumentsResp>(\r\n          'admin/v1/import/documents',\r\n          importDocumentsRequest,\r\n          {\r\n            headers: {\r\n              authorization: `Bearer ${accessToken}`,\r\n            },\r\n          },\r\n        )\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import documents failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importQueries: async (\r\n    accessToken: string,\r\n    importQueriesRequest: ImportQueriesReq,\r\n  ): Promise<ImportQueriesResp> => {\r\n    logger.info('executing import queries...', { importQueriesRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put<ImportQueriesResp>('admin/v1/import/queries', importQueriesRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import queries failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importJudgementPairs: async (\r\n    accessToken: string,\r\n    importJudgPairsRequest: ImportJudgementPairsReq,\r\n  ): Promise<ImportJudgementPairsResp> => {\r\n    logger.info('executing import judgement pairs...', { importJudgPairsRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put<ImportJudgementPairsResp>(\r\n          'admin/v1/import/judgement-pairs',\r\n          importJudgPairsRequest,\r\n          {\r\n            headers: {\r\n              authorization: `Bearer ${accessToken}`,\r\n            },\r\n          },\r\n        )\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import judgement pairs failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  preloadJudgements: async (accessToken: string): Promise<PreloadJudgementResponse> => {\r\n    logger.info('executing preload judgements...');\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.post<PreloadJudgementResponse>('judgements/v1/preload', null, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('preload judgements failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  submitJudgement: async (\r\n    accessToken: string,\r\n    judgementId: number,\r\n    submitJudgementRequest: SaveJudgement,\r\n  ): Promise<void> => {\r\n    logger.info('executing submit judgement...', { submitJudgementRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put(`judgements/v1/${judgementId}`, submitJudgementRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('submit judgement failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  exportJudgements: async (accessToken: string): Promise<string> => {\r\n    logger.info('executing export of judgements...');\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.get(`admin/v1/judgements/export/tsv`, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('export of judgements failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  updateConfig: async (accessToken: string, updateConfigRequest: UpdateConfig): Promise<void> => {\r\n    logger.info('executing update of config...', { updateConfigRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put(`admin/v1/config`, updateConfigRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('update of config failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  getStatistics: async (accessToken: string): Promise<StatisticsResp> => {\r\n    logger.info('executing retrieval of statistics...');\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.get(`admin/v1/statistics`, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('retrieval of statistics failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n};\r\n\r\nfunction timeout(ms: number) {\r\n  return new Promise(res => setTimeout(res, ms));\r\n}\r\n","export enum JudgementMode {\r\n  PLAIN_RELEVANCE_SCORING = 'PLAIN_RELEVANCE_SCORING',\r\n  SCORING_AND_SELECT_SPANS = 'SCORING_AND_SELECT_SPANS',\r\n}\r\n\r\nexport enum RelevanceLevel {\r\n  NOT_RELEVANT = '0_NOT_RELEVANT',\r\n  TOPIC_RELEVANT_DOES_NOT_ANSWER = '1_TOPIC_RELEVANT_DOES_NOT_ANSWER',\r\n  GOOD_ANSWER = '2_GOOD_ANSWER',\r\n  PERFECT_ANSWER = '3_PERFECT_ANSWER',\r\n  MISLEADING_ANSWER = '-1_MISLEADING_ANSWER',\r\n}\r\n\r\nexport type RateLevelType = {\r\n  readonly text: string;\r\n  readonly relevanceLevel: RelevanceLevel;\r\n  readonly annotationRequired: boolean;\r\n  readonly buttonColor: string;\r\n};\r\n\r\nexport const RateLevels: RateLevelType[] = [\r\n  {\r\n    text: 'Misleading Answer',\r\n    relevanceLevel: RelevanceLevel.MISLEADING_ANSWER,\r\n    annotationRequired: false,\r\n    buttonColor: '#FF7E61',\r\n  },\r\n  {\r\n    text: 'Not Relevant',\r\n    relevanceLevel: RelevanceLevel.NOT_RELEVANT,\r\n    annotationRequired: false,\r\n    buttonColor: '#EBB25B',\r\n  },\r\n  {\r\n    text: 'Topic Relevant, But Does Not Answer',\r\n    relevanceLevel: RelevanceLevel.TOPIC_RELEVANT_DOES_NOT_ANSWER,\r\n    annotationRequired: true,\r\n    buttonColor: '#FFF498',\r\n  },\r\n  {\r\n    text: 'Good Answer',\r\n    relevanceLevel: RelevanceLevel.GOOD_ANSWER,\r\n    annotationRequired: true,\r\n    buttonColor: '#A1E880',\r\n  },\r\n  {\r\n    text: 'Perfect Answer',\r\n    relevanceLevel: RelevanceLevel.PERFECT_ANSWER,\r\n    annotationRequired: true,\r\n    buttonColor: '#73FFC3',\r\n  },\r\n];\r\n","import { createLogger } from '../logger/logger';\r\n\r\ntype LocalStorageUser = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  acknowledgedInfoScreen: boolean;\r\n};\r\n\r\nconst USER_KEY = 'user';\r\n\r\nconst logger = createLogger('browser-storage');\r\n\r\nexport const browserStorage = {\r\n  saveUser: (user: LocalStorageUser) => {\r\n    logger.info('saveUser called', { user });\r\n\r\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  },\r\n\r\n  clearUser: () => {\r\n    logger.info('clearUser called');\r\n\r\n    localStorage.removeItem(USER_KEY);\r\n  },\r\n\r\n  getUser: (): LocalStorageUser | null => {\r\n    logger.info('getUser called');\r\n\r\n    const storedUser = localStorage.getItem(USER_KEY);\r\n    if (!storedUser) {\r\n      logger.info('no user found');\r\n      return null;\r\n    }\r\n    logger.info('user found', { currentlyStoredUser: storedUser });\r\n    return JSON.parse(storedUser) as LocalStorageUser;\r\n  },\r\n};\r\n","import moment from 'moment';\r\n\r\nimport { browserStorage } from '../../browser-storage/browser-storage';\r\nimport { authService } from '../../auth/auth.service';\r\nimport { createLogger } from '../../logger/logger';\r\nimport { RootStore } from '../store';\r\n\r\nconst logger = createLogger('user.subscriptions');\r\n\r\nexport const setupSubscriptions = (store: RootStore) => {\r\n  // listen for changes on user state and synchronize with browser storage\r\n  const REFRESH_OFFSET = moment.duration(1, 'minutes');\r\n  let currentUser = store.getState().user;\r\n  let scheduleId: NodeJS.Timeout;\r\n\r\n  store.subscribe(() => {\r\n    const userOfStore = store.getState().user;\r\n    if (userOfStore !== currentUser) {\r\n      logger.info('user changed', { previousUser: currentUser, userOfStore });\r\n\r\n      currentUser = userOfStore;\r\n\r\n      if (!currentUser) {\r\n        // if no user is present (e.g., logout was executed), clear scheduled refresh and browser storage\r\n        logger.info('no user present, clear scheduled refresh and browser storage');\r\n        clearTimeout(scheduleId);\r\n        return browserStorage.clearUser();\r\n      }\r\n\r\n      // save new user in browser storage\r\n      browserStorage.saveUser({\r\n        accessToken: currentUser.accessToken.val,\r\n        refreshToken: currentUser.refreshToken.val,\r\n        acknowledgedInfoScreen: currentUser.acknowledgedInfoScreen,\r\n      });\r\n      logger.info('user saved to browser storage');\r\n\r\n      // schedule refresh of token\r\n      const expiry = moment.unix(currentUser.accessToken.expiry);\r\n      const timeStampToRefresh = expiry.subtract(REFRESH_OFFSET);\r\n      const timeUntilRefreshMs = moment\r\n        .duration(timeStampToRefresh.diff(moment()))\r\n        .asMilliseconds();\r\n      const refreshToken = currentUser.refreshToken.val;\r\n\r\n      scheduleId = setTimeout(async () => {\r\n        await authService.refresh(refreshToken);\r\n      }, timeUntilRefreshMs);\r\n\r\n      logger.info(`refresh got scheduled, scheduled at: ${timeStampToRefresh.toString()}`);\r\n    }\r\n  });\r\n};\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\nimport * as jwt from 'jsonwebtoken';\r\n\r\nimport { JwtPayload } from '../../typings/fira-be-typings';\r\n\r\ntype UserState = null | {\r\n  readonly accessToken: {\r\n    readonly val: string;\r\n    readonly expiry: number; // unix timestamp\r\n  };\r\n  readonly refreshToken: {\r\n    readonly val: string;\r\n    readonly expiry: number; // unix timestamp\r\n  };\r\n  readonly acknowledgedInfoScreen: boolean;\r\n  readonly role: UserRole;\r\n};\r\n\r\nexport enum UserRole {\r\n  ANNOTATOR = 'ANNOTATOR',\r\n  ADMIN = 'ADMIN',\r\n}\r\n\r\ntype AuthenticatePayload = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n};\r\ntype AckInfoScreenPayload = {\r\n  acknowledgedInfoScreen: boolean;\r\n};\r\n\r\nconst INITIAL_STATE = null as UserState;\r\nconst DEFAULT_ACKNOWLEDGED_INFO_SCREEN = false;\r\n\r\nconst authenticate = createAction<AuthenticatePayload>('AUTHENTICATED');\r\nconst acknowledgeInfoScreen = createAction<AckInfoScreenPayload>('ACKNOWLEDGED_INFO_SCREEN');\r\nconst logout = createAction<void>('LOGGED_OUT');\r\nconst reducer = createReducer(INITIAL_STATE, builder =>\r\n  builder\r\n    .addCase(authenticate, (state, action) => {\r\n      const accessTokenJwtPayload = jwt.decode(action.payload.accessToken) as JwtPayload;\r\n      const refreshTokenJwtPayload = jwt.decode(action.payload.refreshToken) as JwtPayload;\r\n      const isAdmin = !!accessTokenJwtPayload.resource_access?.['realm-management']?.roles?.some(\r\n        role => role === 'manage-users',\r\n      );\r\n\r\n      const acknowledgedInfoScreen =\r\n        state?.acknowledgedInfoScreen ?? DEFAULT_ACKNOWLEDGED_INFO_SCREEN;\r\n\r\n      return {\r\n        ...state,\r\n        accessToken: {\r\n          val: action.payload.accessToken,\r\n          expiry: accessTokenJwtPayload.exp,\r\n        },\r\n        refreshToken: {\r\n          val: action.payload.refreshToken,\r\n          expiry: refreshTokenJwtPayload.exp,\r\n        },\r\n        acknowledgedInfoScreen,\r\n        role: isAdmin ? UserRole.ADMIN : UserRole.ANNOTATOR,\r\n      };\r\n    })\r\n    .addCase(acknowledgeInfoScreen, (state, action) => {\r\n      state!.acknowledgedInfoScreen = action.payload.acknowledgedInfoScreen;\r\n    })\r\n    .addCase(logout, () => {\r\n      return INITIAL_STATE;\r\n    }),\r\n);\r\n\r\nexport const actions = { authenticate, acknowledgeInfoScreen, logout };\r\nexport default reducer;\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { PreloadJudgement } from '../../typings/fira-be-typings';\r\nimport { RelevanceLevel, RateLevels } from '../../typings/enums';\r\nimport { actions as userActions } from '../user/user.slice';\r\n\r\nexport enum JudgementPairStatus {\r\n  TO_JUDGE = 'TO_JUDGE',\r\n  SEND_PENDING = 'SEND_PENDING',\r\n  SEND_SUCCESS = 'SEND_SUCCESS',\r\n  SEND_FAILED = 'SEND_FAILED',\r\n}\r\n\r\nexport type JudgementPair = PreloadJudgement & {\r\n  readonly relevanceLevel?: RelevanceLevel;\r\n  readonly currentAnnotationStart?: number;\r\n  readonly annotatedRanges: Array<{ start: number; end: number }>;\r\n  readonly status: JudgementPairStatus;\r\n};\r\n\r\ntype AnnotationState = {\r\n  readonly judgementPairs: JudgementPair[];\r\n  readonly alreadyFinished?: number;\r\n  readonly remainingToFinish?: number;\r\n  readonly currentJudgementPairId?: PreloadJudgement['id'];\r\n  readonly currentJudgementPairSelectedOnMs?: number; // unix timestamp\r\n};\r\n\r\ntype PreloadJudgementsPayload = {\r\n  readonly judgements: PreloadJudgement[];\r\n  readonly alreadyFinished: number;\r\n  readonly remainingToFinish: number;\r\n};\r\n\r\ntype RateJudgementPairPayload = {\r\n  readonly relevanceLevel: RelevanceLevel;\r\n};\r\n\r\ntype SelectRangeStartEndPayload = {\r\n  readonly annotationPartIndex: number;\r\n};\r\n\r\ntype DeleteRangePayload = {\r\n  readonly annotationPartIndex: number;\r\n};\r\n\r\ntype SetJudgementStatusPayload = {\r\n  readonly id: PreloadJudgement['id'];\r\n  readonly status: JudgementPairStatus;\r\n};\r\n\r\nconst INITIAL_STATE = { judgementPairs: [] } as AnnotationState;\r\n\r\nconst preloadJudgements = createAction<PreloadJudgementsPayload>('JUDGEMENTS_PRELOADED');\r\nconst rateJudgementPair = createAction<RateJudgementPairPayload>('JUDGEMENT_PAIR_RATED');\r\nconst selectRangeStartEnd = createAction<SelectRangeStartEndPayload>('RANGE_STARTOREND_SELECTED');\r\nconst deleteRange = createAction<DeleteRangePayload>('RANGE_DELETED');\r\nconst setJudgementStatus = createAction<SetJudgementStatusPayload>('JUDGEMENT_STATUS_SET');\r\nconst selectJudgementPair = createAction<JudgementPair | undefined>('JUDGEMENT_PAIR_SELECTED');\r\n\r\nconst reducer = createReducer(INITIAL_STATE, builder =>\r\n  builder\r\n    .addCase(preloadJudgements, (state, action) => {\r\n      state.alreadyFinished = action.payload.alreadyFinished;\r\n      state.remainingToFinish = action.payload.remainingToFinish;\r\n\r\n      const judgementPairsReceived = action.payload.judgements;\r\n\r\n      state.judgementPairs = judgementPairsReceived.map(judgement => {\r\n        const localEquivalentPair = state.judgementPairs.find(pair => pair.id === judgement.id);\r\n        if (localEquivalentPair && areJudgementPairsEqual(localEquivalentPair, judgement)) {\r\n          // keep local data of judgement pair\r\n          return {\r\n            ...judgement,\r\n            ...localEquivalentPair,\r\n          };\r\n        } else {\r\n          // either there is no local data for this judgement pair received from server, or\r\n          // the data of the pair changed significantly\r\n          // --> do not keep local data for this pair\r\n          return {\r\n            ...judgement,\r\n            annotatedRanges: [],\r\n            status: JudgementPairStatus.TO_JUDGE,\r\n          };\r\n        }\r\n      });\r\n    })\r\n    .addCase(rateJudgementPair, (state, action) => {\r\n      const currentJudgementPair = state.judgementPairs.find(\r\n        pair => pair.id === state.currentJudgementPairId,\r\n      );\r\n      currentJudgementPair!.relevanceLevel = action.payload.relevanceLevel;\r\n      const currentRateLevel = RateLevels.find(\r\n        rateLevel => rateLevel.relevanceLevel === currentJudgementPair!.relevanceLevel,\r\n      );\r\n\r\n      // clear annotated ranges and current annotation start if\r\n      // rating is changed to a level which does not require annotation of ranges\r\n      if (!currentRateLevel!.annotationRequired) {\r\n        currentJudgementPair!.annotatedRanges = [];\r\n        currentJudgementPair!.currentAnnotationStart = undefined;\r\n      }\r\n    })\r\n    .addCase(selectRangeStartEnd, (state, action) => {\r\n      const currentJudgementPair = state.judgementPairs.find(\r\n        pair => pair.id === state.currentJudgementPairId,\r\n      );\r\n      if (currentJudgementPair!.currentAnnotationStart === undefined) {\r\n        currentJudgementPair!.currentAnnotationStart = action.payload.annotationPartIndex;\r\n      } else {\r\n        const start = currentJudgementPair!.currentAnnotationStart;\r\n        const end = action.payload.annotationPartIndex;\r\n        const actualStart = start < end ? start : end;\r\n        const actualEnd = end > start ? end : start;\r\n\r\n        currentJudgementPair!.annotatedRanges.push({\r\n          start: actualStart,\r\n          end: actualEnd,\r\n        });\r\n        currentJudgementPair!.currentAnnotationStart = undefined;\r\n      }\r\n    })\r\n    .addCase(deleteRange, (state, action) => {\r\n      const currentJudgementPair = state.judgementPairs.find(\r\n        pair => pair.id === state.currentJudgementPairId,\r\n      );\r\n      currentJudgementPair!.annotatedRanges = currentJudgementPair!.annotatedRanges.filter(\r\n        range => {\r\n          return !(\r\n            action.payload.annotationPartIndex >= range.start &&\r\n            action.payload.annotationPartIndex <= range.end\r\n          );\r\n        },\r\n      );\r\n    })\r\n    .addCase(setJudgementStatus, (state, action) => {\r\n      const judgementPair = state.judgementPairs.find(pair => pair.id === action.payload.id);\r\n      judgementPair!.status = action.payload.status;\r\n    })\r\n    .addCase(selectJudgementPair, (state, action) => {\r\n      if (state.currentJudgementPairId !== action.payload?.id) {\r\n        state.currentJudgementPairId = action.payload?.id;\r\n        state.currentJudgementPairSelectedOnMs = new Date().getTime();\r\n      }\r\n    })\r\n    .addCase(userActions.logout, () => {\r\n      // on logout, erase annotation state\r\n      return INITIAL_STATE;\r\n    }),\r\n);\r\n\r\nfunction areJudgementPairsEqual(jp1: PreloadJudgement, jp2: PreloadJudgement) {\r\n  return (\r\n    jp1.queryText === jp2.queryText &&\r\n    jp1.docAnnotationParts.length === jp2.docAnnotationParts.length &&\r\n    !jp1.docAnnotationParts.some((part, index) => jp2.docAnnotationParts[index] !== part)\r\n  );\r\n}\r\n\r\nexport const actions = {\r\n  preloadJudgements,\r\n  rateJudgementPair,\r\n  selectRangeStartEnd,\r\n  deleteRange,\r\n  setJudgementStatus,\r\n  selectJudgementPair,\r\n};\r\nexport default reducer;\r\n","import { httpClient } from '../http/http.client';\r\nimport { createLogger } from '../logger/logger';\r\nimport { store } from '../store/store';\r\nimport {\r\n  actions as annotationActions,\r\n  JudgementPairStatus,\r\n} from '../store/annotation/annotation.slice';\r\nimport { RelevanceLevel, RateLevels } from '../typings/enums';\r\n\r\nconst logger = createLogger('judgements.service');\r\n\r\nexport const judgementsService = {\r\n  preloadJudgements: async () => {\r\n    logger.info(`executing preload judgements...`);\r\n\r\n    const response = await httpClient.preloadJudgements(store.getState().user!.accessToken.val);\r\n\r\n    logger.info(`preload judgements succeeded! dispatching preload judgements...`, { response });\r\n    store.dispatch(annotationActions.preloadJudgements(response));\r\n  },\r\n\r\n  rateJudgementPair: async (relevanceLevel: RelevanceLevel) => {\r\n    logger.info(`executing rate judgement pair...`);\r\n\r\n    store.dispatch(annotationActions.rateJudgementPair({ relevanceLevel }));\r\n\r\n    const annotationState = store.getState().annotation;\r\n    const currentJudgementPair = annotationState.judgementPairs.find(\r\n      pair => pair.id === annotationState.currentJudgementPairId,\r\n    )!;\r\n    const currentRateLevel = RateLevels.find(\r\n      rateLevel => rateLevel.relevanceLevel === currentJudgementPair.relevanceLevel,\r\n    );\r\n\r\n    if (!currentRateLevel!.annotationRequired || currentJudgementPair!.annotatedRanges.length > 0) {\r\n      // if the chosen rate level does not require annotation, or it does and regions are\r\n      // annotated already,\r\n      // immediately submit current judgement and proceed\r\n      await judgementsService.submitCurrentJudgement();\r\n    }\r\n\r\n    logger.info(`rate judgement pair succeeded!`);\r\n  },\r\n\r\n  submitCurrentJudgement: async () => {\r\n    logger.info(`executing submit current judgement...`);\r\n\r\n    const annotationState = store.getState().annotation;\r\n    const currentJudgementPair = annotationState.judgementPairs.find(\r\n      pair => pair.id === annotationState.currentJudgementPairId,\r\n    )!;\r\n    const relevancePositions: number[] = [];\r\n    for (const annotatedRange of currentJudgementPair.annotatedRanges) {\r\n      for (let i = annotatedRange.start; i <= annotatedRange.end; i++) {\r\n        relevancePositions.push(i);\r\n      }\r\n    }\r\n\r\n    const now = new Date().getTime();\r\n    const durationUsedToJudgeMs = now - annotationState.currentJudgementPairSelectedOnMs!;\r\n\r\n    store.dispatch(\r\n      annotationActions.setJudgementStatus({\r\n        id: currentJudgementPair.id,\r\n        status: JudgementPairStatus.SEND_PENDING,\r\n      }),\r\n    );\r\n\r\n    try {\r\n      await httpClient.submitJudgement(\r\n        store.getState().user!.accessToken.val,\r\n        currentJudgementPair.id,\r\n        {\r\n          relevanceLevel: currentJudgementPair.relevanceLevel!,\r\n          relevancePositions,\r\n          durationUsedToJudgeMs,\r\n        },\r\n      );\r\n    } catch (error) {\r\n      logger.error(`submit current judgement failed!`, { id: currentJudgementPair.id, error });\r\n      store.dispatch(\r\n        annotationActions.setJudgementStatus({\r\n          id: currentJudgementPair.id,\r\n          status: JudgementPairStatus.SEND_FAILED,\r\n        }),\r\n      );\r\n      throw error;\r\n    }\r\n\r\n    store.dispatch(\r\n      annotationActions.setJudgementStatus({\r\n        id: currentJudgementPair.id,\r\n        status: JudgementPairStatus.SEND_SUCCESS,\r\n      }),\r\n    );\r\n\r\n    logger.info(`submit current judgement succeeded!`);\r\n  },\r\n};\r\n","import { createLogger } from '../../logger/logger';\r\nimport { RootStore } from '../store';\r\nimport { judgementsService } from '../../judgements/judgements.service';\r\nimport { actions as annotationActions, JudgementPairStatus } from '../annotation/annotation.slice';\r\nimport { UserRole } from '../user/user.slice';\r\n\r\nconst logger = createLogger('annotation.subscriptions');\r\n\r\nexport const setupSubscriptions = (store: RootStore) => {\r\n  // if no judgement pairs got loaded from the server yet, preload pairs\r\n  store.subscribe(() => {\r\n    const annotationState = store.getState().annotation;\r\n\r\n    const user = store.getState().user;\r\n    if (!user || !user.accessToken) {\r\n      logger.info(\r\n        'no judgement pairs got loaded from the server yet, but there is no access token available --> skip preload',\r\n      );\r\n      return;\r\n    }\r\n    if (user.role !== UserRole.ANNOTATOR) {\r\n      logger.info(\r\n        'no judgement pairs got loaded from the server yet, but user role is not annotator --> skip preload',\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (annotationState.remainingToFinish === undefined) {\r\n      logger.info('no judgement pairs got loaded from the server yet --> execute preload...');\r\n      judgementsService.preloadJudgements();\r\n    }\r\n  });\r\n\r\n  // if count of (local) judgement pairs does not fulfill threshold and there are remaining\r\n  // judgements to preload on the server --> execute preload.\r\n  // we count judgement pairs which are not judged yet or not sent to the server yet\r\n  const loadNextPairsSubscription: MemoizedSubscription = {\r\n    memoizeOnValue: subscribedStore => subscribedStore.getState().annotation.judgementPairs,\r\n    listener: subscribedStore => {\r\n      const annotationState = subscribedStore.getState().annotation;\r\n      if (\r\n        annotationState.remainingToFinish !== undefined &&\r\n        annotationState.judgementPairs.filter(\r\n          pair =>\r\n            pair.status === JudgementPairStatus.TO_JUDGE ||\r\n            pair.status === JudgementPairStatus.SEND_PENDING,\r\n        ).length <= 1 &&\r\n        annotationState.remainingToFinish > annotationState.judgementPairs.length\r\n      ) {\r\n        logger.info(\r\n          'count of preloaded judgement pairs does not fulfill threshold and ' +\r\n            'there are remaining judgements to preload on the server --> execute preload...',\r\n        );\r\n        judgementsService.preloadJudgements();\r\n      }\r\n    },\r\n  };\r\n  addMemoizedSubscription(store, loadNextPairsSubscription);\r\n\r\n  // set new currently selected judgement pair if list of judgement pairs changes\r\n  const setNextSelectedPairSubscription: MemoizedSubscription = {\r\n    memoizeOnValue: subscribedStore => subscribedStore.getState().annotation.judgementPairs,\r\n    listener: subscribedStore => {\r\n      const judgePairsOfStore = subscribedStore.getState().annotation.judgementPairs;\r\n\r\n      // select first pair which neither gets currently sent to the server nor was already sent to the server\r\n      const nextPair = judgePairsOfStore.find(pair => pair.status === JudgementPairStatus.TO_JUDGE);\r\n      subscribedStore.dispatch(annotationActions.selectJudgementPair(nextPair));\r\n    },\r\n  };\r\n  addMemoizedSubscription(store, setNextSelectedPairSubscription);\r\n};\r\n\r\ntype MemoizedSubscription = {\r\n  memoizeOnValue: (subscribedStore: RootStore) => any;\r\n  listener: (subscribedStore: RootStore) => void;\r\n};\r\n\r\nfunction addMemoizedSubscription(store: RootStore, subscription: MemoizedSubscription) {\r\n  let memoizedValue = subscription.memoizeOnValue(store);\r\n  store.subscribe(() => {\r\n    const newValueOfStore = subscription.memoizeOnValue(store);\r\n    if (memoizedValue !== newValueOfStore) {\r\n      memoizedValue = newValueOfStore;\r\n      subscription.listener(store);\r\n    }\r\n  });\r\n}\r\n","import { createLogger } from '../../logger/logger';\r\n\r\nconst logger = createLogger('store-logger-middleware');\r\n\r\nconst loggerMiddleware = (store: any) => (next: any) => (action: any) => {\r\n  logger.group(action.type);\r\n  logger.info('dispatching', action);\r\n  const result = next(action);\r\n  logger.info('next state', store.getState());\r\n  logger.groupEnd();\r\n  return result;\r\n};\r\n\r\nexport default loggerMiddleware;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport userReducer from './user/user.slice';\r\nimport annotationReducer from './annotation/annotation.slice';\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  annotation: annotationReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport { setupSubscriptions as setupUserSubscriptions } from './user/user.subscriptions';\r\nimport { setupSubscriptions as setupAnnotationSubscriptions } from './annotation/annotation.subscriptions';\r\nimport loggerMiddleware from './middleware/logger';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [loggerMiddleware, ...getDefaultMiddleware()],\r\n});\r\n\r\nif (process.env.NODE_ENV !== 'production' && (module as any).hot) {\r\n  (module as any).hot.accept('./reducers', () => store.replaceReducer(rootReducer));\r\n}\r\n\r\nconst subscriptions = [setupUserSubscriptions, setupAnnotationSubscriptions];\r\nsubscriptions.forEach(subscription => subscription(store));\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type RootStore = typeof store;\r\nexport type AppDispatch = RootStore['dispatch'];\r\n","import { httpClient } from '../http/http.client';\r\nimport { store } from '../store/store';\r\nimport { createLogger } from '../logger/logger';\r\nimport { actions as userActions } from '../store/user/user.slice';\r\n\r\nconst logger = createLogger('auth.service');\r\n\r\nexport const authService = {\r\n  login: async (username: string, password: string) => {\r\n    logger.info(`executing login...`, { username });\r\n\r\n    const loginResponse = await httpClient.login({ username, password });\r\n\r\n    logger.info(`login succeeded! dispatching authenticate...`, { loginResponse });\r\n    store.dispatch(userActions.authenticate(loginResponse));\r\n  },\r\n\r\n  refresh: async (refreshToken: string) => {\r\n    logger.info(`executing refresh...`, { refreshToken });\r\n\r\n    let refreshResponse;\r\n    try {\r\n      refreshResponse = await httpClient.refresh({ refreshToken });\r\n    } catch (err) {\r\n      logger.error(`refresh failed! dispatching logout...`, err);\r\n      store.dispatch(userActions.logout());\r\n      return;\r\n    }\r\n\r\n    logger.info(`refresh succeeded! dispatching authenticate...`, { refreshResponse });\r\n    store.dispatch(userActions.authenticate(refreshResponse));\r\n  },\r\n};\r\n","import React, { useState, useRef } from 'react';\r\n\r\nimport styles from './FloatingTextInput.module.css';\r\n\r\ntype FloatingLabelInputProps = React.DetailedHTMLProps<\r\n  React.HTMLAttributes<HTMLDivElement>,\r\n  HTMLDivElement\r\n>;\r\n\r\nconst FloatingLabelInput: React.FC<FloatingLabelInputProps> = ({ children, ...props }) => (\r\n  <div {...props} className={`${props.className} ${styles.floatingLabelInput}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\ntype FloatingLabelInputContainerProps = React.DetailedHTMLProps<\r\n  React.HTMLAttributes<HTMLDivElement>,\r\n  HTMLDivElement\r\n>;\r\n\r\nconst FloatingLabelInputContainer: React.FC<FloatingLabelInputContainerProps> = ({\r\n  children,\r\n  ...props\r\n}) => (\r\n  <div {...props} className={`${props.className} ${styles.floatingLabelInputContainer}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\ntype FloatingLabelProps = { active: boolean } & React.DetailedHTMLProps<\r\n  React.LabelHTMLAttributes<HTMLLabelElement>,\r\n  HTMLLabelElement\r\n>;\r\n\r\nconst FloatingLabel: React.FC<FloatingLabelProps> = ({ active, children, ...props }) => (\r\n  <label\r\n    {...props}\r\n    className={`${props.className} ${!!active && styles.floatingLabelActive} ${\r\n      styles.floatingLabel\r\n    }`}\r\n  >\r\n    {children}\r\n  </label>\r\n);\r\n\r\ntype FloatingInputProps = {\r\n  active: boolean;\r\n  inputRef: React.RefObject<HTMLInputElement>;\r\n} & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\nconst FloatingInput: React.FC<FloatingInputProps> = ({ children, active, inputRef, ...props }) => (\r\n  <input\r\n    {...props}\r\n    ref={inputRef}\r\n    onBlur={props.onBlur}\r\n    className={`${props.className} ${!!active && styles.floatingInputActive} ${\r\n      styles.floatingInput\r\n    }`}\r\n  >\r\n    {children}\r\n  </input>\r\n);\r\n\r\nconst FloatingTextInput: React.FC<any> = ({ id, label, type, className, value, ...otherProps }) => {\r\n  const [active, setActive] = useState(!!value && value.length > 0);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  function onFocus(event: any) {\r\n    setActive(true);\r\n    if (otherProps.onFocus) {\r\n      otherProps.onFocus(event);\r\n    }\r\n  }\r\n  function onBlur(event: any) {\r\n    if (!event.target.value || event.target.value.length === 0) {\r\n      setActive(false);\r\n    }\r\n    if (otherProps.onBlur) {\r\n      otherProps.onBlur(event);\r\n    }\r\n  }\r\n\r\n  function onContainerClick() {\r\n    inputRef.current!.focus();\r\n  }\r\n\r\n  return (\r\n    <FloatingLabelInput>\r\n      <FloatingLabelInputContainer onClick={onContainerClick} className={className}>\r\n        <FloatingLabel htmlFor={id} active={active}>\r\n          {label}\r\n        </FloatingLabel>\r\n        <FloatingInput\r\n          {...otherProps}\r\n          active={active}\r\n          id={id}\r\n          onBlur={onBlur}\r\n          onFocus={onFocus}\r\n          inputRef={inputRef}\r\n          type={type}\r\n        />\r\n      </FloatingLabelInputContainer>\r\n    </FloatingLabelInput>\r\n  );\r\n};\r\n\r\nexport default FloatingTextInput;\r\n","import React from 'react';\r\n\r\nimport styles from './LoadingIndicator.module.css';\r\n\r\nconst LoadingIndicator: React.FC = () => (\r\n  <div className={styles.ldsEllipsis}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","import React, { useState } from 'react';\r\n\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = React.forwardRef<\r\n  HTMLButtonElement,\r\n  {\r\n    buttonStyle?: 'bold' | 'normal';\r\n    buttonType?: 'primary' | 'normal';\r\n  } & React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n>(({ children, buttonStyle = 'normal', buttonType = 'normal', ...props }, ref) => {\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  function animateStart() {\r\n    setAnimate(true);\r\n  }\r\n\r\n  function animateEnd() {\r\n    setAnimate(false);\r\n  }\r\n\r\n  function onClick(e: React.MouseEvent<HTMLButtonElement>) {\r\n    if (typeof props.onClick === 'function') {\r\n      props.onClick(e);\r\n    }\r\n    animateStart();\r\n  }\r\n\r\n  function onTransitionEnd(e: React.TransitionEvent<HTMLButtonElement>) {\r\n    if (typeof props.onTransitionEnd === 'function') {\r\n      props.onTransitionEnd(e);\r\n    }\r\n    animateEnd();\r\n  }\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      onClick={onClick}\r\n      onTransitionEnd={onTransitionEnd}\r\n      ref={ref}\r\n      className={`${props.className} ${styles.button} ${animate && styles.animate} ${\r\n        buttonStyle === 'normal' ? styles.styleNormal : styles.styleBold\r\n      } ${buttonType === 'primary' && styles.typePrimary}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { Formik, Form, useField, FieldHookConfig } from 'formik';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styles from './Login.module.css';\r\nimport { authService } from '../../auth/auth.service';\r\nimport { RootState } from '../../store/store';\r\nimport FloatingTextInput from '../elements/FloatingTextInput';\r\nimport LoadingIndicator from '../elements/LoadingIndicator';\r\nimport Button from '../elements/Button';\r\n\r\nconst TextInput: React.FC<{ label: string } & FieldHookConfig<any> &\r\n  React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>> = ({\r\n  label,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  const showError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div>\r\n      <FloatingTextInput\r\n        className={`${styles.inputField} ${showError && styles.inputFieldError}`}\r\n        htmlFor={props.id || props.name}\r\n        label={label}\r\n        {...field}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Login = () => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const loggedIn = !!user;\r\n\r\n  if (loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.headline}>Fira</h1>\r\n      <div className={styles.inputArea}>\r\n        <span className={styles.inputHeadline}>Login</span>\r\n        <Formik\r\n          initialValues={{ username: '', password: '', loginError: '' }}\r\n          validate={values => {\r\n            const errors: any = {};\r\n            if (!values.username) {\r\n              errors.username = 'Required';\r\n            }\r\n            if (!values.password) {\r\n              errors.password = 'Required';\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={async (values, { setSubmitting, setErrors }) => {\r\n            try {\r\n              await authService.login(values.username, values.password);\r\n              // omit setSubmitting here because if login was successful, it will redirect and thus unmount the component\r\n            } catch (e) {\r\n              if (typeof e.getStatus === 'function' && e.getStatus() === 401) {\r\n                setErrors({ loginError: `Credentials invalid.` });\r\n              } else if (\r\n                (typeof e.message === 'string' && /Network Error/i.test(e.message)) ||\r\n                e.code === 'ECONNABORTED'\r\n              ) {\r\n                setErrors({ loginError: `Network error. Please make sure to be online.` });\r\n              } else {\r\n                setErrors({ loginError: `Unexpected error occured during login.` });\r\n              }\r\n              setSubmitting(false);\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting, errors }) => (\r\n            <Form>\r\n              <TextInput\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"off\"\r\n                autoCorrect=\"off\"\r\n                autoCapitalize=\"off\"\r\n              />\r\n              <TextInput\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                autoComplete=\"off\"\r\n                autoCorrect=\"off\"\r\n                autoCapitalize=\"off\"\r\n              />\r\n              {/* {errors.loginError && errors.loginError.length > 0 && (\r\n                <ul className={styles.errorList}>\r\n                  <li>\r\n                    <span>{errors.loginError}</span>\r\n                  </li>\r\n                </ul>\r\n              )} */}\r\n              <Button buttonStyle=\"bold\" buttonType=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n                {!isSubmitting ? <span>Submit</span> : <LoadingIndicator />}\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { httpClient } from '../http/http.client';\r\nimport { createLogger } from '../logger/logger';\r\nimport { store } from '../store/store';\r\nimport { UpdateConfig } from '../typings/fira-be-typings';\r\n\r\nconst logger = createLogger('admin.service');\r\n\r\nexport const adminService = {\r\n  exportJudgements: async () => {\r\n    logger.info(`executing export of judgements...`);\r\n\r\n    const response = await httpClient.exportJudgements(store.getState().user!.accessToken.val);\r\n    saveTsv('judgements.tsv', response);\r\n\r\n    logger.info(`export of judgements succeeded!`, { response });\r\n  },\r\n\r\n  updateConfig: async (config: UpdateConfig) => {\r\n    logger.info(`executing update of config...`);\r\n\r\n    await httpClient.updateConfig(store.getState().user!.accessToken.val, config);\r\n\r\n    logger.info(`update of config succeeded!`);\r\n  },\r\n\r\n  getStatistics: async () => {\r\n    logger.info(`executing retrieval of statistics...`);\r\n\r\n    const response = await httpClient.getStatistics(store.getState().user!.accessToken.val);\r\n\r\n    logger.info(`retrieval of statistics succeeded!`, { response });\r\n    return response;\r\n  },\r\n};\r\n\r\nfunction saveTsv(filename: string, data: string) {\r\n  const blob = new Blob([data], { type: 'text/tsv' });\r\n  const elem = window.document.createElement('a');\r\n  elem.href = window.URL.createObjectURL(blob);\r\n  elem.download = filename;\r\n  document.body.appendChild(elem);\r\n  elem.click();\r\n  document.body.removeChild(elem);\r\n}\r\n","export function assertUnreachable(x: never): never {\r\n  throw new Error('Should not get here');\r\n}\r\n","import { useDispatch } from 'react-redux';\r\n\r\nexport const useActionsWithDispatch = <T extends {}>(actions: T) => {\r\n  // use type \"Dispatch\" just to clarify that dispatching is automatically done\r\n  type Dispatch<FuncType> = FuncType;\r\n\r\n  type DispatchType = {\r\n    [P in keyof typeof actions]: Dispatch<typeof actions[P]>;\r\n  };\r\n\r\n  const dispatch = useDispatch<any>();\r\n\r\n  const actionsWithDispatch: any = {};\r\n\r\n  for (const action in actions) {\r\n    if (actions.hasOwnProperty(action)) {\r\n      actionsWithDispatch[action] = (...args: any[]) => dispatch((actions as any)[action](...args));\r\n    }\r\n  }\r\n\r\n  return actionsWithDispatch as DispatchType;\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../store';\r\nimport { UserRole } from './user.slice';\r\nimport { assertUnreachable } from '../../util/types.util';\r\nimport { actions } from './user.slice';\r\nimport { useActionsWithDispatch } from '../util/actions.util';\r\n\r\nexport function useUserState() {\r\n  const userRole = useSelector((state: RootState) => {\r\n    if (!state.user) {\r\n      return undefined;\r\n    } else if (state.user.role === UserRole.ADMIN || state.user.role === UserRole.ANNOTATOR) {\r\n      return state.user.role;\r\n    } else {\r\n      assertUnreachable(state.user.role);\r\n    }\r\n  });\r\n  const userAcknowledgedInfoScreen = useSelector((state: RootState) => {\r\n    return !!state.user?.acknowledgedInfoScreen;\r\n  });\r\n\r\n  return { userRole, userAcknowledgedInfoScreen };\r\n}\r\n\r\nexport const useUserActions = () => useActionsWithDispatch(actions);\r\n","import React, { useState } from 'react';\r\nimport { Manager, Reference, Popper } from 'react-popper';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport styles from './Menu.module.css';\r\nimport Button from './Button';\r\nimport { useOnViewportClick } from '../util/events.hooks';\r\nimport { useUserActions } from '../../store/user/user.hooks';\r\nimport { INFO_RELATIVE_URL } from '../App';\r\n\r\nconst MenuButton = React.forwardRef<HTMLButtonElement, { onClick: () => void }>(\r\n  ({ onClick }, ref) => (\r\n    <Button ref={ref} className={styles.menuButton} onClick={onClick}>\r\n      {/* https://material.io/resources/icons/?icon=more_vert&style=baseline */}\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n      </svg>\r\n    </Button>\r\n  ),\r\n);\r\n\r\nconst Menu: React.FC = () => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  useOnViewportClick(() => setShowMenu(false));\r\n  const userActions = useUserActions();\r\n  const history = useHistory();\r\n\r\n  function onLogout() {\r\n    userActions.logout();\r\n  }\r\n\r\n  function onShowStartScreen() {\r\n    history.push(INFO_RELATIVE_URL);\r\n  }\r\n\r\n  function toggleShowMenu() {\r\n    setShowMenu(oldVal => !oldVal);\r\n  }\r\n\r\n  function createMenuButton(ref?: React.Ref<HTMLButtonElement>) {\r\n    return <MenuButton onClick={toggleShowMenu} ref={ref} />;\r\n  }\r\n\r\n  return !showMenu ? (\r\n    createMenuButton()\r\n  ) : (\r\n    <Manager>\r\n      <Reference>{({ ref }) => createMenuButton(ref)}</Reference>\r\n      <Popper placement=\"bottom-start\">\r\n        {({ ref, style, placement }) => (\r\n          <div ref={ref} style={style} data-placement={placement}>\r\n            <Button onClick={onShowStartScreen}>Go to Info Screen</Button>\r\n            <Button onClick={onLogout}>Logout</Button>\r\n          </div>\r\n        )}\r\n      </Popper>\r\n    </Manager>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { useEffect } from 'react';\r\n\r\nexport function useKeyupEvent(keyFunctionMap: { [P: string]: () => void }) {\r\n  useEffect(() => {\r\n    const keyUpHandler = (e: KeyboardEvent) => {\r\n      const key = e.code;\r\n      if (keyFunctionMap.hasOwnProperty(key)) {\r\n        keyFunctionMap[key]();\r\n      }\r\n    };\r\n    document.addEventListener('keyup', keyUpHandler, { passive: true });\r\n    return () => document.removeEventListener('keyup', keyUpHandler);\r\n  });\r\n}\r\n\r\nexport function useOnViewportClick(onViewportClick: () => void) {\r\n  useEffect(() => {\r\n    const viewportClickHandler = () => onViewportClick();\r\n    document.addEventListener('click', viewportClickHandler, { passive: true });\r\n    return () => document.removeEventListener('click', viewportClickHandler);\r\n  });\r\n}\r\n","import React from 'react';\n\nimport styles from './Line.module.css';\n\nconst Line: React.FC<{ orientation: 'horizontal' }> = () => (\n  <div className={styles.horizontalLine} />\n);\n\nexport default Line;\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport styles from './Admin.module.css';\r\nimport { Statistic } from '../../typings/fira-be-typings';\r\nimport { JudgementMode } from '../../typings/enums';\r\nimport { adminService } from '../../admin/admin.service';\r\nimport Button from '../elements/Button';\r\nimport Menu from '../elements/Menu';\r\nimport LoadingIndicator from '../elements/LoadingIndicator';\r\nimport Line from '../elements/Line';\r\n\r\nconst Admin: React.FC = () => {\r\n  const [statistics, updateStatistics] = useState<Statistic[] | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    async function fetchStatisticsAndUpdate() {\r\n      updateStatistics((await adminService.getStatistics()).statistics);\r\n    }\r\n\r\n    fetchStatisticsAndUpdate();\r\n  }, [updateStatistics]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.adminArea}>\r\n        <div className={styles.actionBar}>\r\n          <Button\r\n            className={styles.button}\r\n            buttonType=\"primary\"\r\n            onClick={adminService.exportJudgements}\r\n          >\r\n            Export Judgements\r\n          </Button>\r\n          <Menu />\r\n        </div>\r\n        <Line orientation=\"horizontal\" />\r\n        <Formik\r\n          initialValues={{\r\n            judgementMode: JudgementMode.SCORING_AND_SELECT_SPANS,\r\n            rotateDocumentText: 'true',\r\n          }}\r\n          onSubmit={async (values, { setSubmitting }) => {\r\n            try {\r\n              await adminService.updateConfig({\r\n                ...values,\r\n                rotateDocumentText: values.rotateDocumentText === 'true',\r\n              });\r\n              setSubmitting(true);\r\n            } catch (e) {\r\n              setSubmitting(false);\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form className={styles.actionBar}>\r\n              <div className={styles.options}>\r\n                <div>\r\n                  <label htmlFor=\"judgementMode\">Judgement Mode:</label>\r\n                  <Field name=\"judgementMode\" as=\"select\">\r\n                    {Object.values(JudgementMode).map(judgementMode => (\r\n                      <option key={judgementMode} value={judgementMode}>\r\n                        {judgementMode}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"rotateDocumentText\">Rotate Document Text:</label>\r\n                  <Field name=\"rotateDocumentText\" as=\"select\">\r\n                    <option value=\"true\">true</option>\r\n                    <option value=\"false\">false</option>\r\n                  </Field>\r\n                </div>\r\n              </div>\r\n              <Button\r\n                className={styles.button}\r\n                buttonType=\"primary\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n              >\r\n                {!isSubmitting ? 'Update Config' : <LoadingIndicator />}\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Line orientation=\"horizontal\" />\r\n        <div className={styles.statisticsContainer}>\r\n          {statistics &&\r\n            statistics.map(statistic => (\r\n              <div key={statistic.id} className={styles.statistic}>\r\n                <div className={styles.statisticValue}>{statistic.value}</div>\r\n                <div className={styles.statisticLabel}>{statistic.label}</div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","// tslint:disable-next-line:no-empty\r\nexport const noop = () => {};\r\n","import React from 'react';\r\n\r\nimport styles from './RateButton.module.css';\r\nimport Button from '../elements/Button';\r\nimport { RateLevelType } from '../../typings/enums';\r\n\r\nconst RateButton: React.FC<{ rateLevel: RateLevelType; onClick: () => void }> = ({\r\n  rateLevel,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Button\r\n        style={{\r\n          background: rateLevel.buttonColor,\r\n        }}\r\n        className={styles.button}\r\n        onClick={onClick}\r\n      >\r\n        {rateLevel.text}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RateButton;\r\n","import React from 'react';\r\nimport { Manager, Reference, Popper } from 'react-popper';\r\n\r\nimport styles from './AnnotationPart.module.css';\r\nimport Button from '../elements/Button';\r\n\r\nconst AnnotationPart: React.FC<{\r\n  text: string;\r\n  isRangeStart: boolean;\r\n  isInSelectedRange: boolean;\r\n  showTooltip: boolean;\r\n  annotationIsAllowedOnPart: boolean;\r\n  annotationIsAllowedInGeneral: boolean;\r\n  onPartClick: () => void;\r\n  onTooltipClick: () => void;\r\n}> = ({\r\n  text,\r\n  isRangeStart,\r\n  isInSelectedRange,\r\n  showTooltip,\r\n  annotationIsAllowedOnPart,\r\n  annotationIsAllowedInGeneral,\r\n  onPartClick,\r\n  onTooltipClick,\r\n}) => {\r\n  // replace blank by fixed-width blank character (otherwise, styles like border/box-shadow don't apply)\r\n  const textToShow = text.replace(' ', '\\u00a0');\r\n\r\n  // set css class if part is start of the current selected range\r\n  const currentRangeStartStyle = isRangeStart ? styles.rangeStart : '';\r\n\r\n  // highlight the span as selectable (e.g., on hover) if annotation on the part is allowed\r\n  const annotationAllowedOnPartStyle = annotationIsAllowedOnPart\r\n    ? styles.annotationAllowedOnPart\r\n    : '';\r\n\r\n  // apply additional styles if annotation is allowed (e.g., spacing for mobile devices)\r\n  const annotationAllowedInGeneralStyle = annotationIsAllowedInGeneral\r\n    ? styles.annotationAllowedInGeneral\r\n    : '';\r\n\r\n  const annotatePartSpan = (ref?: any) => (\r\n    <span\r\n      ref={ref}\r\n      onClick={onPartClick}\r\n      className={`${styles.annotatePart} ${currentRangeStartStyle} ${\r\n        !!isInSelectedRange ? styles.isInRange : ''\r\n      } ${annotationAllowedOnPartStyle} ${annotationAllowedInGeneralStyle}`}\r\n    >\r\n      {textToShow}\r\n    </span>\r\n  );\r\n\r\n  return !showTooltip ? (\r\n    annotatePartSpan()\r\n  ) : (\r\n    <Manager>\r\n      <Reference>{({ ref }) => annotatePartSpan(ref)}</Reference>\r\n      <Popper placement=\"top\">\r\n        {({ ref, style, placement }) => (\r\n          <div ref={ref} style={style} data-placement={placement}>\r\n            <Button\r\n              buttonType=\"primary\"\r\n              className={styles.annotatePartTooltipButton}\r\n              onClick={onTooltipClick}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"14\"\r\n                height=\"18\"\r\n                viewBox=\"5 3 14 18\"\r\n                fill=\"white\"\r\n              >\r\n                <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n              </svg>\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Popper>\r\n    </Manager>\r\n  );\r\n};\r\n\r\nexport default AnnotationPart;\r\n","import React, { useState } from 'react';\r\n\r\nimport styles from './Annotation.module.css';\r\nimport { RelevanceLevel, RateLevels, JudgementMode } from '../../typings/enums';\r\nimport { judgementsService } from '../../judgements/judgements.service';\r\nimport { noop } from '../../util/functions';\r\nimport Button from '../elements/Button';\r\nimport { useKeyupEvent as useKeyupHandler } from '../util/events.hooks';\r\nimport RateButton from './RateButton';\r\nimport { JudgementPair } from '../../store/annotation/annotation.slice';\r\nimport AnnotationPart from './AnnotationPart';\r\nimport Menu from '../elements/Menu';\r\nimport Line from '../elements/Line';\r\n\r\nconst Annotation: React.FC<{\r\n  currentJudgementPair: JudgementPair;\r\n  remainingToFinish: number;\r\n  alreadyFinished: number;\r\n  selectRangeStartEnd: ({ annotationPartIndex }: { annotationPartIndex: number }) => void;\r\n  deleteRange: ({ annotationPartIndex }: { annotationPartIndex: number }) => void;\r\n}> = ({\r\n  currentJudgementPair,\r\n  remainingToFinish,\r\n  alreadyFinished,\r\n  selectRangeStartEnd,\r\n  deleteRange,\r\n}) => {\r\n  const [tooltipAnnotatePartIndex, setTooltipAnnotatePartIndex] = useState<number | undefined>(\r\n    undefined,\r\n  );\r\n\r\n  function createJudgementFn(relevanceLevel: RelevanceLevel) {\r\n    return () => judgementsService.rateJudgementPair(relevanceLevel);\r\n  }\r\n\r\n  useKeyupHandler({\r\n    Digit1: createJudgementFn(RelevanceLevel.MISLEADING_ANSWER),\r\n    Digit2: createJudgementFn(RelevanceLevel.NOT_RELEVANT),\r\n    Digit3: createJudgementFn(RelevanceLevel.TOPIC_RELEVANT_DOES_NOT_ANSWER),\r\n    Digit4: createJudgementFn(RelevanceLevel.GOOD_ANSWER),\r\n    Digit5: createJudgementFn(RelevanceLevel.PERFECT_ANSWER),\r\n  });\r\n\r\n  const currentRateLevel = RateLevels.find(\r\n    rateLevel => rateLevel.relevanceLevel === currentJudgementPair.relevanceLevel,\r\n  );\r\n\r\n  // compute fraction of finished annotation; used for progress bar\r\n  const annotationTarget = remainingToFinish + alreadyFinished;\r\n  const finishedFraction = (alreadyFinished / annotationTarget) * 100;\r\n\r\n  // compute some boolean variables needed to guide the user throw the annotation process\r\n  const ratingRequired = !currentRateLevel;\r\n  const currentSelectionNotFinished = currentJudgementPair.currentAnnotationStart !== undefined;\r\n  const annotationIsAllowedInGeneral =\r\n    currentJudgementPair.mode === JudgementMode.SCORING_AND_SELECT_SPANS;\r\n  const annotationIsRequired =\r\n    annotationIsAllowedInGeneral &&\r\n    !!currentRateLevel?.annotationRequired &&\r\n    currentJudgementPair.annotatedRanges.length === 0;\r\n\r\n  function hideTooltip() {\r\n    setTooltipAnnotatePartIndex(undefined);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {finishedFraction !== undefined && (\r\n        <div style={{ width: `${finishedFraction}%` }} className={styles.progressBar} />\r\n      )}\r\n      <div className={styles.container} onClickCapture={hideTooltip}>\r\n        <div className={styles.actionBar}>\r\n          <div className={styles.queryText}>{currentJudgementPair.queryText}</div>\r\n          <Menu />\r\n        </div>\r\n        <Line orientation=\"horizontal\" />\r\n        <div key={currentJudgementPair.id} className={styles.annotationArea}>\r\n          {currentJudgementPair.docAnnotationParts.map((annotationPart, i) => {\r\n            // determine if part is in one of the selected ranges\r\n            const isInSelectedRange = currentJudgementPair.annotatedRanges.some(\r\n              range => range.start <= i && range.end >= i,\r\n            );\r\n\r\n            /*\r\n             * annotation of a part is allowed if\r\n             * - the corresponding judgement mode is set,\r\n             * - it is no whitespace\r\n             * - and the part is not already part of a selected region\r\n             */\r\n            const canAnnotatePart =\r\n              currentJudgementPair.mode === JudgementMode.SCORING_AND_SELECT_SPANS &&\r\n              annotationPart !== ' ' &&\r\n              !isInSelectedRange;\r\n\r\n            return (\r\n              <AnnotationPart\r\n                key={i}\r\n                text={annotationPart}\r\n                isRangeStart={currentJudgementPair.currentAnnotationStart === i}\r\n                isInSelectedRange={isInSelectedRange}\r\n                showTooltip={tooltipAnnotatePartIndex === i}\r\n                annotationIsAllowedOnPart={canAnnotatePart}\r\n                annotationIsAllowedInGeneral={annotationIsAllowedInGeneral}\r\n                onPartClick={\r\n                  canAnnotatePart\r\n                    ? () => selectRangeStartEnd({ annotationPartIndex: i })\r\n                    : isInSelectedRange\r\n                    ? () => setTooltipAnnotatePartIndex(i)\r\n                    : noop\r\n                }\r\n                onTooltipClick={() => {\r\n                  deleteRange({ annotationPartIndex: i });\r\n                  hideTooltip();\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={styles.footer}>\r\n          {ratingRequired ? (\r\n            RateLevels.map(rateButton => (\r\n              <RateButton\r\n                key={rateButton.relevanceLevel}\r\n                rateLevel={rateButton}\r\n                onClick={createJudgementFn(rateButton.relevanceLevel)}\r\n              />\r\n            ))\r\n          ) : (\r\n            <>\r\n              <span className={styles.guideText}>\r\n                {currentSelectionNotFinished ? (\r\n                  <>Finish your selection</>\r\n                ) : annotationIsRequired ? (\r\n                  <>Please select the relevant regions of the document.</>\r\n                ) : (\r\n                  <>Feel free to add more relevant regions or go to the next judgement pair.</>\r\n                )}\r\n              </span>\r\n              <Button\r\n                buttonType=\"primary\"\r\n                style={{ width: '60px', height: '50px' }}\r\n                disabled={currentSelectionNotFinished || annotationIsRequired}\r\n                onClick={() => judgementsService.submitCurrentJudgement()}\r\n              >\r\n                Next\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Annotation;\r\n","import React from 'react';\r\n\r\nimport Annotation from './Annotation';\r\nimport { useAnnotationState, useAnnotationActions } from '../../store/annotation/annotation.hooks';\r\n\r\nconst AnnotationContainer: React.FC = () => {\r\n  const { remainingToFinish, alreadyFinished, currentJudgementPair } = useAnnotationState();\r\n  const { selectRangeStartEnd, deleteRange } = useAnnotationActions();\r\n\r\n  /*\r\n   * - if we know that no annotations must be finished anymore\r\n   *   --> render finished screen\r\n   * - if we don't know how many annotations must be finished,\r\n   *   or if we currently have no judgement pair to show\r\n   *   --> render loading screen\r\n   * - else, i.e. if we know that at least one judgement must be finished\r\n   *   and we have a judgement pair to show\r\n   *   --> render annotation screen\r\n   */\r\n\r\n  if (remainingToFinish !== undefined && remainingToFinish <= 0) {\r\n    return (\r\n      // TODO implement finished screen\r\n      <div>Finished!</div>\r\n    );\r\n  }\r\n\r\n  return remainingToFinish === undefined || !currentJudgementPair ? (\r\n    // TODO implement loading screen\r\n    <div>Loading...</div>\r\n  ) : (\r\n    <Annotation\r\n      currentJudgementPair={currentJudgementPair}\r\n      remainingToFinish={remainingToFinish}\r\n      alreadyFinished={alreadyFinished ?? 0}\r\n      selectRangeStartEnd={selectRangeStartEnd}\r\n      deleteRange={deleteRange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AnnotationContainer;\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { actions, JudgementPairStatus } from './annotation.slice';\r\nimport { RootState } from '../store';\r\nimport { useActionsWithDispatch } from '../util/actions.util';\r\n\r\nexport const useAnnotationActions = () => useActionsWithDispatch(actions);\r\n\r\nexport const useAnnotationState = () => {\r\n  const pairsSuccessfullySent = useSelector((state: RootState) =>\r\n    state.annotation.judgementPairs.filter(\r\n      pair => pair.status === JudgementPairStatus.SEND_SUCCESS,\r\n    ),\r\n  );\r\n\r\n  const remainingToFinish = useSelector((state: RootState) => {\r\n    return state.annotation.remainingToFinish === undefined\r\n      ? undefined\r\n      : state.annotation.remainingToFinish - pairsSuccessfullySent.length;\r\n  });\r\n  const alreadyFinished = useSelector((state: RootState) => {\r\n    return state.annotation.alreadyFinished === undefined\r\n      ? undefined\r\n      : state.annotation.alreadyFinished + pairsSuccessfullySent.length;\r\n  });\r\n  const currentJudgementPair = useSelector((state: RootState) =>\r\n    state.annotation.judgementPairs.find(\r\n      pair => pair.id === state.annotation.currentJudgementPairId,\r\n    ),\r\n  );\r\n\r\n  return {\r\n    remainingToFinish,\r\n    alreadyFinished,\r\n    currentJudgementPair,\r\n  };\r\n};\r\n","import { createLogger } from '../logger/logger';\r\nimport { store } from '../store/store';\r\nimport { actions as userActions } from '../store/user/user.slice';\r\n\r\nconst logger = createLogger('annotators.service');\r\n\r\nexport const annotatorsService = {\r\n  acknowledgeInfoScreen: (redirectOnSuccess: () => void) => {\r\n    logger.info(`executing acknowledgement of info screen...`);\r\n\r\n    store.dispatch(userActions.acknowledgeInfoScreen({ acknowledgedInfoScreen: true }));\r\n    redirectOnSuccess();\r\n\r\n    logger.info(`acknowledgement of info screen succeeded!`);\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Button from '../elements/Button';\r\nimport { annotatorsService } from '../../annotators/annotators.service';\r\nimport { ANNOTATE_RELATIVE_URL } from '../App';\r\n\r\nconst AnnotationInfo: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <span>Info screen placeholder</span>\r\n      <Button\r\n        buttonType=\"primary\"\r\n        onClick={() =>\r\n          annotatorsService.acknowledgeInfoScreen(() => history.push(ANNOTATE_RELATIVE_URL))\r\n        }\r\n      >\r\n        Annotate\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnnotationInfo;\r\n","import React from 'react';\r\nimport { RouteProps, Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../store/store';\r\nimport { UserRole } from '../store/user/user.slice';\r\n\r\ntype PrivateRouteProps = RouteProps & {\r\n  requiredRole: UserRole;\r\n};\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ requiredRole, ...rest }) => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n\r\n  if (!!user && user?.role === requiredRole) {\r\n    return <Route {...rest} />;\r\n  } else {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, useRouteMatch } from 'react-router-dom';\r\n\r\nimport styles from './App.module.css';\r\nimport Login from './login/Login';\r\nimport Admin from './admin/Admin';\r\nimport AnnotationContainer from './annotation/AnnotationContainer';\r\nimport AnnotationInfo from './annotation/AnnotationInfo';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { UserRole } from '../store/user/user.slice';\r\nimport { useUserState } from '../store/user/user.hooks';\r\nimport { assertUnreachable } from '../util/types.util';\r\n\r\nconst RouteToPage: React.FC = () => {\r\n  const { userRole } = useUserState();\r\n\r\n  if (!userRole) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else if (userRole === UserRole.ADMIN) {\r\n    return <Redirect to=\"/admin\" />;\r\n  } else if (userRole === UserRole.ANNOTATOR) {\r\n    return <Redirect to=\"/annotator\" />;\r\n  } else {\r\n    assertUnreachable(userRole);\r\n  }\r\n};\r\n\r\nexport const ANNOTATE_RELATIVE_URL = 'annotate';\r\nexport const INFO_RELATIVE_URL = 'info';\r\n\r\nconst AnnotatorRouter: React.FC = () => {\r\n  const match = useRouteMatch();\r\n  const { userAcknowledgedInfoScreen } = useUserState();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/${ANNOTATE_RELATIVE_URL}`}>\r\n        {!userAcknowledgedInfoScreen ? (\r\n          // on this device, the info screen was never shown and\r\n          // acknowledged by the user --> show screen\r\n          <Redirect to={`${match.path}/${INFO_RELATIVE_URL}`} />\r\n        ) : (\r\n          <AnnotationContainer />\r\n        )}\r\n      </Route>\r\n      <Route path={`${match.path}/${INFO_RELATIVE_URL}`}>\r\n        <AnnotationInfo />\r\n      </Route>\r\n      <Redirect to={`${match.path}/${ANNOTATE_RELATIVE_URL}`} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className={styles.app}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <RouteToPage />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <PrivateRoute path=\"/admin\" requiredRole={UserRole.ADMIN}>\r\n            <Admin />\r\n          </PrivateRoute>\r\n          <PrivateRoute path=\"/annotator\" requiredRole={UserRole.ANNOTATOR}>\r\n            <AnnotatorRouter />\r\n          </PrivateRoute>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { browserStorage } from '../browser-storage/browser-storage';\r\nimport { store } from '../store/store';\r\nimport { actions as userActions } from '../store/user/user.slice';\r\nimport { createLogger } from '../logger/logger';\r\n\r\nconst logger = createLogger('load-stored-user');\r\n\r\nexport function loadStoredUser() {\r\n  logger.info('load user from browser storage');\r\n  const storedUser = browserStorage.getUser();\r\n\r\n  if (storedUser) {\r\n    logger.info('stored user found. dispatching authenticate and acknowledge info screen...', {\r\n      storedUser,\r\n    });\r\n    store.dispatch(userActions.authenticate(storedUser));\r\n    store.dispatch(\r\n      userActions.acknowledgeInfoScreen({\r\n        acknowledgedInfoScreen: storedUser.acknowledgedInfoScreen,\r\n      }),\r\n    );\r\n  } else {\r\n    logger.info('no stored user found');\r\n  }\r\n}\r\n","import { loadStoredUser } from './load-stored-user';\r\nimport { createLogger } from '../logger/logger';\r\n\r\nconst bootScripts = [loadStoredUser];\r\n\r\nconst logger = createLogger('boot');\r\n\r\nexport const executeBootScripts = () => {\r\n  logger.info('executing boot scripts...');\r\n\r\n  bootScripts.forEach(bootScript => bootScript());\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './ui/App';\r\nimport { store } from './store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { executeBootScripts } from './boot/boot';\r\n\r\nexecuteBootScripts();\r\n\r\nconst renderApp = () =>\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n  );\r\n\r\nif (process.env.NODE_ENV !== 'production' && (module as any).hot) {\r\n  (module as any).hot.accept('./ui/App', renderApp);\r\n}\r\n\r\nrenderApp();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBar\":\"Annotation_progressBar__3Zl_I\",\"container\":\"Annotation_container__uXhm7\",\"actionBar\":\"Annotation_actionBar__1lfnI\",\"queryText\":\"Annotation_queryText__3rHCG\",\"annotationArea\":\"Annotation_annotationArea__2Ta-7\",\"footer\":\"Annotation_footer__NuKUI\",\"guideText\":\"Annotation_guideText__3U2FU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__24P7j\",\"inputArea\":\"Login_inputArea__2NGiA\",\"headline\":\"Login_headline__sd4WU\",\"inputHeadline\":\"Login_inputHeadline__3T4gw\",\"errorList\":\"Login_errorList__3F7_7\",\"inputField\":\"Login_inputField__24c21\",\"inputFieldError\":\"Login_inputFieldError__1qmtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floatingLabelInput\":\"FloatingTextInput_floatingLabelInput__1efr1\",\"floatingLabelInputContainer\":\"FloatingTextInput_floatingLabelInputContainer__2LY7N\",\"floatingLabel\":\"FloatingTextInput_floatingLabel__p_hYS\",\"floatingLabelActive\":\"FloatingTextInput_floatingLabelActive__3cGGa\",\"floatingInput\":\"FloatingTextInput_floatingInput__k7JFP\",\"floatingInputActive\":\"FloatingTextInput_floatingInputActive__1t44z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"annotatePart\":\"AnnotationPart_annotatePart__2KO7z\",\"rangeStart\":\"AnnotationPart_rangeStart__3I0cO\",\"isInRange\":\"AnnotationPart_isInRange__3rg58\",\"annotationAllowedOnPart\":\"AnnotationPart_annotationAllowedOnPart__Io1FP\",\"annotationAllowedInGeneral\":\"AnnotationPart_annotationAllowedInGeneral__2kMIW\",\"annotatePartTooltipButton\":\"AnnotationPart_annotatePartTooltipButton__1RKRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__aUVEj\",\"typePrimary\":\"Button_typePrimary__3vapG\",\"styleBold\":\"Button_styleBold__OSRgP\",\"styleNormal\":\"Button_styleNormal__21gUz\",\"animate\":\"Button_animate__P4pSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RateButton_container__34zEJ\",\"button\":\"RateButton_button__31aTD\"};"],"sourceRoot":""}