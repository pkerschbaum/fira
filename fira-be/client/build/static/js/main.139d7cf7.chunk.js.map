{"version":3,"sources":["ui/App.module.css","ui/elements/LoadingIndicator.module.css","ui/elements/Menu.module.css","ui/elements/Line.module.css","ui/admin/Admin.module.css","http/http.exception.ts","logger/logger.ts","http/http.client.ts","typings/enums.ts","browser-storage/browser-storage.ts","store/user/user.subscriptions.ts","store/user/user.slice.ts","store/annotation/annotation.slice.ts","judgements/judgements.service.ts","store/annotation/annotation.subscriptions.ts","store/middleware/logger.ts","store/reducers.ts","store/store.ts","auth/auth.service.ts","ui/elements/FloatingTextInput.tsx","ui/elements/LoadingIndicator.tsx","ui/elements/Button.tsx","ui/login/Login.tsx","admin/admin.service.ts","util/types.util.ts","store/util/actions.util.ts","store/user/user.hooks.ts","ui/elements/Menu.tsx","ui/util/events.hooks.ts","ui/elements/Line.tsx","ui/admin/Admin.tsx","util/functions.ts","ui/annotation/RateButton.tsx","ui/annotation/AnnotationPart.tsx","ui/annotation/Annotation.tsx","ui/annotation/AnnotationContainer.tsx","store/annotation/annotation.hooks.ts","ui/PrivateRoute.tsx","ui/App.tsx","serviceWorker.ts","boot/load-stored-user.ts","boot/boot.ts","index.tsx","ui/annotation/Annotation.module.css","ui/elements/FloatingTextInput.module.css","ui/elements/Button.module.css","ui/annotation/AnnotationPart.module.css","ui/login/Login.module.css","ui/annotation/RateButton.module.css"],"names":["module","exports","HttpException","errorText","status","message","this","Error","createLogger","context","logWithContext","logFn","optionalParams","debug","console","info","error","dir","group","groupEnd","axiosClient","axios","create","timeout","logger","httpClient","loginRequest","a","async","username","post","data","response","refreshRequest","attempt","lastError","accessToken","headers","authorization","judgementId","submitJudgementRequest","put","get","updateConfigRequest","ms","Promise","res","setTimeout","JudgementMode","RelevanceLevel","browserStorage","user","localStorage","setItem","JSON","stringify","removeItem","storedUser","getItem","currentlyStoredUser","parse","UserRole","RateLevels","text","relevanceLevel","MISLEADING_ANSWER","annotationRequired","buttonColor","NOT_RELEVANT","TOPIC_RELEVANT_DOES_NOT_ANSWER","GOOD_ANSWER","PERFECT_ANSWER","JudgementPairStatus","authenticate","createAction","logout","reducer","createReducer","builder","addCase","state","action","accessTokenJwtPayload","jwt","payload","refreshTokenJwtPayload","refreshToken","isAdmin","resource_access","roles","some","role","val","expiry","exp","ADMIN","ANNOTATOR","actions","INITIAL_STATE","judgementPairs","preloadJudgements","rateJudgementPair","selectRangeStartEnd","deleteRange","setJudgementStatus","selectJudgementPair","alreadyFinished","remainingToFinish","judgementPairsReceived","judgements","map","judgement","jp1","jp2","localEquivalentPair","find","pair","id","queryText","docAnnotationParts","length","part","index","annotatedRanges","TO_JUDGE","currentJudgementPair","currentJudgementPairId","rateLevel","currentAnnotationStart","undefined","annotationPartIndex","start","end","actualStart","actualEnd","push","filter","range","currentJudgementPairSelectedOnMs","Date","getTime","userActions","judgementsService","store","getState","dispatch","annotationActions","annotationState","annotation","submitCurrentJudgement","relevancePositions","annotatedRange","i","now","durationUsedToJudgeMs","SEND_PENDING","SEND_FAILED","SEND_SUCCESS","addMemoizedSubscription","subscription","memoizedValue","memoizeOnValue","subscribe","newValueOfStore","listener","loggerMiddleware","next","type","result","combineReducers","userReducer","annotationReducer","configureStore","rootReducer","middleware","getDefaultMiddleware","scheduleId","REFRESH_OFFSET","moment","duration","currentUser","userOfStore","previousUser","clearTimeout","timeStampToRefresh","unix","subtract","timeUntilRefreshMs","diff","asMilliseconds","authService","refresh","toString","subscribedStore","nextPair","forEach","login","password","loginResponse","refreshResponse","FloatingLabelInput","children","props","className","styles","floatingLabelInput","FloatingLabelInputContainer","floatingLabelInputContainer","FloatingLabel","active","floatingLabelActive","floatingLabel","FloatingInput","inputRef","ref","onBlur","floatingInputActive","floatingInput","FloatingTextInput","label","value","otherProps","useState","setActive","useRef","onClick","current","focus","htmlFor","event","target","onFocus","LoadingIndicator","ldsEllipsis","Button","React","forwardRef","buttonStyle","buttonType","animate","setAnimate","e","onTransitionEnd","button","styleNormal","styleBold","typePrimary","TextInput","useField","field","meta","showError","touched","inputField","inputFieldError","name","Login","useSelector","to","container","inputArea","initialValues","loginError","validate","values","errors","onSubmit","setSubmitting","setErrors","getStatus","test","code","isSubmitting","autoComplete","autoCorrect","autoCapitalize","disabled","adminService","exportJudgements","saveTsv","updateConfig","config","getStatistics","filename","blob","Blob","elem","window","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","assertUnreachable","x","useActionsWithDispatch","useDispatch","actionsWithDispatch","hasOwnProperty","MenuButton","menuButton","xmlns","height","viewBox","width","d","fill","Menu","onViewportClick","showMenu","setShowMenu","useEffect","viewportClickHandler","addEventListener","passive","removeEventListener","onLogout","onShowStartScreen","log","toggleShowMenu","oldVal","createMenuButton","Manager","Reference","Popper","placement","style","data-placement","Line","horizontalLine","Admin","statistics","updateStatistics","adminArea","actionBar","orientation","judgementMode","SCORING_AND_SELECT_SPANS","rotateDocumentText","options","as","Object","key","statisticsContainer","statistic","statisticValue","statisticLabel","noop","RateButton","background","AnnotationPart","isRangeStart","isInSelectedRange","showTooltip","annotationIsAllowed","onPartClick","onTooltipClick","textToShow","replace","currentRangeStartStyle","rangeStart","annotationAllowedStyle","annotationAllowed","annotatePartSpan","annotatePart","isInRange","annotatePartTooltipButton","Annotation","keyFunctionMap","tooltipAnnotatePartIndex","setTooltipAnnotatePartIndex","Digit1","Digit2","Digit3","Digit4","Digit5","keyUpHandler","currentRateLevel","finishedFraction","ratingRequired","currentSelectionNotFinished","annotationIsRequired","mode","hideTooltip","progressBar","onClickCapture","annotationArea","annotationPart","canAnnotatePart","footer","rateButton","guideText","AnnotationContainer","pairsSuccessfullySent","useAnnotationState","PrivateRoute","requiredRole","rest","RouteToPage","userRole","App","app","exact","path","Boolean","location","hostname","match","bootScripts","bootScript","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.139d7cf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__16eIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsEllipsis\":\"LoadingIndicator_ldsEllipsis__1NuRE\",\"lds-ellipsis1\":\"LoadingIndicator_lds-ellipsis1__3Vee3\",\"lds-ellipsis2\":\"LoadingIndicator_lds-ellipsis2__1xuwq\",\"lds-ellipsis3\":\"LoadingIndicator_lds-ellipsis3__14o4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuButton\":\"Menu_menuButton__2DoUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontalLine\":\"Line_horizontalLine__2MX1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Admin_container__33nz2\",\"adminArea\":\"Admin_adminArea__sWTs7\",\"actionBar\":\"Admin_actionBar__Av4NJ\",\"options\":\"Admin_options__12fPG\",\"button\":\"Admin_button__2e16L\",\"statisticsContainer\":\"Admin_statisticsContainer__2Up_0\",\"statisticValue\":\"Admin_statisticValue__IzxVH\",\"statisticLabel\":\"Admin_statisticLabel__3LSN1\",\"statistic\":\"Admin_statistic__1m6bn\"};","import { HttpStatus } from './http-status.enum';\r\n\r\nexport class HttpException extends Error {\r\n  private errorText: string;\r\n  private status: HttpStatus;\r\n  /**\r\n   * Instantiate a plain HTTP Exception.\r\n   *\r\n   * @example\r\n   * `throw new HttpException()`\r\n   *\r\n   * @param errorText string describing the error condition.\r\n   * @param status HTTP response status code\r\n   */\r\n  constructor(errorText: string, status: HttpStatus) {\r\n    super();\r\n    this.errorText = errorText;\r\n    this.status = status;\r\n    this.message = errorText;\r\n  }\r\n  getResponse() {\r\n    return this.errorText;\r\n  }\r\n  getStatus() {\r\n    return this.status;\r\n  }\r\n  toString() {\r\n    return `HttpException: status=${this.status}, errorText='${this.errorText}'`;\r\n  }\r\n}\r\n","/* eslint-disable no-console */\r\n/* tslint:disable no-console */\r\n\r\nexport const createLogger = (context: string) => {\r\n  const logWithContext = (logFn: (message?: any, ...optionalParams: any[]) => void) => (\r\n    message?: any,\r\n    ...optionalParams: any[]\r\n  ) => logFn(`[${context}] ${message}`, ...optionalParams);\r\n\r\n  return {\r\n    debug: logWithContext(console.debug),\r\n    info: logWithContext(console.info),\r\n    error: logWithContext(console.error),\r\n    dir: logWithContext(console.dir),\r\n    group: console.group,\r\n    groupEnd: console.groupEnd,\r\n  };\r\n};\r\n","import axios from 'axios';\r\n\r\nimport { HttpException } from './http.exception';\r\nimport { createLogger } from '../logger/logger';\r\n\r\nimport {\r\n  LoginRequest,\r\n  ImportUsersResponse,\r\n  ImportUsersRequest,\r\n  AuthResponse,\r\n  RefreshRequest,\r\n  ImportDocumentsReq,\r\n  ImportDocumentsResp,\r\n  ImportQueriesReq,\r\n  ImportQueriesResp,\r\n  ImportJudgementPairsReq,\r\n  ImportJudgementPairsResp,\r\n  PreloadJudgementResponse,\r\n  SaveJudgement,\r\n  StatisticsResp,\r\n  UpdateConfig,\r\n} from '../typings/fira-be-typings';\r\n\r\nconst axiosClient = axios.create({\r\n  timeout: 5000,\r\n});\r\nconst logger = createLogger('http.client');\r\nconst REFRESH_RETRY_COUNT = 5;\r\nconst REFRESH_RETRY_DELAY = 3 * 1000; // 3 seconds\r\n\r\nexport const httpClient = {\r\n  login: async (loginRequest: LoginRequest): Promise<AuthResponse> => {\r\n    logger.info('executing login...', { username: loginRequest.username });\r\n\r\n    try {\r\n      return (await axiosClient.post<AuthResponse>('auth/v1/login', loginRequest)).data;\r\n    } catch (e) {\r\n      logger.error('login failed!', e);\r\n      if (e.response?.status === 401) {\r\n        throw new HttpException('credentials invalid', 401);\r\n      }\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  refresh: async (refreshRequest: RefreshRequest): Promise<AuthResponse> => {\r\n    logger.info('executing refresh...', { refreshRequest });\r\n\r\n    // retry refresh with same token 3 times because if the internet connection was idle,\r\n    // ERR_NETWORK_IO_SUSPENDED can occur on the first try\r\n    let attempt = 1;\r\n    let lastError;\r\n    while (attempt <= REFRESH_RETRY_COUNT) {\r\n      try {\r\n        return (await axiosClient.post<AuthResponse>('auth/v1/refresh', refreshRequest)).data;\r\n      } catch (e) {\r\n        logger.info(`refresh failed for attempt=${attempt}`, { error: e });\r\n        lastError = e;\r\n        attempt++;\r\n        if (e.response?.status) {\r\n          // got some response from backend --> no retry necessary\r\n          break;\r\n        }\r\n        if (attempt <= REFRESH_RETRY_COUNT) {\r\n          await timeout(REFRESH_RETRY_DELAY);\r\n        }\r\n      }\r\n    }\r\n    logger.error('refresh failed!', lastError);\r\n    throw lastError;\r\n  },\r\n\r\n  importUsers: async (\r\n    accessToken: string,\r\n    importUsersRequest: ImportUsersRequest,\r\n  ): Promise<ImportUsersResponse> => {\r\n    logger.info('executing import users...', { importUsersRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.post<ImportUsersResponse>('admin/v1/import/users', importUsersRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import users failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importDocuments: async (\r\n    accessToken: string,\r\n    importDocumentsRequest: ImportDocumentsReq,\r\n  ): Promise<ImportDocumentsResp> => {\r\n    logger.info('executing import documents...', { importDocumentsRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put<ImportDocumentsResp>(\r\n          'admin/v1/import/documents',\r\n          importDocumentsRequest,\r\n          {\r\n            headers: {\r\n              authorization: `Bearer ${accessToken}`,\r\n            },\r\n          },\r\n        )\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import documents failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importQueries: async (\r\n    accessToken: string,\r\n    importQueriesRequest: ImportQueriesReq,\r\n  ): Promise<ImportQueriesResp> => {\r\n    logger.info('executing import queries...', { importQueriesRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put<ImportQueriesResp>('admin/v1/import/queries', importQueriesRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import queries failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importJudgementPairs: async (\r\n    accessToken: string,\r\n    importJudgPairsRequest: ImportJudgementPairsReq,\r\n  ): Promise<ImportJudgementPairsResp> => {\r\n    logger.info('executing import judgement pairs...', { importJudgPairsRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put<ImportJudgementPairsResp>(\r\n          'admin/v1/import/judgement-pairs',\r\n          importJudgPairsRequest,\r\n          {\r\n            headers: {\r\n              authorization: `Bearer ${accessToken}`,\r\n            },\r\n          },\r\n        )\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import judgement pairs failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  preloadJudgements: async (accessToken: string): Promise<PreloadJudgementResponse> => {\r\n    logger.info('executing preload judgements...');\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.post<PreloadJudgementResponse>('judgements/v1/preload', null, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('preload judgements failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  submitJudgement: async (\r\n    accessToken: string,\r\n    judgementId: number,\r\n    submitJudgementRequest: SaveJudgement,\r\n  ): Promise<void> => {\r\n    logger.info('executing submit judgement...', { submitJudgementRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put(`judgements/v1/${judgementId}`, submitJudgementRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('submit judgement failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  exportJudgements: async (accessToken: string): Promise<string> => {\r\n    logger.info('executing export of judgements...');\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.get(`admin/v1/judgements/export/tsv`, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('export of judgements failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  updateConfig: async (accessToken: string, updateConfigRequest: UpdateConfig): Promise<void> => {\r\n    logger.info('executing update of config...', { updateConfigRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put(`admin/v1/config`, updateConfigRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('update of config failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  getStatistics: async (accessToken: string): Promise<StatisticsResp> => {\r\n    logger.info('executing retrieval of statistics...');\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.get(`admin/v1/statistics`, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('retrieval of statistics failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n};\r\n\r\nfunction timeout(ms: number) {\r\n  return new Promise(res => setTimeout(res, ms));\r\n}\r\n","export enum JudgementMode {\r\n  PLAIN_RELEVANCE_SCORING = 'PLAIN_RELEVANCE_SCORING',\r\n  SCORING_AND_SELECT_SPANS = 'SCORING_AND_SELECT_SPANS',\r\n}\r\n\r\nexport enum RelevanceLevel {\r\n  NOT_RELEVANT = '0_NOT_RELEVANT',\r\n  TOPIC_RELEVANT_DOES_NOT_ANSWER = '1_TOPIC_RELEVANT_DOES_NOT_ANSWER',\r\n  GOOD_ANSWER = '2_GOOD_ANSWER',\r\n  PERFECT_ANSWER = '3_PERFECT_ANSWER',\r\n  MISLEADING_ANSWER = '-1_MISLEADING_ANSWER',\r\n}\r\n\r\nexport type RateLevelType = {\r\n  readonly text: string;\r\n  readonly relevanceLevel: RelevanceLevel;\r\n  readonly annotationRequired: boolean;\r\n  readonly buttonColor: string;\r\n};\r\n\r\nexport const RateLevels: RateLevelType[] = [\r\n  {\r\n    text: 'Misleading Answer',\r\n    relevanceLevel: RelevanceLevel.MISLEADING_ANSWER,\r\n    annotationRequired: false,\r\n    buttonColor: '#FF7E61',\r\n  },\r\n  {\r\n    text: 'Not Relevant',\r\n    relevanceLevel: RelevanceLevel.NOT_RELEVANT,\r\n    annotationRequired: false,\r\n    buttonColor: '#EBB25B',\r\n  },\r\n  {\r\n    text: 'Topic Relevant, But Does Not Answer',\r\n    relevanceLevel: RelevanceLevel.TOPIC_RELEVANT_DOES_NOT_ANSWER,\r\n    annotationRequired: true,\r\n    buttonColor: '#FFF498',\r\n  },\r\n  {\r\n    text: 'Good Answer',\r\n    relevanceLevel: RelevanceLevel.GOOD_ANSWER,\r\n    annotationRequired: true,\r\n    buttonColor: '#A1E880',\r\n  },\r\n  {\r\n    text: 'Perfect Answer',\r\n    relevanceLevel: RelevanceLevel.PERFECT_ANSWER,\r\n    annotationRequired: true,\r\n    buttonColor: '#73FFC3',\r\n  },\r\n];\r\n","import { createLogger } from '../logger/logger';\r\n\r\ntype LocalStorageUser = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n};\r\n\r\nconst logger = createLogger('browser-storage');\r\nconst USER_KEY = 'user';\r\n\r\nexport const browserStorage = {\r\n  saveUser: (user: LocalStorageUser) => {\r\n    logger.info('saveUser called', { user });\r\n\r\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  },\r\n\r\n  clearUser: () => {\r\n    logger.info('clearUser called');\r\n\r\n    localStorage.removeItem(USER_KEY);\r\n  },\r\n\r\n  getUser: (): LocalStorageUser | null => {\r\n    logger.info('getUser called');\r\n\r\n    const storedUser = localStorage.getItem(USER_KEY);\r\n    if (!storedUser) {\r\n      logger.info('no user found');\r\n      return null;\r\n    }\r\n    logger.info('user found', { currentlyStoredUser: storedUser });\r\n    return JSON.parse(storedUser) as LocalStorageUser;\r\n  },\r\n};\r\n","import moment from 'moment';\r\n\r\nimport { browserStorage } from '../../browser-storage/browser-storage';\r\nimport { authService } from '../../auth/auth.service';\r\nimport { createLogger } from '../../logger/logger';\r\nimport { RootStore } from '../store';\r\n\r\nconst logger = createLogger('user.subscriptions');\r\n\r\nexport const setupSubscriptions = (store: RootStore) => {\r\n  // listen for changes on user state and synchronize with browser storage\r\n  const REFRESH_OFFSET = moment.duration(1, 'minutes');\r\n  let currentUser = store.getState().user;\r\n  let scheduleId: NodeJS.Timeout;\r\n\r\n  store.subscribe(() => {\r\n    const userOfStore = store.getState().user;\r\n    if (userOfStore !== currentUser) {\r\n      logger.info('user changed', { previousUser: currentUser, userOfStore });\r\n\r\n      currentUser = userOfStore;\r\n\r\n      if (!currentUser) {\r\n        // if no user is present (e.g., logout was executed), clear scheduled refresh and browser storage\r\n        logger.info('no user present, clear scheduled refresh and browser storage');\r\n        clearTimeout(scheduleId);\r\n        return browserStorage.clearUser();\r\n      }\r\n\r\n      // save new user in browser storage\r\n      browserStorage.saveUser({\r\n        accessToken: currentUser.accessToken.val,\r\n        refreshToken: currentUser.refreshToken.val,\r\n      });\r\n      logger.info('user saved to browser storage');\r\n\r\n      // schedule refresh of token\r\n      const expiry = moment.unix(currentUser.accessToken.expiry);\r\n      const timeStampToRefresh = expiry.subtract(REFRESH_OFFSET);\r\n      const timeUntilRefreshMs = moment\r\n        .duration(timeStampToRefresh.diff(moment()))\r\n        .asMilliseconds();\r\n      const refreshToken = currentUser.refreshToken.val;\r\n\r\n      scheduleId = setTimeout(async () => {\r\n        await authService.refresh(refreshToken);\r\n      }, timeUntilRefreshMs);\r\n\r\n      logger.info(`refresh got scheduled, scheduled at: ${timeStampToRefresh.toString()}`);\r\n    }\r\n  });\r\n};\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\nimport * as jwt from 'jsonwebtoken';\r\n\r\nimport { JwtPayload } from '../../typings/fira-be-typings';\r\n\r\ntype UserState = null | {\r\n  readonly accessToken: {\r\n    readonly val: string;\r\n    readonly expiry: number; // unix timestamp\r\n  };\r\n  readonly refreshToken: {\r\n    readonly val: string;\r\n    readonly expiry: number; // unix timestamp\r\n  };\r\n  readonly role: UserRole;\r\n};\r\n\r\nexport enum UserRole {\r\n  ANNOTATOR = 'ANNOTATOR',\r\n  ADMIN = 'ADMIN',\r\n}\r\n\r\ntype AuthenticatePayload = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n};\r\n\r\nconst INITIAL_STATE = null as UserState;\r\n\r\nconst authenticate = createAction<AuthenticatePayload>('AUTHENTICATED');\r\nconst logout = createAction<void>('LOGGED_OUT');\r\nconst reducer = createReducer(INITIAL_STATE, builder =>\r\n  builder\r\n    .addCase(authenticate, (state, action) => {\r\n      const accessTokenJwtPayload = jwt.decode(action.payload.accessToken) as JwtPayload;\r\n      const refreshTokenJwtPayload = jwt.decode(action.payload.refreshToken) as JwtPayload;\r\n      const isAdmin = !!accessTokenJwtPayload.resource_access?.['realm-management']?.roles?.some(\r\n        role => role === 'manage-users',\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        accessToken: {\r\n          val: action.payload.accessToken,\r\n          expiry: accessTokenJwtPayload.exp,\r\n        },\r\n        refreshToken: {\r\n          val: action.payload.refreshToken,\r\n          expiry: refreshTokenJwtPayload.exp,\r\n        },\r\n        role: isAdmin ? UserRole.ADMIN : UserRole.ANNOTATOR,\r\n      };\r\n    })\r\n    .addCase(logout, () => {\r\n      return INITIAL_STATE;\r\n    }),\r\n);\r\n\r\nexport const actions = { authenticate, logout };\r\nexport default reducer;\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { PreloadJudgement } from '../../typings/fira-be-typings';\r\nimport { RelevanceLevel, RateLevels } from '../../typings/enums';\r\nimport { actions as userActions } from '../user/user.slice';\r\n\r\nexport enum JudgementPairStatus {\r\n  TO_JUDGE = 'TO_JUDGE',\r\n  SEND_PENDING = 'SEND_PENDING',\r\n  SEND_SUCCESS = 'SEND_SUCCESS',\r\n  SEND_FAILED = 'SEND_FAILED',\r\n}\r\n\r\nexport type JudgementPair = PreloadJudgement & {\r\n  readonly relevanceLevel?: RelevanceLevel;\r\n  readonly currentAnnotationStart?: number;\r\n  readonly annotatedRanges: Array<{ start: number; end: number }>;\r\n  readonly status: JudgementPairStatus;\r\n};\r\n\r\ntype AnnotationState = {\r\n  readonly judgementPairs: JudgementPair[];\r\n  readonly alreadyFinished?: number;\r\n  readonly remainingToFinish?: number;\r\n  readonly currentJudgementPairId?: PreloadJudgement['id'];\r\n  readonly currentJudgementPairSelectedOnMs?: number; // unix timestamp\r\n};\r\n\r\ntype PreloadJudgementsPayload = {\r\n  readonly judgements: PreloadJudgement[];\r\n  readonly alreadyFinished: number;\r\n  readonly remainingToFinish: number;\r\n};\r\n\r\ntype RateJudgementPairPayload = {\r\n  readonly relevanceLevel: RelevanceLevel;\r\n};\r\n\r\ntype SelectRangeStartEndPayload = {\r\n  readonly annotationPartIndex: number;\r\n};\r\n\r\ntype DeleteRangePayload = {\r\n  readonly annotationPartIndex: number;\r\n};\r\n\r\ntype SetJudgementStatusPayload = {\r\n  readonly id: PreloadJudgement['id'];\r\n  readonly status: JudgementPairStatus;\r\n};\r\n\r\nconst INITIAL_STATE = { judgementPairs: [] } as AnnotationState;\r\n\r\nconst preloadJudgements = createAction<PreloadJudgementsPayload>('JUDGEMENTS_PRELOADED');\r\nconst rateJudgementPair = createAction<RateJudgementPairPayload>('JUDGEMENT_PAIR_RATED');\r\nconst selectRangeStartEnd = createAction<SelectRangeStartEndPayload>('RANGE_STARTOREND_SELECTED');\r\nconst deleteRange = createAction<DeleteRangePayload>('RANGE_DELETED');\r\nconst setJudgementStatus = createAction<SetJudgementStatusPayload>('JUDGEMENT_STATUS_SET');\r\nconst selectJudgementPair = createAction<JudgementPair | undefined>('JUDGEMENT_PAIR_SELECTED');\r\n\r\nconst reducer = createReducer(INITIAL_STATE, builder =>\r\n  builder\r\n    .addCase(preloadJudgements, (state, action) => {\r\n      state.alreadyFinished = action.payload.alreadyFinished;\r\n      state.remainingToFinish = action.payload.remainingToFinish;\r\n\r\n      const judgementPairsReceived = action.payload.judgements;\r\n\r\n      state.judgementPairs = judgementPairsReceived.map(judgement => {\r\n        const localEquivalentPair = state.judgementPairs.find(pair => pair.id === judgement.id);\r\n        if (localEquivalentPair && areJudgementPairsEqual(localEquivalentPair, judgement)) {\r\n          // keep local data of judgement pair\r\n          return {\r\n            ...judgement,\r\n            ...localEquivalentPair,\r\n          };\r\n        } else {\r\n          // either there is no local data for this judgement pair received from server, or\r\n          // the data of the pair changed significantly\r\n          // --> do not keep local data for this pair\r\n          return {\r\n            ...judgement,\r\n            annotatedRanges: [],\r\n            status: JudgementPairStatus.TO_JUDGE,\r\n          };\r\n        }\r\n      });\r\n    })\r\n    .addCase(rateJudgementPair, (state, action) => {\r\n      const currentJudgementPair = state.judgementPairs.find(\r\n        pair => pair.id === state.currentJudgementPairId,\r\n      );\r\n      currentJudgementPair!.relevanceLevel = action.payload.relevanceLevel;\r\n      const currentRateLevel = RateLevels.find(\r\n        rateLevel => rateLevel.relevanceLevel === currentJudgementPair!.relevanceLevel,\r\n      );\r\n\r\n      // clear annotated ranges and current annotation start if\r\n      // rating is changed to a level which does not require annotation of ranges\r\n      if (!currentRateLevel!.annotationRequired) {\r\n        currentJudgementPair!.annotatedRanges = [];\r\n        currentJudgementPair!.currentAnnotationStart = undefined;\r\n      }\r\n    })\r\n    .addCase(selectRangeStartEnd, (state, action) => {\r\n      const currentJudgementPair = state.judgementPairs.find(\r\n        pair => pair.id === state.currentJudgementPairId,\r\n      );\r\n      if (currentJudgementPair!.currentAnnotationStart === undefined) {\r\n        currentJudgementPair!.currentAnnotationStart = action.payload.annotationPartIndex;\r\n      } else {\r\n        const start = currentJudgementPair!.currentAnnotationStart;\r\n        const end = action.payload.annotationPartIndex;\r\n        const actualStart = start < end ? start : end;\r\n        const actualEnd = end > start ? end : start;\r\n\r\n        currentJudgementPair!.annotatedRanges.push({\r\n          start: actualStart,\r\n          end: actualEnd,\r\n        });\r\n        currentJudgementPair!.currentAnnotationStart = undefined;\r\n      }\r\n    })\r\n    .addCase(deleteRange, (state, action) => {\r\n      const currentJudgementPair = state.judgementPairs.find(\r\n        pair => pair.id === state.currentJudgementPairId,\r\n      );\r\n      currentJudgementPair!.annotatedRanges = currentJudgementPair!.annotatedRanges.filter(\r\n        range => {\r\n          return !(\r\n            action.payload.annotationPartIndex >= range.start &&\r\n            action.payload.annotationPartIndex <= range.end\r\n          );\r\n        },\r\n      );\r\n    })\r\n    .addCase(setJudgementStatus, (state, action) => {\r\n      const judgementPair = state.judgementPairs.find(pair => pair.id === action.payload.id);\r\n      judgementPair!.status = action.payload.status;\r\n    })\r\n    .addCase(selectJudgementPair, (state, action) => {\r\n      if (state.currentJudgementPairId !== action.payload?.id) {\r\n        state.currentJudgementPairId = action.payload?.id;\r\n        state.currentJudgementPairSelectedOnMs = new Date().getTime();\r\n      }\r\n    })\r\n    .addCase(userActions.logout, () => {\r\n      // on logout, erase annotation state\r\n      return INITIAL_STATE;\r\n    }),\r\n);\r\n\r\nfunction areJudgementPairsEqual(jp1: PreloadJudgement, jp2: PreloadJudgement) {\r\n  return (\r\n    jp1.queryText === jp2.queryText &&\r\n    jp1.docAnnotationParts.length === jp2.docAnnotationParts.length &&\r\n    !jp1.docAnnotationParts.some((part, index) => jp2.docAnnotationParts[index] !== part)\r\n  );\r\n}\r\n\r\nexport const actions = {\r\n  preloadJudgements,\r\n  rateJudgementPair,\r\n  selectRangeStartEnd,\r\n  deleteRange,\r\n  setJudgementStatus,\r\n  selectJudgementPair,\r\n};\r\nexport default reducer;\r\n","import { httpClient } from '../http/http.client';\r\nimport { createLogger } from '../logger/logger';\r\nimport { store } from '../store/store';\r\nimport {\r\n  actions as annotationActions,\r\n  JudgementPairStatus,\r\n} from '../store/annotation/annotation.slice';\r\nimport { RelevanceLevel, RateLevels } from '../typings/enums';\r\n\r\nconst logger = createLogger('judgements.service');\r\n\r\nexport const judgementsService = {\r\n  preloadJudgements: async () => {\r\n    logger.info(`executing preload judgements...`);\r\n\r\n    const response = await httpClient.preloadJudgements(store.getState().user!.accessToken.val);\r\n\r\n    logger.info(`preload judgements succeeded! dispatching preload judgements...`, { response });\r\n    store.dispatch(annotationActions.preloadJudgements(response));\r\n  },\r\n\r\n  rateJudgementPair: async (relevanceLevel: RelevanceLevel) => {\r\n    logger.info(`executing rate judgement pair...`);\r\n\r\n    store.dispatch(annotationActions.rateJudgementPair({ relevanceLevel }));\r\n\r\n    const annotationState = store.getState().annotation;\r\n    const currentJudgementPair = annotationState.judgementPairs.find(\r\n      pair => pair.id === annotationState.currentJudgementPairId,\r\n    )!;\r\n    const currentRateLevel = RateLevels.find(\r\n      rateLevel => rateLevel.relevanceLevel === currentJudgementPair.relevanceLevel,\r\n    );\r\n\r\n    if (!currentRateLevel!.annotationRequired) {\r\n      // if the chosen rate level does not require annotation, immediately submit current\r\n      // judgement and proceed\r\n      await judgementsService.submitCurrentJudgement();\r\n    }\r\n\r\n    logger.info(`rate judgement pair succeeded!`);\r\n  },\r\n\r\n  submitCurrentJudgement: async () => {\r\n    logger.info(`executing submit current judgement...`);\r\n\r\n    const annotationState = store.getState().annotation;\r\n    const currentJudgementPair = annotationState.judgementPairs.find(\r\n      pair => pair.id === annotationState.currentJudgementPairId,\r\n    )!;\r\n    const relevancePositions: number[] = [];\r\n    for (const annotatedRange of currentJudgementPair.annotatedRanges) {\r\n      for (let i = annotatedRange.start; i <= annotatedRange.end; i++) {\r\n        relevancePositions.push(i);\r\n      }\r\n    }\r\n\r\n    const now = new Date().getTime();\r\n    const durationUsedToJudgeMs = now - annotationState.currentJudgementPairSelectedOnMs!;\r\n\r\n    store.dispatch(\r\n      annotationActions.setJudgementStatus({\r\n        id: currentJudgementPair.id,\r\n        status: JudgementPairStatus.SEND_PENDING,\r\n      }),\r\n    );\r\n\r\n    try {\r\n      await httpClient.submitJudgement(\r\n        store.getState().user!.accessToken.val,\r\n        currentJudgementPair.id,\r\n        {\r\n          relevanceLevel: currentJudgementPair.relevanceLevel!,\r\n          relevancePositions,\r\n          durationUsedToJudgeMs,\r\n        },\r\n      );\r\n    } catch (error) {\r\n      logger.error(`submit current judgement failed!`, { id: currentJudgementPair.id, error });\r\n      store.dispatch(\r\n        annotationActions.setJudgementStatus({\r\n          id: currentJudgementPair.id,\r\n          status: JudgementPairStatus.SEND_FAILED,\r\n        }),\r\n      );\r\n      throw error;\r\n    }\r\n\r\n    store.dispatch(\r\n      annotationActions.setJudgementStatus({\r\n        id: currentJudgementPair.id,\r\n        status: JudgementPairStatus.SEND_SUCCESS,\r\n      }),\r\n    );\r\n\r\n    logger.info(`submit current judgement succeeded!`);\r\n  },\r\n};\r\n","import { createLogger } from '../../logger/logger';\r\nimport { RootStore } from '../store';\r\nimport { judgementsService } from '../../judgements/judgements.service';\r\nimport { actions as annotationActions, JudgementPairStatus } from '../annotation/annotation.slice';\r\nimport { UserRole } from '../user/user.slice';\r\n\r\nconst logger = createLogger('annotation.subscriptions');\r\n\r\nexport const setupSubscriptions = (store: RootStore) => {\r\n  // if no judgement pairs got loaded from the server yet, preload pairs\r\n  store.subscribe(() => {\r\n    const annotationState = store.getState().annotation;\r\n\r\n    const user = store.getState().user;\r\n    if (!user || !user.accessToken) {\r\n      logger.info(\r\n        'no judgement pairs got loaded from the server yet, but there is no access token available --> skip preload',\r\n      );\r\n      return;\r\n    }\r\n    if (user.role !== UserRole.ANNOTATOR) {\r\n      logger.info(\r\n        'no judgement pairs got loaded from the server yet, but user role is not annotator --> skip preload',\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (annotationState.remainingToFinish === undefined) {\r\n      logger.info('no judgement pairs got loaded from the server yet --> execute preload...');\r\n      judgementsService.preloadJudgements();\r\n    }\r\n  });\r\n\r\n  // if count of (local) judgement pairs does not fulfill threshold and there are remaining\r\n  // judgements to preload on the server --> execute preload.\r\n  // we count judgement pairs which are not judged yet or not sent to the server yet\r\n  const loadNextPairsSubscription: MemoizedSubscription = {\r\n    memoizeOnValue: subscribedStore => subscribedStore.getState().annotation.judgementPairs,\r\n    listener: subscribedStore => {\r\n      const annotationState = subscribedStore.getState().annotation;\r\n      if (\r\n        annotationState.remainingToFinish !== undefined &&\r\n        annotationState.judgementPairs.filter(\r\n          pair =>\r\n            pair.status === JudgementPairStatus.TO_JUDGE ||\r\n            pair.status === JudgementPairStatus.SEND_PENDING,\r\n        ).length <= 1 &&\r\n        annotationState.remainingToFinish > annotationState.judgementPairs.length\r\n      ) {\r\n        logger.info(\r\n          'count of preloaded judgement pairs does not fulfill threshold and ' +\r\n            'there are remaining judgements to preload on the server --> execute preload...',\r\n        );\r\n        judgementsService.preloadJudgements();\r\n      }\r\n    },\r\n  };\r\n  addMemoizedSubscription(store, loadNextPairsSubscription);\r\n\r\n  // set new currently selected judgement pair if list of judgement pairs changes\r\n  const setNextSelectedPairSubscription: MemoizedSubscription = {\r\n    memoizeOnValue: subscribedStore => subscribedStore.getState().annotation.judgementPairs,\r\n    listener: subscribedStore => {\r\n      const judgePairsOfStore = subscribedStore.getState().annotation.judgementPairs;\r\n\r\n      // select first pair which neither gets currently sent to the server nor was already sent to the server\r\n      const nextPair = judgePairsOfStore.find(pair => pair.status === JudgementPairStatus.TO_JUDGE);\r\n      subscribedStore.dispatch(annotationActions.selectJudgementPair(nextPair));\r\n    },\r\n  };\r\n  addMemoizedSubscription(store, setNextSelectedPairSubscription);\r\n};\r\n\r\ntype MemoizedSubscription = {\r\n  memoizeOnValue: (subscribedStore: RootStore) => any;\r\n  listener: (subscribedStore: RootStore) => void;\r\n};\r\n\r\nfunction addMemoizedSubscription(store: RootStore, subscription: MemoizedSubscription) {\r\n  let memoizedValue = subscription.memoizeOnValue(store);\r\n  store.subscribe(() => {\r\n    const newValueOfStore = subscription.memoizeOnValue(store);\r\n    if (memoizedValue !== newValueOfStore) {\r\n      memoizedValue = newValueOfStore;\r\n      subscription.listener(store);\r\n    }\r\n  });\r\n}\r\n","import { createLogger } from '../../logger/logger';\r\n\r\nconst logger = createLogger('store-logger-middleware');\r\n\r\nconst loggerMiddleware = (store: any) => (next: any) => (action: any) => {\r\n  logger.group(action.type);\r\n  logger.info('dispatching', action);\r\n  const result = next(action);\r\n  logger.info('next state', store.getState());\r\n  logger.groupEnd();\r\n  return result;\r\n};\r\n\r\nexport default loggerMiddleware;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport userReducer from './user/user.slice';\r\nimport annotationReducer from './annotation/annotation.slice';\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  annotation: annotationReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport { setupSubscriptions as setupUserSubscriptions } from './user/user.subscriptions';\r\nimport { setupSubscriptions as setupAnnotationSubscriptions } from './annotation/annotation.subscriptions';\r\nimport loggerMiddleware from './middleware/logger';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [loggerMiddleware, ...getDefaultMiddleware()],\r\n});\r\n\r\nif (process.env.NODE_ENV !== 'production' && (module as any).hot) {\r\n  (module as any).hot.accept('./reducers', () => store.replaceReducer(rootReducer));\r\n}\r\n\r\nconst subscriptions = [setupUserSubscriptions, setupAnnotationSubscriptions];\r\nsubscriptions.forEach(subscription => subscription(store));\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type RootStore = typeof store;\r\nexport type AppDispatch = RootStore['dispatch'];\r\n","import { httpClient } from '../http/http.client';\r\nimport { store } from '../store/store';\r\nimport { createLogger } from '../logger/logger';\r\nimport { actions as userActions } from '../store/user/user.slice';\r\n\r\nconst logger = createLogger('auth.service');\r\n\r\nexport const authService = {\r\n  login: async (username: string, password: string) => {\r\n    logger.info(`executing login...`, { username });\r\n\r\n    const loginResponse = await httpClient.login({ username, password });\r\n\r\n    logger.info(`login succeeded! dispatching authenticate...`, { loginResponse });\r\n    store.dispatch(userActions.authenticate(loginResponse));\r\n  },\r\n\r\n  refresh: async (refreshToken: string) => {\r\n    logger.info(`executing refresh...`, { refreshToken });\r\n\r\n    let refreshResponse;\r\n    try {\r\n      refreshResponse = await httpClient.refresh({ refreshToken });\r\n    } catch (err) {\r\n      logger.error(`refresh failed! dispatching logout...`, err);\r\n      store.dispatch(userActions.logout());\r\n      return;\r\n    }\r\n\r\n    logger.info(`refresh succeeded! dispatching authenticate...`, { refreshResponse });\r\n    store.dispatch(userActions.authenticate(refreshResponse));\r\n  },\r\n};\r\n","import React, { useState, useRef } from 'react';\r\n\r\nimport styles from './FloatingTextInput.module.css';\r\n\r\ntype FloatingLabelInputProps = React.DetailedHTMLProps<\r\n  React.HTMLAttributes<HTMLDivElement>,\r\n  HTMLDivElement\r\n>;\r\n\r\nconst FloatingLabelInput: React.FC<FloatingLabelInputProps> = ({ children, ...props }) => (\r\n  <div {...props} className={`${props.className} ${styles.floatingLabelInput}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\ntype FloatingLabelInputContainerProps = React.DetailedHTMLProps<\r\n  React.HTMLAttributes<HTMLDivElement>,\r\n  HTMLDivElement\r\n>;\r\n\r\nconst FloatingLabelInputContainer: React.FC<FloatingLabelInputContainerProps> = ({\r\n  children,\r\n  ...props\r\n}) => (\r\n  <div {...props} className={`${props.className} ${styles.floatingLabelInputContainer}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\ntype FloatingLabelProps = { active: boolean } & React.DetailedHTMLProps<\r\n  React.LabelHTMLAttributes<HTMLLabelElement>,\r\n  HTMLLabelElement\r\n>;\r\n\r\nconst FloatingLabel: React.FC<FloatingLabelProps> = ({ active, children, ...props }) => (\r\n  <label\r\n    {...props}\r\n    className={`${props.className} ${!!active && styles.floatingLabelActive} ${\r\n      styles.floatingLabel\r\n    }`}\r\n  >\r\n    {children}\r\n  </label>\r\n);\r\n\r\ntype FloatingInputProps = {\r\n  active: boolean;\r\n  inputRef: React.RefObject<HTMLInputElement>;\r\n} & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\nconst FloatingInput: React.FC<FloatingInputProps> = ({ children, active, inputRef, ...props }) => (\r\n  <input\r\n    {...props}\r\n    ref={inputRef}\r\n    onBlur={props.onBlur}\r\n    className={`${props.className} ${!!active && styles.floatingInputActive} ${\r\n      styles.floatingInput\r\n    }`}\r\n  >\r\n    {children}\r\n  </input>\r\n);\r\n\r\nconst FloatingTextInput: React.FC<any> = ({ id, label, type, className, value, ...otherProps }) => {\r\n  const [active, setActive] = useState(!!value && value.length > 0);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  function onFocus(event: any) {\r\n    setActive(true);\r\n    if (otherProps.onFocus) {\r\n      otherProps.onFocus(event);\r\n    }\r\n  }\r\n  function onBlur(event: any) {\r\n    if (!event.target.value || event.target.value.length === 0) {\r\n      setActive(false);\r\n    }\r\n    if (otherProps.onBlur) {\r\n      otherProps.onBlur(event);\r\n    }\r\n  }\r\n\r\n  function onContainerClick() {\r\n    inputRef.current!.focus();\r\n  }\r\n\r\n  return (\r\n    <FloatingLabelInput>\r\n      <FloatingLabelInputContainer onClick={onContainerClick} className={className}>\r\n        <FloatingLabel htmlFor={id} active={active}>\r\n          {label}\r\n        </FloatingLabel>\r\n        <FloatingInput\r\n          {...otherProps}\r\n          active={active}\r\n          id={id}\r\n          onBlur={onBlur}\r\n          onFocus={onFocus}\r\n          inputRef={inputRef}\r\n          type={type}\r\n        />\r\n      </FloatingLabelInputContainer>\r\n    </FloatingLabelInput>\r\n  );\r\n};\r\n\r\nexport default FloatingTextInput;\r\n","import React from 'react';\r\n\r\nimport styles from './LoadingIndicator.module.css';\r\n\r\nconst LoadingIndicator: React.FC = () => (\r\n  <div className={styles.ldsEllipsis}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","import React, { useState } from 'react';\r\n\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = React.forwardRef<\r\n  HTMLButtonElement,\r\n  {\r\n    buttonStyle?: 'bold' | 'normal';\r\n    buttonType?: 'primary' | 'normal';\r\n  } & React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n>(({ children, buttonStyle = 'normal', buttonType = 'normal', ...props }, ref) => {\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  function animateStart() {\r\n    setAnimate(true);\r\n  }\r\n\r\n  function animateEnd() {\r\n    setAnimate(false);\r\n  }\r\n\r\n  function onClick(e: React.MouseEvent<HTMLButtonElement>) {\r\n    if (typeof props.onClick === 'function') {\r\n      props.onClick(e);\r\n    }\r\n    animateStart();\r\n  }\r\n\r\n  function onTransitionEnd(e: React.TransitionEvent<HTMLButtonElement>) {\r\n    if (typeof props.onTransitionEnd === 'function') {\r\n      props.onTransitionEnd(e);\r\n    }\r\n    animateEnd();\r\n  }\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      onClick={onClick}\r\n      onTransitionEnd={onTransitionEnd}\r\n      ref={ref}\r\n      className={`${props.className} ${styles.button} ${animate && styles.animate} ${\r\n        buttonStyle === 'normal' ? styles.styleNormal : styles.styleBold\r\n      } ${buttonType === 'primary' && styles.typePrimary}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { Formik, Form, useField, FieldHookConfig } from 'formik';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styles from './Login.module.css';\r\nimport { authService } from '../../auth/auth.service';\r\nimport { RootState } from '../../store/store';\r\nimport FloatingTextInput from '../elements/FloatingTextInput';\r\nimport LoadingIndicator from '../elements/LoadingIndicator';\r\nimport Button from '../elements/Button';\r\n\r\nconst TextInput: React.FC<{ label: string } & FieldHookConfig<any> &\r\n  React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>> = ({\r\n  label,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  const showError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div>\r\n      <FloatingTextInput\r\n        className={`${styles.inputField} ${showError && styles.inputFieldError}`}\r\n        htmlFor={props.id || props.name}\r\n        label={label}\r\n        {...field}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Login = () => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const loggedIn = !!user;\r\n\r\n  if (loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.inputArea}>\r\n        <span>Login</span>\r\n        <Formik\r\n          initialValues={{ username: '', password: '', loginError: '' }}\r\n          validate={values => {\r\n            const errors: any = {};\r\n            if (!values.username) {\r\n              errors.username = 'Required';\r\n            }\r\n            if (!values.password) {\r\n              errors.password = 'Required';\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={async (values, { setSubmitting, setErrors }) => {\r\n            try {\r\n              await authService.login(values.username, values.password);\r\n              // omit setSubmitting here because if login was successful, it will redirect and thus unmount the component\r\n            } catch (e) {\r\n              if (typeof e.getStatus === 'function' && e.getStatus() === 401) {\r\n                setErrors({ loginError: `Credentials invalid.` });\r\n              } else if (\r\n                (typeof e.message === 'string' && /Network Error/i.test(e.message)) ||\r\n                e.code === 'ECONNABORTED'\r\n              ) {\r\n                setErrors({ loginError: `Network error. Please make sure to be online.` });\r\n              } else {\r\n                setErrors({ loginError: `Unexpected error occured during login.` });\r\n              }\r\n              setSubmitting(false);\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting, errors }) => (\r\n            <Form>\r\n              <TextInput\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"off\"\r\n                autoCorrect=\"off\"\r\n                autoCapitalize=\"off\"\r\n              />\r\n              <TextInput\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                autoComplete=\"off\"\r\n                autoCorrect=\"off\"\r\n                autoCapitalize=\"off\"\r\n              />\r\n              {/* {errors.loginError && errors.loginError.length > 0 && (\r\n                <ul className={styles.errorList}>\r\n                  <li>\r\n                    <span>{errors.loginError}</span>\r\n                  </li>\r\n                </ul>\r\n              )} */}\r\n              <Button buttonStyle=\"bold\" buttonType=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n                {!isSubmitting ? <span>Submit</span> : <LoadingIndicator />}\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { httpClient } from '../http/http.client';\r\nimport { createLogger } from '../logger/logger';\r\nimport { store } from '../store/store';\r\nimport { UpdateConfig } from '../typings/fira-be-typings';\r\n\r\nconst logger = createLogger('admin.service');\r\n\r\nexport const adminService = {\r\n  exportJudgements: async () => {\r\n    logger.info(`executing export of judgements...`);\r\n\r\n    const response = await httpClient.exportJudgements(store.getState().user!.accessToken.val);\r\n    saveTsv('judgements.tsv', response);\r\n\r\n    logger.info(`export of judgements succeeded!`, { response });\r\n  },\r\n\r\n  updateConfig: async (config: UpdateConfig) => {\r\n    logger.info(`executing update of config...`);\r\n\r\n    await httpClient.updateConfig(store.getState().user!.accessToken.val, config);\r\n\r\n    logger.info(`update of config succeeded!`);\r\n  },\r\n\r\n  getStatistics: async () => {\r\n    logger.info(`executing retrieval of statistics...`);\r\n\r\n    const response = await httpClient.getStatistics(store.getState().user!.accessToken.val);\r\n\r\n    logger.info(`retrieval of statistics succeeded!`, { response });\r\n    return response;\r\n  },\r\n};\r\n\r\nfunction saveTsv(filename: string, data: string) {\r\n  const blob = new Blob([data], { type: 'text/tsv' });\r\n  const elem = window.document.createElement('a');\r\n  elem.href = window.URL.createObjectURL(blob);\r\n  elem.download = filename;\r\n  document.body.appendChild(elem);\r\n  elem.click();\r\n  document.body.removeChild(elem);\r\n}\r\n","export function assertUnreachable(x: never): never {\r\n  throw new Error('Should not get here');\r\n}\r\n","import { useDispatch } from 'react-redux';\r\n\r\nexport const useActionsWithDispatch = <T extends {}>(actions: T) => {\r\n  // use type \"Dispatch\" just to clarify that dispatching is automatically done\r\n  type Dispatch<FuncType> = FuncType;\r\n\r\n  type DispatchType = {\r\n    [P in keyof typeof actions]: Dispatch<typeof actions[P]>;\r\n  };\r\n\r\n  const dispatch = useDispatch<any>();\r\n\r\n  const actionsWithDispatch: any = {};\r\n\r\n  for (const action in actions) {\r\n    if (actions.hasOwnProperty(action)) {\r\n      actionsWithDispatch[action] = (...args: any[]) => dispatch((actions as any)[action](...args));\r\n    }\r\n  }\r\n\r\n  return actionsWithDispatch as DispatchType;\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../store';\r\nimport { UserRole } from './user.slice';\r\nimport { assertUnreachable } from '../../util/types.util';\r\nimport { actions } from './user.slice';\r\nimport { useActionsWithDispatch } from '../util/actions.util';\r\n\r\nexport function useUserState() {\r\n  const userRole = useSelector((state: RootState) => {\r\n    if (!state.user) {\r\n      return undefined;\r\n    } else if (state.user.role === UserRole.ADMIN || state.user.role === UserRole.ANNOTATOR) {\r\n      return state.user.role;\r\n    } else {\r\n      assertUnreachable(state.user.role);\r\n    }\r\n  });\r\n\r\n  return { userRole };\r\n}\r\n\r\nexport const useUserActions = () => useActionsWithDispatch(actions);\r\n","import React, { useState } from 'react';\r\nimport { Manager, Reference, Popper } from 'react-popper';\r\n\r\nimport styles from './Menu.module.css';\r\nimport Button from './Button';\r\nimport { useOnViewportClick } from '../util/events.hooks';\r\nimport { useUserActions } from '../../store/user/user.hooks';\r\n\r\nconst MenuButton = React.forwardRef<HTMLButtonElement, { onClick: () => void }>(\r\n  ({ onClick }, ref) => (\r\n    <Button ref={ref} className={styles.menuButton} onClick={onClick}>\r\n      {/* https://material.io/resources/icons/?icon=more_vert&style=baseline */}\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n      </svg>\r\n    </Button>\r\n  ),\r\n);\r\n\r\nconst Menu: React.FC = () => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  useOnViewportClick(() => setShowMenu(false));\r\n  const userActions = useUserActions();\r\n\r\n  function onLogout() {\r\n    userActions.logout();\r\n  }\r\n\r\n  function onShowStartScreen() {\r\n    // TODO implement\r\n    console.log('onShowStartScreen');\r\n  }\r\n\r\n  function toggleShowMenu() {\r\n    setShowMenu(oldVal => !oldVal);\r\n  }\r\n\r\n  function createMenuButton(ref?: React.Ref<HTMLButtonElement>) {\r\n    return <MenuButton onClick={toggleShowMenu} ref={ref} />;\r\n  }\r\n\r\n  return !showMenu ? (\r\n    createMenuButton()\r\n  ) : (\r\n    <Manager>\r\n      <Reference>{({ ref }) => createMenuButton(ref)}</Reference>\r\n      <Popper placement=\"bottom-start\">\r\n        {({ ref, style, placement }) => (\r\n          <div ref={ref} style={style} data-placement={placement}>\r\n            <Button onClick={onShowStartScreen}>Go to Start Screen</Button>\r\n            <Button onClick={onLogout}>Logout</Button>\r\n          </div>\r\n        )}\r\n      </Popper>\r\n    </Manager>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { useEffect } from 'react';\r\n\r\nexport function useKeyupEvent(keyFunctionMap: { [P: string]: () => void }) {\r\n  useEffect(() => {\r\n    const keyUpHandler = (e: KeyboardEvent) => {\r\n      const key = e.code;\r\n      if (keyFunctionMap.hasOwnProperty(key)) {\r\n        keyFunctionMap[key]();\r\n      }\r\n    };\r\n    document.addEventListener('keyup', keyUpHandler, { passive: true });\r\n    return () => document.removeEventListener('keyup', keyUpHandler);\r\n  });\r\n}\r\n\r\nexport function useOnViewportClick(onViewportClick: () => void) {\r\n  useEffect(() => {\r\n    const viewportClickHandler = () => onViewportClick();\r\n    document.addEventListener('click', viewportClickHandler, { passive: true });\r\n    return () => document.removeEventListener('click', viewportClickHandler);\r\n  });\r\n}\r\n","import React from 'react';\n\nimport styles from './Line.module.css';\n\nconst Line: React.FC<{ orientation: 'horizontal' }> = () => (\n  <div className={styles.horizontalLine} />\n);\n\nexport default Line;\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport styles from './Admin.module.css';\r\nimport { Statistic } from '../../typings/fira-be-typings';\r\nimport { JudgementMode } from '../../typings/enums';\r\nimport { adminService } from '../../admin/admin.service';\r\nimport Button from '../elements/Button';\r\nimport Menu from '../elements/Menu';\r\nimport LoadingIndicator from '../elements/LoadingIndicator';\r\nimport Line from '../elements/Line';\r\n\r\nconst Admin: React.FC = () => {\r\n  const [statistics, updateStatistics] = useState<Statistic[] | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    async function fetchStatisticsAndUpdate() {\r\n      updateStatistics((await adminService.getStatistics()).statistics);\r\n    }\r\n\r\n    fetchStatisticsAndUpdate();\r\n  }, [updateStatistics]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.adminArea}>\r\n        <div className={styles.actionBar}>\r\n          <Button\r\n            className={styles.button}\r\n            buttonType=\"primary\"\r\n            onClick={adminService.exportJudgements}\r\n          >\r\n            Export Judgements\r\n          </Button>\r\n          <Menu />\r\n        </div>\r\n        <Line orientation=\"horizontal\" />\r\n        <Formik\r\n          initialValues={{\r\n            judgementMode: JudgementMode.SCORING_AND_SELECT_SPANS,\r\n            rotateDocumentText: 'true',\r\n          }}\r\n          onSubmit={async (values, { setSubmitting }) => {\r\n            try {\r\n              await adminService.updateConfig({\r\n                ...values,\r\n                rotateDocumentText: values.rotateDocumentText === 'true',\r\n              });\r\n              setSubmitting(true);\r\n            } catch (e) {\r\n              setSubmitting(false);\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form className={styles.actionBar}>\r\n              <div className={styles.options}>\r\n                <div>\r\n                  <label htmlFor=\"judgementMode\">Judgement Mode:</label>\r\n                  <Field name=\"judgementMode\" as=\"select\">\r\n                    {Object.values(JudgementMode).map(judgementMode => (\r\n                      <option key={judgementMode} value={judgementMode}>\r\n                        {judgementMode}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"rotateDocumentText\">Rotate Document Text:</label>\r\n                  <Field name=\"rotateDocumentText\" as=\"select\">\r\n                    <option value=\"true\">true</option>\r\n                    <option value=\"false\">false</option>\r\n                  </Field>\r\n                </div>\r\n              </div>\r\n              <Button\r\n                className={styles.button}\r\n                buttonType=\"primary\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n              >\r\n                {!isSubmitting ? 'Update Config' : <LoadingIndicator />}\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Line orientation=\"horizontal\" />\r\n        <div className={styles.statisticsContainer}>\r\n          {statistics &&\r\n            statistics.map(statistic => (\r\n              <div key={statistic.id} className={styles.statistic}>\r\n                <div className={styles.statisticValue}>{statistic.value}</div>\r\n                <div className={styles.statisticLabel}>{statistic.label}</div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","// tslint:disable-next-line:no-empty\r\nexport const noop = () => {};\r\n","import React from 'react';\r\n\r\nimport styles from './RateButton.module.css';\r\nimport Button from '../elements/Button';\r\nimport { RateLevelType } from '../../typings/enums';\r\n\r\nconst RateButton: React.FC<{ rateLevel: RateLevelType; onClick: () => void }> = ({\r\n  rateLevel,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Button\r\n        style={{\r\n          background: rateLevel.buttonColor,\r\n        }}\r\n        className={styles.button}\r\n        onClick={onClick}\r\n      >\r\n        {rateLevel.text}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RateButton;\r\n","import React from 'react';\r\nimport { Manager, Reference, Popper } from 'react-popper';\r\n\r\nimport styles from './AnnotationPart.module.css';\r\nimport Button from '../elements/Button';\r\n\r\nconst AnnotationPart: React.FC<{\r\n  text: string;\r\n  isRangeStart: boolean;\r\n  isInSelectedRange: boolean;\r\n  showTooltip: boolean;\r\n  annotationIsAllowed: boolean;\r\n  onPartClick: () => void;\r\n  onTooltipClick: () => void;\r\n}> = ({\r\n  text,\r\n  isRangeStart,\r\n  isInSelectedRange,\r\n  showTooltip,\r\n  annotationIsAllowed,\r\n  onPartClick,\r\n  onTooltipClick,\r\n}) => {\r\n  // replace blank by fixed-width blank character (otherwise, styles like border/box-shadow don't apply)\r\n  const textToShow = text.replace(' ', '\\u00a0');\r\n\r\n  // set css class if part is start of the current selected range\r\n  const currentRangeStartStyle = isRangeStart ? styles.rangeStart : '';\r\n\r\n  // display the span as selectable if annotation is allowed\r\n  const annotationAllowedStyle = annotationIsAllowed ? styles.annotationAllowed : '';\r\n\r\n  const annotatePartSpan = (ref?: any) => (\r\n    <span\r\n      ref={ref}\r\n      onClick={onPartClick}\r\n      className={`${styles.annotatePart} ${currentRangeStartStyle} ${\r\n        !!isInSelectedRange ? styles.isInRange : ''\r\n      } ${annotationAllowedStyle}`}\r\n    >\r\n      {textToShow}\r\n    </span>\r\n  );\r\n\r\n  return !showTooltip ? (\r\n    annotatePartSpan()\r\n  ) : (\r\n    <Manager>\r\n      <Reference>{({ ref }) => annotatePartSpan(ref)}</Reference>\r\n      <Popper placement=\"top\">\r\n        {({ ref, style, placement }) => (\r\n          <div ref={ref} style={style} data-placement={placement}>\r\n            <Button\r\n              buttonType=\"primary\"\r\n              className={styles.annotatePartTooltipButton}\r\n              onClick={onTooltipClick}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"14\"\r\n                height=\"18\"\r\n                viewBox=\"5 3 14 18\"\r\n                fill=\"white\"\r\n              >\r\n                <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n              </svg>\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Popper>\r\n    </Manager>\r\n  );\r\n};\r\n\r\nexport default AnnotationPart;\r\n","import React, { useState } from 'react';\r\n\r\nimport styles from './Annotation.module.css';\r\nimport { RelevanceLevel, RateLevels, JudgementMode } from '../../typings/enums';\r\nimport { judgementsService } from '../../judgements/judgements.service';\r\nimport { noop } from '../../util/functions';\r\nimport Button from '../elements/Button';\r\nimport { useKeyupEvent as useKeyupHandler } from '../util/events.hooks';\r\nimport RateButton from './RateButton';\r\nimport { JudgementPair } from '../../store/annotation/annotation.slice';\r\nimport AnnotationPart from './AnnotationPart';\r\nimport Menu from '../elements/Menu';\r\nimport Line from '../elements/Line';\r\n\r\nconst Annotation: React.FC<{\r\n  currentJudgementPair: JudgementPair;\r\n  remainingToFinish: number;\r\n  alreadyFinished: number;\r\n  selectRangeStartEnd: ({ annotationPartIndex }: { annotationPartIndex: number }) => void;\r\n  deleteRange: ({ annotationPartIndex }: { annotationPartIndex: number }) => void;\r\n  rateJudgementPair: ({ relevanceLevel }: { relevanceLevel: RelevanceLevel }) => void;\r\n}> = ({\r\n  currentJudgementPair,\r\n  remainingToFinish,\r\n  alreadyFinished,\r\n  selectRangeStartEnd,\r\n  deleteRange,\r\n  rateJudgementPair,\r\n}) => {\r\n  const [tooltipAnnotatePartIndex, setTooltipAnnotatePartIndex] = useState<number | undefined>(\r\n    undefined,\r\n  );\r\n\r\n  useKeyupHandler({\r\n    Digit1: () => rateJudgementPair({ relevanceLevel: RelevanceLevel.MISLEADING_ANSWER }),\r\n    Digit2: () => rateJudgementPair({ relevanceLevel: RelevanceLevel.NOT_RELEVANT }),\r\n    Digit3: () =>\r\n      rateJudgementPair({\r\n        relevanceLevel: RelevanceLevel.TOPIC_RELEVANT_DOES_NOT_ANSWER,\r\n      }),\r\n    Digit4: () => rateJudgementPair({ relevanceLevel: RelevanceLevel.GOOD_ANSWER }),\r\n    Digit5: () => rateJudgementPair({ relevanceLevel: RelevanceLevel.PERFECT_ANSWER }),\r\n  });\r\n\r\n  const currentRateLevel = RateLevels.find(\r\n    rateLevel => rateLevel.relevanceLevel === currentJudgementPair.relevanceLevel,\r\n  );\r\n\r\n  // compute fraction of finished annotation; used for progress bar\r\n  const annotationTarget = remainingToFinish + alreadyFinished;\r\n  const finishedFraction = (alreadyFinished / annotationTarget) * 100;\r\n\r\n  // compute some boolean variables needed to guide the user throw the annotation process\r\n  const ratingRequired = !currentRateLevel;\r\n  const currentSelectionNotFinished = currentJudgementPair.currentAnnotationStart !== undefined;\r\n  const annotationIsRequired =\r\n    currentJudgementPair.mode === JudgementMode.SCORING_AND_SELECT_SPANS &&\r\n    !!currentRateLevel?.annotationRequired &&\r\n    currentJudgementPair.annotatedRanges.length === 0;\r\n\r\n  function hideTooltip() {\r\n    setTooltipAnnotatePartIndex(undefined);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {finishedFraction !== undefined && (\r\n        <div style={{ width: `${finishedFraction}%` }} className={styles.progressBar} />\r\n      )}\r\n      <div className={styles.container} onClickCapture={hideTooltip}>\r\n        <div className={styles.actionBar}>\r\n          <div className={styles.queryText}>{currentJudgementPair.queryText}</div>\r\n          <Menu />\r\n        </div>\r\n        <Line orientation=\"horizontal\" />\r\n        <div key={currentJudgementPair.id} className={styles.annotationArea}>\r\n          {currentJudgementPair.docAnnotationParts.map((annotationPart, i) => {\r\n            // determine if part is in one of the selected ranges\r\n            const isInSelectedRange = currentJudgementPair.annotatedRanges.some(\r\n              range => range.start <= i && range.end >= i,\r\n            );\r\n\r\n            // annotation is allowed if the corresponding judgement mode is set,\r\n            // and the current rate level explicitly requires it\r\n            const annotationIsAllowed =\r\n              currentJudgementPair.mode === JudgementMode.SCORING_AND_SELECT_SPANS &&\r\n              !!currentRateLevel?.annotationRequired;\r\n\r\n            const canAnnotatePart = annotationIsAllowed && !isInSelectedRange;\r\n\r\n            return (\r\n              <AnnotationPart\r\n                key={i}\r\n                text={annotationPart}\r\n                isRangeStart={currentJudgementPair.currentAnnotationStart === i}\r\n                isInSelectedRange={isInSelectedRange}\r\n                showTooltip={tooltipAnnotatePartIndex === i}\r\n                annotationIsAllowed={annotationIsAllowed}\r\n                onPartClick={\r\n                  canAnnotatePart\r\n                    ? () => selectRangeStartEnd({ annotationPartIndex: i })\r\n                    : isInSelectedRange\r\n                    ? () => setTooltipAnnotatePartIndex(i)\r\n                    : noop\r\n                }\r\n                onTooltipClick={() => {\r\n                  deleteRange({ annotationPartIndex: i });\r\n                  hideTooltip();\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={styles.footer}>\r\n          {ratingRequired ? (\r\n            RateLevels.map(rateButton => (\r\n              <RateButton\r\n                key={rateButton.relevanceLevel}\r\n                rateLevel={rateButton}\r\n                onClick={() => judgementsService.rateJudgementPair(rateButton.relevanceLevel)}\r\n              />\r\n            ))\r\n          ) : (\r\n            <>\r\n              <span className={styles.guideText}>\r\n                {currentSelectionNotFinished ? (\r\n                  <>Finish your selection</>\r\n                ) : annotationIsRequired ? (\r\n                  <>Please select the relevant regions of the document.</>\r\n                ) : (\r\n                  <>Feel free to add more relevant regions or go to the next judgement pair.</>\r\n                )}\r\n              </span>\r\n              <Button\r\n                buttonType=\"primary\"\r\n                style={{ width: '60px', height: '50px' }}\r\n                disabled={currentSelectionNotFinished || annotationIsRequired}\r\n                onClick={() => judgementsService.submitCurrentJudgement()}\r\n              >\r\n                Next\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Annotation;\r\n","import React from 'react';\r\n\r\nimport Annotation from './Annotation';\r\nimport { useAnnotationState, useAnnotationActions } from '../../store/annotation/annotation.hooks';\r\n\r\nconst AnnotationContainer: React.FC = () => {\r\n  const { remainingToFinish, alreadyFinished, currentJudgementPair } = useAnnotationState();\r\n  const { selectRangeStartEnd, deleteRange, rateJudgementPair } = useAnnotationActions();\r\n\r\n  /*\r\n   * - if we know that no annotations must be finished anymore\r\n   *   --> render finished screen\r\n   * - if we don't know how many annotations must be finished,\r\n   *   or if we currently have no judgement pair to show\r\n   *   --> render loading screen\r\n   * - else, i.e. if we know that at least one judgement must be finished\r\n   *   and we have a judgement pair to show\r\n   *   --> render annotation screen\r\n   */\r\n\r\n  if (remainingToFinish !== undefined && remainingToFinish <= 0) {\r\n    return (\r\n      // TODO implement finished screen\r\n      <div>Finished!</div>\r\n    );\r\n  }\r\n\r\n  return remainingToFinish === undefined || !currentJudgementPair ? (\r\n    // TODO implement loading screen\r\n    <div>Loading...</div>\r\n  ) : (\r\n    <Annotation\r\n      currentJudgementPair={currentJudgementPair}\r\n      remainingToFinish={remainingToFinish}\r\n      alreadyFinished={alreadyFinished ?? 0}\r\n      selectRangeStartEnd={selectRangeStartEnd}\r\n      deleteRange={deleteRange}\r\n      rateJudgementPair={rateJudgementPair}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AnnotationContainer;\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { actions, JudgementPairStatus } from './annotation.slice';\r\nimport { RootState } from '../store';\r\nimport { useActionsWithDispatch } from '../util/actions.util';\r\n\r\nexport const useAnnotationActions = () => useActionsWithDispatch(actions);\r\n\r\nexport const useAnnotationState = () => {\r\n  const pairsSuccessfullySent = useSelector((state: RootState) =>\r\n    state.annotation.judgementPairs.filter(\r\n      pair => pair.status === JudgementPairStatus.SEND_SUCCESS,\r\n    ),\r\n  );\r\n\r\n  const remainingToFinish = useSelector((state: RootState) => {\r\n    return state.annotation.remainingToFinish === undefined\r\n      ? undefined\r\n      : state.annotation.remainingToFinish - pairsSuccessfullySent.length;\r\n  });\r\n  const alreadyFinished = useSelector((state: RootState) => {\r\n    return state.annotation.alreadyFinished === undefined\r\n      ? undefined\r\n      : state.annotation.alreadyFinished + pairsSuccessfullySent.length;\r\n  });\r\n  const currentJudgementPair = useSelector((state: RootState) =>\r\n    state.annotation.judgementPairs.find(\r\n      pair => pair.id === state.annotation.currentJudgementPairId,\r\n    ),\r\n  );\r\n\r\n  return {\r\n    remainingToFinish,\r\n    alreadyFinished,\r\n    currentJudgementPair,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { RouteProps, Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../store/store';\r\nimport { UserRole } from '../store/user/user.slice';\r\n\r\ntype PrivateRouteProps = RouteProps & {\r\n  requiredRole: UserRole;\r\n};\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ requiredRole, ...rest }) => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n\r\n  if (!!user && user?.role === requiredRole) {\r\n    return <Route {...rest} />;\r\n  } else {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport styles from './App.module.css';\r\nimport Login from './login/Login';\r\nimport Admin from './admin/Admin';\r\nimport AnnotationContainer from './annotation/AnnotationContainer';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { UserRole } from '../store/user/user.slice';\r\nimport { useUserState } from '../store/user/user.hooks';\r\nimport { assertUnreachable } from '../util/types.util';\r\n\r\nconst RouteToPage: React.FC = () => {\r\n  const { userRole } = useUserState();\r\n\r\n  if (!userRole) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else if (userRole === UserRole.ADMIN) {\r\n    return <Redirect to=\"/admin\" />;\r\n  } else if (userRole === UserRole.ANNOTATOR) {\r\n    return <Redirect to=\"/annotator\" />;\r\n  } else {\r\n    assertUnreachable(userRole);\r\n  }\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className={styles.app}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <RouteToPage />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <PrivateRoute path=\"/admin\" requiredRole={UserRole.ADMIN}>\r\n            <Admin />\r\n          </PrivateRoute>\r\n          <PrivateRoute path=\"/annotator\" requiredRole={UserRole.ANNOTATOR}>\r\n            <AnnotationContainer />\r\n          </PrivateRoute>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { browserStorage } from '../browser-storage/browser-storage';\r\nimport { store } from '../store/store';\r\nimport { actions as userActions } from '../store/user/user.slice';\r\nimport { createLogger } from '../logger/logger';\r\n\r\nconst logger = createLogger('load-stored-user');\r\n\r\nexport function loadStoredUser() {\r\n  logger.info('load user from browser storage');\r\n  const storedUser = browserStorage.getUser();\r\n\r\n  if (storedUser) {\r\n    logger.info('stored user found. dispatching authenticate...', { storedUser });\r\n    store.dispatch(userActions.authenticate(storedUser));\r\n  } else {\r\n    logger.info('no stored user found');\r\n  }\r\n}\r\n","import { loadStoredUser } from './load-stored-user';\r\nimport { createLogger } from '../logger/logger';\r\n\r\nconst bootScripts = [loadStoredUser];\r\n\r\nconst logger = createLogger('boot');\r\n\r\nexport const executeBootScripts = () => {\r\n  logger.info('executing boot scripts...');\r\n\r\n  bootScripts.forEach(bootScript => bootScript());\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './ui/App';\r\nimport { store } from './store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { executeBootScripts } from './boot/boot';\r\n\r\nexecuteBootScripts();\r\n\r\nconst renderApp = () =>\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n  );\r\n\r\nif (process.env.NODE_ENV !== 'production' && (module as any).hot) {\r\n  (module as any).hot.accept('./ui/App', renderApp);\r\n}\r\n\r\nrenderApp();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBar\":\"Annotation_progressBar__3Zl_I\",\"container\":\"Annotation_container__uXhm7\",\"actionBar\":\"Annotation_actionBar__1lfnI\",\"queryText\":\"Annotation_queryText__3rHCG\",\"annotationArea\":\"Annotation_annotationArea__2Ta-7\",\"footer\":\"Annotation_footer__NuKUI\",\"guideText\":\"Annotation_guideText__3U2FU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floatingLabelInput\":\"FloatingTextInput_floatingLabelInput__1efr1\",\"floatingLabelInputContainer\":\"FloatingTextInput_floatingLabelInputContainer__2LY7N\",\"floatingLabel\":\"FloatingTextInput_floatingLabel__p_hYS\",\"floatingLabelActive\":\"FloatingTextInput_floatingLabelActive__3cGGa\",\"floatingInput\":\"FloatingTextInput_floatingInput__k7JFP\",\"floatingInputActive\":\"FloatingTextInput_floatingInputActive__1t44z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__aUVEj\",\"typePrimary\":\"Button_typePrimary__3vapG\",\"styleBold\":\"Button_styleBold__OSRgP\",\"styleNormal\":\"Button_styleNormal__21gUz\",\"animate\":\"Button_animate__P4pSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"annotatePart\":\"AnnotationPart_annotatePart__2KO7z\",\"rangeStart\":\"AnnotationPart_rangeStart__3I0cO\",\"isInRange\":\"AnnotationPart_isInRange__3rg58\",\"annotationAllowed\":\"AnnotationPart_annotationAllowed__2jTsQ\",\"annotatePartTooltipButton\":\"AnnotationPart_annotatePartTooltipButton__1RKRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__24P7j\",\"inputArea\":\"Login_inputArea__2NGiA\",\"errorList\":\"Login_errorList__3F7_7\",\"inputField\":\"Login_inputField__24c21\",\"inputFieldError\":\"Login_inputFieldError__1qmtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RateButton_container__34zEJ\",\"button\":\"RateButton_button__31aTD\"};"],"sourceRoot":""}