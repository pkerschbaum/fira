{"version":3,"sources":["ui/annotation-route/feedback-page/AnnotationFeedback.module.css","App.module.css","ui/elements/Menu.module.css","ui/elements/Line.module.css","ui/annotation-route/info-page/info-page-01.png","ui/annotation-route/info-page/info-page-02.png","ui/admin-page/Admin.module.css","ui/elements/forms/FloatingInput.module.css","ui/elements/LoadingIndicator.tsx","ui/elements/Button.tsx","util/types.util.ts","ui/elements/forms/FloatingInput.tsx","ui/elements/forms/Form.tsx","http/http.exception.ts","logger/logger.ts","http/http.client.ts","typings/enums.ts","browser-storage/browser-storage.ts","store/user/user.subscriptions.ts","store/annotation/annotation.slice.ts","store/user/user.slice.ts","stories/judgement.stories.ts","store/annotation/annotation.subscriptions.ts","store/middleware/logger.ts","store/reducers.ts","store/store.ts","stories/auth.stories.ts","ui/login-page/Login.tsx","stories/admin.stories.ts","store/util/actions.util.ts","store/user/user.hooks.ts","util/functions.ts","ui/annotation-route/annotate-page/RateButton.tsx","ui/annotation-route/annotate-page/AnnotationPart.tsx","ui/elements/Line.tsx","ui/annotation-route/annotate-page/Annotation.tsx","ui/util/events.hooks.ts","store/annotation/annotation.hooks.ts","ui/annotation-route/annotate-page/AnnotationContainer.tsx","stories/annotator.stories.ts","ui/annotation-route/info-page/AnnotationInfo.tsx","ui/annotation-route/feedback-page/AnnotationFeedback.tsx","ui/annotation-route/AnnotationRouter.tsx","ui/elements/Menu.tsx","ui/admin-page/Admin.tsx","ui/RoleRoute.tsx","ui/MainRouter.tsx","App.tsx","serviceWorker.ts","boot/load-stored-user.ts","boot/boot.ts","index.tsx","ui/annotation-route/annotate-page/RateButton.module.css","ui/annotation-route/annotate-page/Annotation.module.css","ui/annotation-route/annotate-page/AnnotationPart.module.css","ui/elements/Button.module.css","ui/login-page/Login.module.css","ui/elements/forms/Form.module.css","ui/elements/LoadingIndicator.module.css","ui/annotation-route/info-page/AnnotationInfo.module.css"],"names":["module","exports","LoadingIndicator","type","className","styles","ldsEllipsis","typePrimary","typeSecondary","Button","React","forwardRef","ref","children","buttonType","isLoading","props","useState","animate","setAnimate","onClick","e","onTransitionEnd","button","typeTertiary","assertUnreachable","x","Error","FloatingLabelInput","labelInput","FloatingLabelInputContainer","isError","inputContainerError","inputContainer","FloatingLabel","active","labelActive","label","FloatingInputBox","inputRef","inputActive","input","FloatingTextarea","textareaRef","textarea","FloatingSelect","select","FloatingInput","id","value","childType","otherProps","length","setActive","useRef","onFocus","event","onBlur","target","current","focus","htmlFor","onInput","style","height","scrollHeight","TextInput","useField","field","meta","showError","touched","error","name","Textarea","Select","Form","initialValues","validate","onSubmit","elements","formError","values","a","async","setSubmitting","setErrors","message","test","code","isSubmitting","errors","map","el","idx","childElem","elementType","key","htmlProps","childElements","isLastElem","inputDivider","errorList","disabled","HttpException","errorText","status","this","createLogger","context","logWithContext","logFn","optionalParams","debug","console","info","dir","group","groupEnd","axiosClient","axios","create","baseURL","window","location","origin","timeout","logger","httpClient","loginRequest","username","post","data","response","refreshRequest","attempt","lastError","accessToken","headers","authorization","judgementId","submitJudgementRequest","put","submitFeedbackRequest","get","updateConfigRequest","ms","Promise","res","setTimeout","JudgementMode","RelevanceLevel","UserAnnotationAction","FeedbackScore","UserRole","browserStorage","user","localStorage","setItem","JSON","stringify","removeItem","storedUser","getItem","currentlyStoredUser","parse","JudgementPairStatus","RateLevels","relevanceLevel","MISLEADING_ANSWER","annotationRequired","NOT_RELEVANT","TOPIC_RELEVANT_DOES_NOT_ANSWER","GOOD_ANSWER","PERFECT_ANSWER","authenticate","createAction","acknowledgeInfoPage","logout","reducer","createReducer","builder","addCase","state","action","accessTokenJwtPayload","jwt","payload","refreshTokenJwtPayload","refreshToken","isAdmin","resource_access","roles","some","role","acknowledgedInfoPage","val","expiry","exp","ADMIN","ANNOTATOR","actions","INITIAL_STATE","judgementPairs","preloadJudgements","rateJudgementPair","selectRangeStartEnd","deleteRange","setJudgementStatus","selectJudgementPair","alreadyFinished","remainingToFinish","requiredUserAction","judgementPairsReceived","judgements","judgement","jp1","jp2","localEquivalentPair","find","pair","queryText","docAnnotationParts","part","index","annotatedRanges","TO_JUDGE","currentJudgementPair","currentJudgementPairId","rateLevel","currentAnnotationStart","undefined","annotationPartIndex","start","end","actualStart","actualEnd","filter","range","push","currentJudgementPairSelectedOnMs","Date","getTime","userActions","judgementStories","store","getState","dispatch","annotationActions","annotationState","annotation","submitCurrentJudgement","relevancePositions","annotatedRange","i","now","durationUsedToJudgeMs","SEND_PENDING","SEND_FAILED","SEND_SUCCESS","addMemoizedSubscription","subscription","memoizedValue","memoizeOnValue","subscribe","newValueOfStore","listener","loggerMiddleware","next","result","combineReducers","userReducer","annotationReducer","configureStore","rootReducer","middleware","getDefaultMiddleware","scheduleId","REFRESH_OFFSET","moment","duration","currentUser","userOfStore","previousUser","clearTimeout","timeStampToRefresh","unix","subtract","timeUntilRefreshMs","diff","asMilliseconds","authStories","refresh","toString","subscribedStore","countOfAllJudgementPairs","countOfOpenJudgementPairs","countOfCompletedJudgementPairs","nextPair","forEach","login","password","loginResponse","refreshResponse","Login","useSelector","to","container","headline","inputArea","inputHeadline","getStatus","autoCorrect","autoCapitalize","autoComplete","adminStories","exportJudgements","saveTsv","updateConfig","config","getStatistics","filename","blob","Blob","elem","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","useActionsWithDispatch","useDispatch","actionsWithDispatch","hasOwnProperty","useUserState","userRole","userAcknowledgedInfoPage","noop","RATE_LEVEL_DATA","misleadingAnswer","text","keyboardKey","notRelevant","topicRelevantDoesNotAnswer","goodAnswer","perfectAnswer","RateButton","hotkey","AnnotationPart","isRangeStart","isInSelectedRange","showTooltip","annotationIsAllowedOnPart","annotationIsAllowedInGeneral","onPartClick","onTooltipClick","textToShow","replace","currentRangeStartStyle","rangeStart","annotationAllowedOnPartStyle","annotationAllowedOnPart","annotationAllowedInGeneralStyle","annotationAllowedInGeneral","annotatePartSpan","annotatePart","isInRange","Manager","Reference","Popper","placement","data-placement","annotatePartTooltipButton","xmlns","width","viewBox","fill","d","Line","horizontalLine","Annotation","keyFunctionMap","tooltipAnnotatePartIndex","setTooltipAnnotatePartIndex","createJudgementFn","Digit1","Digit2","Digit3","Digit4","Digit5","useEffect","keyUpHandler","addEventListener","passive","removeEventListener","currentRateLevel","finishedFraction","ratingRequired","currentSelectionNotFinished","mode","SCORING_AND_SELECT_SPANS","annotationIsRequired","hideTooltip","progressBar","onClickCapture","actionBar","orientation","annotationArea","annotationPart","canAnnotatePart","footer","rateButton","guideText","useAnnotationState","pairsSuccessfullySent","AnnotationContainer","annotatorStories","feedbackData","AnnotationInfo","annotationRouting","useRouting","content","infoPage01","alt","infoPage02","entry","infoImage","src","routeToAnnotatePage","FEEDBACK_SCORE_TEXTS","VERY_GOOD","GOOD","DECENT","DONT_LIKE_IT","AnnotationFeedback","submitFeedback","feedback","feedbackScore","feedbackText","score","Object","placeholder","history","useHistory","routeToInfoPage","AnnotationRouter","match","useRouteMatch","redirectToDefault","path","SUBMIT_FEEDBACK","MenuButton","menuButton","Menu","onViewportClick","showMenu","setShowMenu","viewportClickHandler","onLogout","onShowInfoPage","toggleShowMenu","oldVal","createMenuButton","Admin","statistics","updateStatistics","adminArea","judgementMode","rotateDocumentText","options","as","statisticsContainer","statistic","statisticValue","statisticLabel","RoleRoute","requiredRole","rest","RedirectDependingOnUserRole","MainRouter","exact","App","app","Boolean","hostname","bootScripts","bootScript","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88f0f910.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AnnotationFeedback_container__3lJyj\",\"headline\":\"AnnotationFeedback_headline__1MCu2\",\"errorList\":\"AnnotationFeedback_errorList__32-8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__291qZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuButton\":\"Menu_menuButton__2DoUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontalLine\":\"Line_horizontalLine__2MX1a\"};","module.exports = __webpack_public_path__ + \"static/media/info-page-01.362e062c.png\";","module.exports = __webpack_public_path__ + \"static/media/info-page-02.7e7f805f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Admin_container__33Ln9\",\"adminArea\":\"Admin_adminArea__32AQI\",\"actionBar\":\"Admin_actionBar__1sZ-J\",\"options\":\"Admin_options__3JgHD\",\"button\":\"Admin_button__HYdyi\",\"statisticsContainer\":\"Admin_statisticsContainer__1sIQ8\",\"statisticValue\":\"Admin_statisticValue__2yFP8\",\"statisticLabel\":\"Admin_statisticLabel__1bWck\",\"statistic\":\"Admin_statistic__2fbh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelInput\":\"FloatingInput_labelInput__10wpa\",\"inputContainer\":\"FloatingInput_inputContainer__QiCsd\",\"inputContainerError\":\"FloatingInput_inputContainerError__3CdgT\",\"label\":\"FloatingInput_label__2jORm\",\"labelActive\":\"FloatingInput_labelActive__1MHdi\",\"input\":\"FloatingInput_input__gLnnR\",\"inputActive\":\"FloatingInput_inputActive__2r5uL\",\"textarea\":\"FloatingInput_textarea__17ztw\",\"select\":\"FloatingInput_select__3m6Yr\"};","import React from 'react';\r\n\r\nimport styles from './LoadingIndicator.module.css';\r\n\r\nconst LoadingIndicator: React.FC<{ type?: 'primary' | 'secondary' }> = ({ type = 'secondary' }) => (\r\n  <div\r\n    className={`${styles.ldsEllipsis} ${\r\n      type === 'primary' ? styles.typePrimary : styles.typeSecondary\r\n    }`}\r\n  >\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","import React, { useState } from 'react';\r\n\r\nimport styles from './Button.module.css';\r\nimport LoadingIndicator from './LoadingIndicator';\r\n\r\nconst Button = React.forwardRef<\r\n  HTMLButtonElement,\r\n  {\r\n    buttonType?: 'primary' | 'secondary' | 'tertiary';\r\n    isLoading?: boolean;\r\n  } & React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n>(({ children, buttonType = 'secondary', isLoading, ...props }, ref) => {\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  function animateStart() {\r\n    setAnimate(true);\r\n  }\r\n\r\n  function animateEnd() {\r\n    setAnimate(false);\r\n  }\r\n\r\n  function onClick(e: React.MouseEvent<HTMLButtonElement>) {\r\n    if (typeof props.onClick === 'function') {\r\n      props.onClick(e);\r\n    }\r\n    animateStart();\r\n  }\r\n\r\n  function onTransitionEnd(e: React.TransitionEvent<HTMLButtonElement>) {\r\n    if (typeof props.onTransitionEnd === 'function') {\r\n      props.onTransitionEnd(e);\r\n    }\r\n    animateEnd();\r\n  }\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      onClick={onClick}\r\n      onTransitionEnd={onTransitionEnd}\r\n      ref={ref}\r\n      className={`${props.className} ${styles.button} ${animate && styles.animate} ${\r\n        buttonType === 'primary'\r\n          ? styles.typePrimary\r\n          : buttonType === 'secondary'\r\n          ? styles.typeSecondary\r\n          : styles.typeTertiary\r\n      }`}\r\n    >\r\n      {!isLoading ? (\r\n        typeof children === 'string' ? (\r\n          <span>{children}</span>\r\n        ) : (\r\n          children\r\n        )\r\n      ) : (\r\n        <div>\r\n          <LoadingIndicator type={buttonType === 'tertiary' ? 'secondary' : buttonType} />\r\n        </div>\r\n      )}\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","export function assertUnreachable(x: never): never {\r\n  throw new Error('Should not get here');\r\n}\r\n","import React, { useState, useRef } from 'react';\r\n\r\nimport styles from './FloatingInput.module.css';\r\nimport { assertUnreachable } from '../../../util/types.util';\r\n\r\ntype FloatingLabelInputProps = React.DetailedHTMLProps<\r\n  React.HTMLAttributes<HTMLDivElement>,\r\n  HTMLDivElement\r\n>;\r\n\r\nconst FloatingLabelInput: React.FC<FloatingLabelInputProps> = ({ children, ...props }) => (\r\n  <div {...props} className={`${props.className} ${styles.labelInput}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\ntype FloatingLabelInputContainerProps = React.DetailedHTMLProps<\r\n  React.HTMLAttributes<HTMLDivElement>,\r\n  HTMLDivElement\r\n>;\r\n\r\nconst FloatingLabelInputContainer: React.FC<{\r\n  isError?: boolean;\r\n} & FloatingLabelInputContainerProps> = ({ isError, children, ...props }) => (\r\n  <div\r\n    {...props}\r\n    className={`${props.className} ${isError && styles.inputContainerError} ${\r\n      styles.inputContainer\r\n    }`}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\ntype FloatingLabelProps = { active: boolean } & React.DetailedHTMLProps<\r\n  React.LabelHTMLAttributes<HTMLLabelElement>,\r\n  HTMLLabelElement\r\n>;\r\n\r\nconst FloatingLabel: React.FC<FloatingLabelProps> = ({ active, children, ...props }) => (\r\n  <label\r\n    {...props}\r\n    className={`${props.className} ${!!active && styles.labelActive} ${styles.label}`}\r\n  >\r\n    {children}\r\n  </label>\r\n);\r\n\r\ntype FloatingInputBoxProps = {\r\n  active: boolean;\r\n  inputRef: React.RefObject<HTMLInputElement>;\r\n} & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\nconst FloatingInputBox: React.FC<FloatingInputBoxProps> = ({\r\n  children,\r\n  active,\r\n  inputRef,\r\n  ...props\r\n}) => (\r\n  <input\r\n    {...props}\r\n    ref={inputRef}\r\n    className={`${props.className} ${!!active && styles.inputActive} ${styles.input}`}\r\n  >\r\n    {children}\r\n  </input>\r\n);\r\n\r\ntype FloatingTextareaProps = {\r\n  textareaRef: React.RefObject<HTMLTextAreaElement>;\r\n} & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>;\r\n\r\nconst FloatingTextarea: React.FC<FloatingTextareaProps> = ({ children, textareaRef, ...props }) => (\r\n  <textarea {...props} ref={textareaRef} className={`${props.className} ${styles.textarea}`}>\r\n    {children}\r\n  </textarea>\r\n);\r\n\r\ntype FloatingSelectProps = React.DetailedHTMLProps<\r\n  React.SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\nconst FloatingSelect: React.FC<FloatingSelectProps> = ({ children, ...props }) => (\r\n  <select {...props} className={`${props.className} ${styles.select}`}>\r\n    {children}\r\n  </select>\r\n);\r\n\r\nconst FloatingInput: React.FC<{ [prop: string]: any } & {\r\n  isError?: boolean;\r\n  childType: 'input' | 'textarea' | 'select';\r\n}> = ({ id, label, type, className, isError, value, childType, ...otherProps }) => {\r\n  const [active, setActive] = useState(childType !== 'input' || (!!value && value.length > 0));\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  function onFocus(event: any) {\r\n    setActive(true);\r\n    if (otherProps.onFocus) {\r\n      otherProps.onFocus(event);\r\n    }\r\n  }\r\n  function onBlur(event: any) {\r\n    if (!event.target.value || event.target.value.length === 0) {\r\n      setActive(false);\r\n    }\r\n    if (otherProps.onBlur) {\r\n      otherProps.onBlur(event);\r\n    }\r\n  }\r\n\r\n  function onContainerClick() {\r\n    if (childType === 'input') {\r\n      inputRef.current!.focus();\r\n    } else if (childType === 'textarea') {\r\n      textareaRef.current!.focus();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FloatingLabelInput>\r\n      <FloatingLabelInputContainer\r\n        onClick={onContainerClick}\r\n        isError={isError}\r\n        className={className}\r\n      >\r\n        {label && (\r\n          <FloatingLabel htmlFor={id} active={active}>\r\n            {label}\r\n          </FloatingLabel>\r\n        )}\r\n        {childType === 'input' ? (\r\n          <FloatingInputBox\r\n            {...otherProps}\r\n            active={active}\r\n            id={id}\r\n            onBlur={onBlur}\r\n            onFocus={onFocus}\r\n            inputRef={inputRef}\r\n            type={type}\r\n          />\r\n        ) : childType === 'select' ? (\r\n          <FloatingSelect {...otherProps}>{otherProps.children}</FloatingSelect>\r\n        ) : childType === 'textarea' ? (\r\n          <FloatingTextarea\r\n            {...otherProps}\r\n            id={id}\r\n            onBlur={onBlur}\r\n            onFocus={onFocus}\r\n            textareaRef={textareaRef}\r\n            onInput={function resizeOnContentChange() {\r\n              // see https://stackoverflow.com/a/25621277/1700319\r\n              textareaRef.current!.style.height = 'auto';\r\n              textareaRef.current!.style.height = textareaRef.current!.scrollHeight + 'px';\r\n            }}\r\n          />\r\n        ) : (\r\n          assertUnreachable(childType)\r\n        )}\r\n      </FloatingLabelInputContainer>\r\n    </FloatingLabelInput>\r\n  );\r\n};\r\n\r\nexport default FloatingInput;\r\n","import React from 'react';\nimport { Formik, FieldHookConfig, useField, FormikValues, Form as FormikForm } from 'formik';\n\nimport styles from './Form.module.css';\nimport Button from '../Button';\nimport FloatingInput from './FloatingInput';\nimport { assertUnreachable } from '../../../util/types.util';\n\nconst TextInput: React.FC<{ label: string } & FieldHookConfig<HTMLInputElement> &\n  React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>> = ({\n  label,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n\n  const showError = !!(meta.touched && meta.error);\n\n  return (\n    <div>\n      <FloatingInput\n        childType=\"input\"\n        isError={showError}\n        htmlFor={props.id || props.name}\n        label={label}\n        {...field}\n        {...props}\n      />\n    </div>\n  );\n};\n\nconst Textarea: React.FC<FieldHookConfig<HTMLTextAreaElement> &\n  React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>> = ({\n  ...props\n}) => {\n  const [field] = useField(props);\n\n  return (\n    <div>\n      <FloatingInput childType=\"textarea\" htmlFor={props.id || props.name} {...field} {...props} />\n    </div>\n  );\n};\n\nconst Select: React.FC<{ label: string } & FieldHookConfig<HTMLSelectElement> &\n  React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>> = ({\n  label,\n  ...props\n}) => {\n  const [field] = useField(props);\n\n  return (\n    <div>\n      <FloatingInput\n        childType=\"select\"\n        htmlFor={props.id || props.name}\n        label={label}\n        {...field}\n        {...props}\n      />\n    </div>\n  );\n};\n\ntype Errors = {\n  [field: string]: string;\n};\n\ntype InputElement = {\n  readonly elementType: 'input';\n  readonly label: string;\n  readonly htmlProps: FieldHookConfig<HTMLInputElement> &\n    React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n};\n\ntype TextareaElement = {\n  readonly elementType: 'textarea';\n  readonly htmlProps: FieldHookConfig<HTMLTextAreaElement> &\n    React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>;\n};\n\ntype SelectElement = {\n  readonly elementType: 'select';\n  readonly label: string;\n  readonly htmlProps: FieldHookConfig<HTMLSelectElement> &\n    React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\n  readonly childElements: React.ReactNode;\n};\n\ntype FormProps<V extends FormikValues> = {\n  readonly initialValues: V;\n  readonly validate?: (values: V) => Errors;\n  readonly onSubmit: (\n    values: V,\n    formHelpers: {\n      setSubmitting: (arg: boolean) => void;\n      setErrors: (arg: V & { formError: string }) => void;\n    },\n  ) => Promise<void>;\n  readonly elements: Array<InputElement | TextareaElement | SelectElement>;\n};\n\nconst Form: <T extends FormikValues>(p: FormProps<T>) => React.ReactElement<FormProps<T>> = ({\n  initialValues,\n  validate,\n  onSubmit,\n  elements,\n}) => {\n  return (\n    <Formik\n      initialValues={{ ...initialValues, formError: '' }}\n      validate={validate}\n      onSubmit={async (values, { setSubmitting, setErrors }) => {\n        try {\n          await onSubmit(values, { setSubmitting, setErrors });\n        } catch (e) {\n          if (\n            (typeof e.message === 'string' && /Network Error/i.test(e.message)) ||\n            e.code === 'ECONNABORTED'\n          ) {\n            setErrors({ formError: `Network error. Please make sure to be online.` } as any);\n          } else {\n            setErrors({ formError: `Unexpected error occured.` } as any);\n          }\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ isSubmitting, errors }) => (\n        <FormikForm>\n          <div className={styles.inputContainer}>\n            {elements.map((el, idx) => {\n              const childElem =\n                el.elementType === 'input' ? (\n                  <TextInput key={idx} label={el.label} {...el.htmlProps} />\n                ) : el.elementType === 'select' ? (\n                  <Select key={idx} label={el.label} {...el.htmlProps}>\n                    {el.childElements}\n                  </Select>\n                ) : el.elementType === 'textarea' ? (\n                  <Textarea key={idx} {...el.htmlProps} />\n                ) : (\n                  assertUnreachable(el)\n                );\n\n              const isLastElem = idx === elements.length - 1;\n\n              return (\n                <>\n                  {childElem}\n                  {/* omit divider for last element */}\n                  {isLastElem ? null : <div className={styles.inputDivider} />}\n                </>\n              );\n            })}\n          </div>\n          {errors.formError && errors.formError.length && errors.formError.length > 0 && (\n            <ul className={styles.errorList}>\n              <li>\n                <span>{errors.formError}</span>\n              </li>\n            </ul>\n          )}\n          <Button\n            className={styles.button}\n            buttonType=\"primary\"\n            type=\"submit\"\n            disabled={isSubmitting}\n            isLoading={isSubmitting}\n          >\n            Continue\n          </Button>\n        </FormikForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default Form;\n","import { HttpStatus } from './http-status.enum';\r\n\r\nexport class HttpException extends Error {\r\n  private errorText: string;\r\n  private status: HttpStatus;\r\n  /**\r\n   * Instantiate a plain HTTP Exception.\r\n   *\r\n   * @example\r\n   * `throw new HttpException()`\r\n   *\r\n   * @param errorText string describing the error condition.\r\n   * @param status HTTP response status code\r\n   */\r\n  constructor(errorText: string, status: HttpStatus) {\r\n    super();\r\n    this.errorText = errorText;\r\n    this.status = status;\r\n    this.message = errorText;\r\n  }\r\n  getResponse() {\r\n    return this.errorText;\r\n  }\r\n  getStatus() {\r\n    return this.status;\r\n  }\r\n  toString() {\r\n    return `HttpException: status=${this.status}, errorText='${this.errorText}'`;\r\n  }\r\n}\r\n","/* eslint-disable no-console */\r\n/* tslint:disable no-console */\r\n\r\nexport const createLogger = (context: string) => {\r\n  const logWithContext = (logFn: (message?: any, ...optionalParams: any[]) => void) => (\r\n    message?: any,\r\n    ...optionalParams: any[]\r\n  ) => logFn(`[${context}] ${message}`, ...optionalParams);\r\n\r\n  return {\r\n    debug: logWithContext(console.debug),\r\n    info: logWithContext(console.info),\r\n    error: logWithContext(console.error),\r\n    dir: logWithContext(console.dir),\r\n    group: console.group,\r\n    groupEnd: console.groupEnd,\r\n  };\r\n};\r\n","import axios from 'axios';\r\n\r\nimport { HttpException } from './http.exception';\r\nimport { createLogger } from '../logger/logger';\r\n\r\nimport {\r\n  LoginRequest,\r\n  ImportUsersResponse,\r\n  ImportUsersRequest,\r\n  AuthResponse,\r\n  RefreshRequest,\r\n  ImportDocumentsReq,\r\n  ImportDocumentsResp,\r\n  ImportQueriesReq,\r\n  ImportQueriesResp,\r\n  ImportJudgementPairsReq,\r\n  ImportJudgementPairsResp,\r\n  PreloadJudgementResponse,\r\n  SaveJudgement,\r\n  StatisticsResp,\r\n  UpdateConfig,\r\n  SubmitFeedback,\r\n} from '../typings/fira-be-typings';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: window.location.origin,\r\n  timeout: 5000,\r\n});\r\nconst logger = createLogger('http.client');\r\nconst REFRESH_RETRY_COUNT = 5;\r\nconst REFRESH_RETRY_DELAY = 3 * 1000; // 3 seconds\r\n\r\nexport const httpClient = {\r\n  login: async (loginRequest: LoginRequest): Promise<AuthResponse> => {\r\n    logger.info('executing login...', { username: loginRequest.username });\r\n\r\n    try {\r\n      return (await axiosClient.post<AuthResponse>('auth/v1/login', loginRequest)).data;\r\n    } catch (e) {\r\n      logger.error('login failed!', e);\r\n      if (e.response?.status === 401) {\r\n        throw new HttpException('credentials invalid', 401);\r\n      }\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  refresh: async (refreshRequest: RefreshRequest): Promise<AuthResponse> => {\r\n    logger.info('executing refresh...', { refreshRequest });\r\n\r\n    // retry refresh with same token 3 times because if the internet connection was idle,\r\n    // ERR_NETWORK_IO_SUSPENDED can occur on the first try\r\n    let attempt = 1;\r\n    let lastError;\r\n    while (attempt <= REFRESH_RETRY_COUNT) {\r\n      try {\r\n        return (await axiosClient.post<AuthResponse>('auth/v1/refresh', refreshRequest)).data;\r\n      } catch (e) {\r\n        logger.info(`refresh failed for attempt=${attempt}`, { error: e });\r\n        lastError = e;\r\n        attempt++;\r\n        if (e.response?.status) {\r\n          // got some response from backend --> no retry necessary\r\n          break;\r\n        }\r\n        if (attempt <= REFRESH_RETRY_COUNT) {\r\n          await timeout(REFRESH_RETRY_DELAY);\r\n        }\r\n      }\r\n    }\r\n    logger.error('refresh failed!', lastError);\r\n    throw lastError;\r\n  },\r\n\r\n  importUsers: async (\r\n    accessToken: string,\r\n    importUsersRequest: ImportUsersRequest,\r\n  ): Promise<ImportUsersResponse> => {\r\n    logger.info('executing import users...', { importUsersRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.post<ImportUsersResponse>('admin/v1/import/users', importUsersRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import users failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importDocuments: async (\r\n    accessToken: string,\r\n    importDocumentsRequest: ImportDocumentsReq,\r\n  ): Promise<ImportDocumentsResp> => {\r\n    logger.info('executing import documents...', { importDocumentsRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put<ImportDocumentsResp>(\r\n          'admin/v1/import/documents',\r\n          importDocumentsRequest,\r\n          {\r\n            headers: {\r\n              authorization: `Bearer ${accessToken}`,\r\n            },\r\n          },\r\n        )\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import documents failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importQueries: async (\r\n    accessToken: string,\r\n    importQueriesRequest: ImportQueriesReq,\r\n  ): Promise<ImportQueriesResp> => {\r\n    logger.info('executing import queries...', { importQueriesRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put<ImportQueriesResp>('admin/v1/import/queries', importQueriesRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import queries failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importJudgementPairs: async (\r\n    accessToken: string,\r\n    importJudgPairsRequest: ImportJudgementPairsReq,\r\n  ): Promise<ImportJudgementPairsResp> => {\r\n    logger.info('executing import judgement pairs...', { importJudgPairsRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put<ImportJudgementPairsResp>(\r\n          'admin/v1/import/judgement-pairs',\r\n          importJudgPairsRequest,\r\n          {\r\n            headers: {\r\n              authorization: `Bearer ${accessToken}`,\r\n            },\r\n          },\r\n        )\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('import judgement pairs failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  preloadJudgements: async (accessToken: string): Promise<PreloadJudgementResponse> => {\r\n    logger.info('executing preload judgements...');\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.post<PreloadJudgementResponse>('judgements/v1/preload', null, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('preload judgements failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  submitJudgement: async (\r\n    accessToken: string,\r\n    judgementId: number,\r\n    submitJudgementRequest: SaveJudgement,\r\n  ): Promise<void> => {\r\n    logger.info('executing submit judgement...', { submitJudgementRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put(`judgements/v1/${judgementId}`, submitJudgementRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('submit judgement failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  submitFeedback: async (\r\n    accessToken: string,\r\n    submitFeedbackRequest: SubmitFeedback,\r\n  ): Promise<void> => {\r\n    logger.info('executing submit feedback...', { submitFeedbackRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.post(`feedback/v1`, submitFeedbackRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('submit feedback failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  exportJudgements: async (accessToken: string): Promise<string> => {\r\n    logger.info('executing export of judgements...');\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.get(`admin/v1/judgements/export/tsv`, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('export of judgements failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  updateConfig: async (accessToken: string, updateConfigRequest: UpdateConfig): Promise<void> => {\r\n    logger.info('executing update of config...', { updateConfigRequest });\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.put(`admin/v1/config`, updateConfigRequest, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('update of config failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  getStatistics: async (accessToken: string): Promise<StatisticsResp> => {\r\n    logger.info('executing retrieval of statistics...');\r\n\r\n    try {\r\n      return (\r\n        await axiosClient.get(`admin/v1/statistics`, {\r\n          headers: {\r\n            authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (e) {\r\n      logger.error('retrieval of statistics failed!', e);\r\n      throw e;\r\n    }\r\n  },\r\n};\r\n\r\nfunction timeout(ms: number) {\r\n  return new Promise(res => setTimeout(res, ms));\r\n}\r\n","// fira-be & fira-web shared (duplicated) enums\r\nexport enum JudgementMode {\r\n  PLAIN_RELEVANCE_SCORING = 'PLAIN_RELEVANCE_SCORING',\r\n  SCORING_AND_SELECT_SPANS = 'SCORING_AND_SELECT_SPANS',\r\n}\r\n\r\nexport enum RelevanceLevel {\r\n  NOT_RELEVANT = '0_NOT_RELEVANT',\r\n  TOPIC_RELEVANT_DOES_NOT_ANSWER = '1_TOPIC_RELEVANT_DOES_NOT_ANSWER',\r\n  GOOD_ANSWER = '2_GOOD_ANSWER',\r\n  PERFECT_ANSWER = '3_PERFECT_ANSWER',\r\n  MISLEADING_ANSWER = '-1_MISLEADING_ANSWER',\r\n}\r\n\r\nexport enum UserAnnotationAction {\r\n  ANNOTATE = 'ANNOTATE',\r\n  SUBMIT_FEEDBACK = 'SUBMIT_FEEDBACK',\r\n}\r\n\r\nexport enum FeedbackScore {\r\n  VERY_GOOD = 'VERY_GOOD',\r\n  GOOD = 'GOOD',\r\n  DECENT = 'DECENT',\r\n  DONT_LIKE_IT = 'DONT_LIKE_IT',\r\n}\r\n\r\n// fira-web exclusive enums\r\nexport enum UserRole {\r\n  ANNOTATOR = 'ANNOTATOR',\r\n  ADMIN = 'ADMIN',\r\n}\r\n\r\nexport type RateLevelType = {\r\n  readonly relevanceLevel: RelevanceLevel;\r\n  readonly annotationRequired: boolean;\r\n};\r\n\r\nexport const RateLevels: RateLevelType[] = [\r\n  {\r\n    relevanceLevel: RelevanceLevel.MISLEADING_ANSWER,\r\n    annotationRequired: false,\r\n  },\r\n  {\r\n    relevanceLevel: RelevanceLevel.NOT_RELEVANT,\r\n    annotationRequired: false,\r\n  },\r\n  {\r\n    relevanceLevel: RelevanceLevel.TOPIC_RELEVANT_DOES_NOT_ANSWER,\r\n    annotationRequired: true,\r\n  },\r\n  {\r\n    relevanceLevel: RelevanceLevel.GOOD_ANSWER,\r\n    annotationRequired: true,\r\n  },\r\n  {\r\n    relevanceLevel: RelevanceLevel.PERFECT_ANSWER,\r\n    annotationRequired: true,\r\n  },\r\n];\r\n","import { createLogger } from '../logger/logger';\r\n\r\ntype LocalStorageUser = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  acknowledgedInfoPage: boolean;\r\n};\r\n\r\nconst USER_KEY = 'user';\r\n\r\nconst logger = createLogger('browser-storage');\r\n\r\nexport const browserStorage = {\r\n  saveUser: (user: LocalStorageUser) => {\r\n    logger.info('saveUser called', { user });\r\n\r\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  },\r\n\r\n  clearUser: () => {\r\n    logger.info('clearUser called');\r\n\r\n    localStorage.removeItem(USER_KEY);\r\n  },\r\n\r\n  getUser: (): LocalStorageUser | null => {\r\n    logger.info('getUser called');\r\n\r\n    const storedUser = localStorage.getItem(USER_KEY);\r\n    if (!storedUser) {\r\n      logger.info('no user found');\r\n      return null;\r\n    }\r\n    logger.info('user found', { currentlyStoredUser: storedUser });\r\n    return JSON.parse(storedUser) as LocalStorageUser;\r\n  },\r\n};\r\n","import moment from 'moment';\r\n\r\nimport { browserStorage } from '../../browser-storage/browser-storage';\r\nimport { authStories } from '../../stories/auth.stories';\r\nimport { createLogger } from '../../logger/logger';\r\nimport { RootStore } from '../store';\r\n\r\nconst logger = createLogger('user.subscriptions');\r\n\r\nexport const setupSubscriptions = (store: RootStore) => {\r\n  // listen for changes on user state and synchronize with browser storage\r\n  const REFRESH_OFFSET = moment.duration(1, 'minutes');\r\n  let currentUser = store.getState().user;\r\n  let scheduleId: NodeJS.Timeout | undefined;\r\n\r\n  store.subscribe(() => {\r\n    const userOfStore = store.getState().user;\r\n    if (userOfStore !== currentUser) {\r\n      logger.info('user changed', { previousUser: currentUser, userOfStore });\r\n\r\n      currentUser = userOfStore;\r\n\r\n      // clear old schedule of refresh of token, if present\r\n      if (scheduleId) {\r\n        clearTimeout(scheduleId);\r\n      }\r\n\r\n      if (!currentUser) {\r\n        // if no user is present (e.g., logout was executed), clear scheduled refresh and browser storage\r\n        logger.info('no user present, clear scheduled refresh and browser storage');\r\n        return browserStorage.clearUser();\r\n      }\r\n\r\n      // save new user in browser storage\r\n      browserStorage.saveUser({\r\n        accessToken: currentUser.accessToken.val,\r\n        refreshToken: currentUser.refreshToken.val,\r\n        acknowledgedInfoPage: currentUser.acknowledgedInfoPage,\r\n      });\r\n      logger.info('user saved to browser storage');\r\n\r\n      // schedule refresh of token\r\n      const expiry = moment.unix(currentUser.accessToken.expiry);\r\n      const timeStampToRefresh = expiry.subtract(REFRESH_OFFSET);\r\n      const timeUntilRefreshMs = moment\r\n        .duration(timeStampToRefresh.diff(moment()))\r\n        .asMilliseconds();\r\n      const refreshToken = currentUser.refreshToken.val;\r\n\r\n      scheduleId = setTimeout(async () => {\r\n        await authStories.refresh(refreshToken);\r\n      }, timeUntilRefreshMs);\r\n\r\n      logger.info(`refresh got scheduled, scheduled at: ${timeStampToRefresh.toString()}`);\r\n    }\r\n  });\r\n};\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { PreloadJudgement } from '../../typings/fira-be-typings';\r\nimport { RelevanceLevel, RateLevels, UserAnnotationAction } from '../../typings/enums';\r\nimport { actions as userActions } from '../user/user.slice';\r\n\r\nexport enum JudgementPairStatus {\r\n  TO_JUDGE = 'TO_JUDGE',\r\n  SEND_PENDING = 'SEND_PENDING',\r\n  SEND_SUCCESS = 'SEND_SUCCESS',\r\n  SEND_FAILED = 'SEND_FAILED',\r\n}\r\n\r\nexport type JudgementPair = PreloadJudgement & {\r\n  readonly relevanceLevel?: RelevanceLevel;\r\n  readonly currentAnnotationStart?: number;\r\n  readonly annotatedRanges: Array<{ start: number; end: number }>;\r\n  readonly status: JudgementPairStatus;\r\n};\r\n\r\ntype AnnotationState = {\r\n  readonly judgementPairs: JudgementPair[];\r\n  readonly alreadyFinished?: number;\r\n  readonly remainingToFinish?: number;\r\n  readonly currentJudgementPairId?: PreloadJudgement['id'];\r\n  readonly currentJudgementPairSelectedOnMs?: number; // unix timestamp\r\n  readonly requiredUserAction?: UserAnnotationAction;\r\n};\r\n\r\ntype PreloadJudgementsPayload = {\r\n  readonly judgements: PreloadJudgement[];\r\n  readonly alreadyFinished: number;\r\n  readonly remainingToFinish: number;\r\n  readonly requiredUserAction: UserAnnotationAction;\r\n};\r\n\r\ntype RateJudgementPairPayload = {\r\n  readonly relevanceLevel: RelevanceLevel;\r\n};\r\n\r\ntype SelectRangeStartEndPayload = {\r\n  readonly annotationPartIndex: number;\r\n};\r\n\r\ntype DeleteRangePayload = {\r\n  readonly annotationPartIndex: number;\r\n};\r\n\r\ntype SetJudgementStatusPayload = {\r\n  readonly id: PreloadJudgement['id'];\r\n  readonly status: JudgementPairStatus;\r\n};\r\n\r\nconst INITIAL_STATE = { judgementPairs: [] } as AnnotationState;\r\n\r\nconst preloadJudgements = createAction<PreloadJudgementsPayload>('JUDGEMENTS_PRELOADED');\r\nconst rateJudgementPair = createAction<RateJudgementPairPayload>('JUDGEMENT_PAIR_RATED');\r\nconst selectRangeStartEnd = createAction<SelectRangeStartEndPayload>('RANGE_STARTOREND_SELECTED');\r\nconst deleteRange = createAction<DeleteRangePayload>('RANGE_DELETED');\r\nconst setJudgementStatus = createAction<SetJudgementStatusPayload>('JUDGEMENT_STATUS_SET');\r\nconst selectJudgementPair = createAction<JudgementPair | undefined>('JUDGEMENT_PAIR_SELECTED');\r\n\r\nconst reducer = createReducer(INITIAL_STATE, builder =>\r\n  builder\r\n    .addCase(preloadJudgements, (state, action) => {\r\n      state.alreadyFinished = action.payload.alreadyFinished;\r\n      state.remainingToFinish = action.payload.remainingToFinish;\r\n      state.requiredUserAction = action.payload.requiredUserAction;\r\n\r\n      const judgementPairsReceived = action.payload.judgements;\r\n\r\n      state.judgementPairs = judgementPairsReceived.map(judgement => {\r\n        const localEquivalentPair = state.judgementPairs.find(pair => pair.id === judgement.id);\r\n        if (localEquivalentPair && areJudgementPairsEqual(localEquivalentPair, judgement)) {\r\n          // keep local data of judgement pair\r\n          return {\r\n            ...judgement,\r\n            ...localEquivalentPair,\r\n          };\r\n        } else {\r\n          // either there is no local data for this judgement pair received from server, or\r\n          // the data of the pair changed significantly\r\n          // --> do not keep local data for this pair\r\n          return {\r\n            ...judgement,\r\n            annotatedRanges: [],\r\n            status: JudgementPairStatus.TO_JUDGE,\r\n          };\r\n        }\r\n      });\r\n    })\r\n    .addCase(rateJudgementPair, (state, action) => {\r\n      const currentJudgementPair = state.judgementPairs.find(\r\n        pair => pair.id === state.currentJudgementPairId,\r\n      );\r\n      currentJudgementPair!.relevanceLevel = action.payload.relevanceLevel;\r\n      const currentRateLevel = RateLevels.find(\r\n        rateLevel => rateLevel.relevanceLevel === currentJudgementPair!.relevanceLevel,\r\n      );\r\n\r\n      // clear annotated ranges and current annotation start if\r\n      // rating is changed to a level which does not require annotation of ranges\r\n      if (!currentRateLevel!.annotationRequired) {\r\n        currentJudgementPair!.annotatedRanges = [];\r\n        currentJudgementPair!.currentAnnotationStart = undefined;\r\n      }\r\n    })\r\n    .addCase(selectRangeStartEnd, (state, action) => {\r\n      const currentJudgementPair = state.judgementPairs.find(\r\n        pair => pair.id === state.currentJudgementPairId,\r\n      );\r\n      if (currentJudgementPair!.currentAnnotationStart === undefined) {\r\n        // the start of an annotation range was selected --> just save the index\r\n        currentJudgementPair!.currentAnnotationStart = action.payload.annotationPartIndex;\r\n      } else {\r\n        // the end of an annotation range was selected --> save the annotated range\r\n        const start = currentJudgementPair!.currentAnnotationStart;\r\n        const end = action.payload.annotationPartIndex;\r\n        const actualStart = start < end ? start : end;\r\n        const actualEnd = end > start ? end : start;\r\n\r\n        // edge case: it's possible that the user selected start/end so that it overlaps\r\n        // another range which got previously selected. Remove such ranges\r\n        currentJudgementPair!.annotatedRanges = currentJudgementPair!.annotatedRanges.filter(\r\n          range => !(range.start >= actualStart && range.end <= actualEnd),\r\n        );\r\n\r\n        // then, add new range to the annotated ranges, and clear current annotation start\r\n        currentJudgementPair!.annotatedRanges.push({\r\n          start: actualStart,\r\n          end: actualEnd,\r\n        });\r\n        currentJudgementPair!.currentAnnotationStart = undefined;\r\n      }\r\n    })\r\n    .addCase(deleteRange, (state, action) => {\r\n      const currentJudgementPair = state.judgementPairs.find(\r\n        pair => pair.id === state.currentJudgementPairId,\r\n      );\r\n      currentJudgementPair!.annotatedRanges = currentJudgementPair!.annotatedRanges.filter(\r\n        range => {\r\n          return !(\r\n            action.payload.annotationPartIndex >= range.start &&\r\n            action.payload.annotationPartIndex <= range.end\r\n          );\r\n        },\r\n      );\r\n    })\r\n    .addCase(setJudgementStatus, (state, action) => {\r\n      const judgementPair = state.judgementPairs.find(pair => pair.id === action.payload.id);\r\n      judgementPair!.status = action.payload.status;\r\n    })\r\n    .addCase(selectJudgementPair, (state, action) => {\r\n      if (state.currentJudgementPairId !== action.payload?.id) {\r\n        state.currentJudgementPairId = action.payload?.id;\r\n        state.currentJudgementPairSelectedOnMs = new Date().getTime();\r\n      }\r\n    })\r\n    .addCase(userActions.logout, () => {\r\n      // on logout, erase annotation state\r\n      return INITIAL_STATE;\r\n    }),\r\n);\r\n\r\nfunction areJudgementPairsEqual(jp1: PreloadJudgement, jp2: PreloadJudgement) {\r\n  return (\r\n    jp1.queryText === jp2.queryText &&\r\n    jp1.docAnnotationParts.length === jp2.docAnnotationParts.length &&\r\n    !jp1.docAnnotationParts.some((part, index) => jp2.docAnnotationParts[index] !== part)\r\n  );\r\n}\r\n\r\nexport const actions = {\r\n  preloadJudgements,\r\n  rateJudgementPair,\r\n  selectRangeStartEnd,\r\n  deleteRange,\r\n  setJudgementStatus,\r\n  selectJudgementPair,\r\n};\r\nexport default reducer;\r\n","import { createAction, createReducer } from '@reduxjs/toolkit';\r\nimport * as jwt from 'jsonwebtoken';\r\n\r\nimport { JwtPayload } from '../../typings/fira-be-typings';\r\nimport { UserRole } from '../../typings/enums';\r\n\r\ntype UserState = null | {\r\n  readonly accessToken: {\r\n    readonly val: string;\r\n    readonly expiry: number; // unix timestamp\r\n  };\r\n  readonly refreshToken: {\r\n    readonly val: string;\r\n    readonly expiry: number; // unix timestamp\r\n  };\r\n  readonly acknowledgedInfoPage: boolean;\r\n  readonly role: UserRole;\r\n};\r\n\r\ntype AuthenticatePayload = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n};\r\ntype AckInfoPagePayload = {\r\n  acknowledgedInfoPage: boolean;\r\n};\r\n\r\nconst INITIAL_STATE = null as UserState;\r\nconst DEFAULT_ACKNOWLEDGED_INFO_PAGE = false;\r\n\r\nconst authenticate = createAction<AuthenticatePayload>('AUTHENTICATED');\r\nconst acknowledgeInfoPage = createAction<AckInfoPagePayload>('ACKNOWLEDGED_INFO_PAGE');\r\nconst logout = createAction<void>('LOGGED_OUT');\r\nconst reducer = createReducer(INITIAL_STATE, builder =>\r\n  builder\r\n    .addCase(authenticate, (state, action) => {\r\n      const accessTokenJwtPayload = jwt.decode(action.payload.accessToken) as JwtPayload;\r\n      const refreshTokenJwtPayload = jwt.decode(action.payload.refreshToken) as JwtPayload;\r\n      const isAdmin = !!accessTokenJwtPayload.resource_access?.['realm-management']?.roles?.some(\r\n        role => role === 'manage-users',\r\n      );\r\n\r\n      const acknowledgedInfoPage = state?.acknowledgedInfoPage ?? DEFAULT_ACKNOWLEDGED_INFO_PAGE;\r\n\r\n      return {\r\n        ...state,\r\n        accessToken: {\r\n          val: action.payload.accessToken,\r\n          expiry: accessTokenJwtPayload.exp,\r\n        },\r\n        refreshToken: {\r\n          val: action.payload.refreshToken,\r\n          expiry: refreshTokenJwtPayload.exp,\r\n        },\r\n        acknowledgedInfoPage,\r\n        role: isAdmin ? UserRole.ADMIN : UserRole.ANNOTATOR,\r\n      };\r\n    })\r\n    .addCase(acknowledgeInfoPage, (state, action) => {\r\n      state!.acknowledgedInfoPage = action.payload.acknowledgedInfoPage;\r\n    })\r\n    .addCase(logout, () => {\r\n      return INITIAL_STATE;\r\n    }),\r\n);\r\n\r\nexport const actions = { authenticate, acknowledgeInfoPage, logout };\r\nexport default reducer;\r\n","import { httpClient } from '../http/http.client';\r\nimport { createLogger } from '../logger/logger';\r\nimport { store } from '../store/store';\r\nimport {\r\n  actions as annotationActions,\r\n  JudgementPairStatus,\r\n} from '../store/annotation/annotation.slice';\r\nimport { RelevanceLevel, RateLevels } from '../typings/enums';\r\n\r\nconst logger = createLogger('judgements.service');\r\n\r\nexport const judgementStories = {\r\n  preloadJudgements: async () => {\r\n    logger.info(`executing preload judgements...`);\r\n\r\n    const response = await httpClient.preloadJudgements(store.getState().user!.accessToken.val);\r\n\r\n    logger.info(`preload judgements succeeded! dispatching preload judgements...`, { response });\r\n    store.dispatch(annotationActions.preloadJudgements(response));\r\n  },\r\n\r\n  rateJudgementPair: async (relevanceLevel: RelevanceLevel) => {\r\n    logger.info(`executing rate judgement pair...`);\r\n\r\n    store.dispatch(annotationActions.rateJudgementPair({ relevanceLevel }));\r\n\r\n    const annotationState = store.getState().annotation;\r\n    const currentJudgementPair = annotationState.judgementPairs.find(\r\n      pair => pair.id === annotationState.currentJudgementPairId,\r\n    )!;\r\n    const currentRateLevel = RateLevels.find(\r\n      rateLevel => rateLevel.relevanceLevel === currentJudgementPair.relevanceLevel,\r\n    );\r\n\r\n    if (!currentRateLevel!.annotationRequired || currentJudgementPair!.annotatedRanges.length > 0) {\r\n      // if the chosen rate level does not require annotation, or it does and regions are\r\n      // annotated already,\r\n      // immediately submit current judgement and proceed\r\n      await judgementStories.submitCurrentJudgement();\r\n    }\r\n\r\n    logger.info(`rate judgement pair succeeded!`);\r\n  },\r\n\r\n  submitCurrentJudgement: async () => {\r\n    logger.info(`executing submit current judgement...`);\r\n\r\n    const annotationState = store.getState().annotation;\r\n    const currentJudgementPair = annotationState.judgementPairs.find(\r\n      pair => pair.id === annotationState.currentJudgementPairId,\r\n    )!;\r\n    const relevancePositions: number[] = [];\r\n    for (const annotatedRange of currentJudgementPair.annotatedRanges) {\r\n      for (let i = annotatedRange.start; i <= annotatedRange.end; i++) {\r\n        relevancePositions.push(i);\r\n      }\r\n    }\r\n\r\n    const now = new Date().getTime();\r\n    const durationUsedToJudgeMs = now - annotationState.currentJudgementPairSelectedOnMs!;\r\n\r\n    store.dispatch(\r\n      annotationActions.setJudgementStatus({\r\n        id: currentJudgementPair.id,\r\n        status: JudgementPairStatus.SEND_PENDING,\r\n      }),\r\n    );\r\n\r\n    try {\r\n      await httpClient.submitJudgement(\r\n        store.getState().user!.accessToken.val,\r\n        currentJudgementPair.id,\r\n        {\r\n          relevanceLevel: currentJudgementPair.relevanceLevel!,\r\n          relevancePositions,\r\n          durationUsedToJudgeMs,\r\n        },\r\n      );\r\n    } catch (error) {\r\n      logger.error(`submit current judgement failed!`, { id: currentJudgementPair.id, error });\r\n      store.dispatch(\r\n        annotationActions.setJudgementStatus({\r\n          id: currentJudgementPair.id,\r\n          status: JudgementPairStatus.SEND_FAILED,\r\n        }),\r\n      );\r\n      throw error;\r\n    }\r\n\r\n    store.dispatch(\r\n      annotationActions.setJudgementStatus({\r\n        id: currentJudgementPair.id,\r\n        status: JudgementPairStatus.SEND_SUCCESS,\r\n      }),\r\n    );\r\n\r\n    logger.info(`submit current judgement succeeded!`);\r\n  },\r\n};\r\n","import { createLogger } from '../../logger/logger';\r\nimport { RootStore } from '../store';\r\nimport { judgementStories } from '../../stories/judgement.stories';\r\nimport { actions as annotationActions, JudgementPairStatus } from '../annotation/annotation.slice';\r\nimport { UserRole } from '../../typings/enums';\r\n\r\nconst PRELOAD_JUDGEMENTS_THRESHOLD = 1;\r\n\r\nconst logger = createLogger('annotation.subscriptions');\r\n\r\nexport const setupSubscriptions = (store: RootStore) => {\r\n  // if no judgement pairs got loaded from the server yet, preload pairs\r\n  store.subscribe(() => {\r\n    const annotationState = store.getState().annotation;\r\n\r\n    const user = store.getState().user;\r\n    if (!user || !user.accessToken) {\r\n      logger.info(\r\n        'no judgement pairs got loaded from the server yet, but there is no access token available --> skip preload',\r\n      );\r\n      return;\r\n    }\r\n    if (user.role !== UserRole.ANNOTATOR) {\r\n      logger.info(\r\n        'no judgement pairs got loaded from the server yet, but user role is not annotator --> skip preload',\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (annotationState.remainingToFinish === undefined) {\r\n      logger.info('no judgement pairs got loaded from the server yet --> execute preload...');\r\n      judgementStories.preloadJudgements();\r\n    }\r\n  });\r\n\r\n  /*\r\n   * retrieve judgement pairs from server\r\n   * - if count of (local) judgement pairs does not fulfill threshold and there are remaining\r\n   *   judgements to preload from the server\r\n   * - or all (local) judgement pairs are completed and thus we want the final state from the server\r\n   */\r\n  const retrieveJudgPairsSubscription: MemoizedSubscription = {\r\n    memoizeOnValue: subscribedStore => subscribedStore.getState().annotation.judgementPairs,\r\n    listener: subscribedStore => {\r\n      const annotationState = subscribedStore.getState().annotation;\r\n\r\n      const countOfAllJudgementPairs = annotationState.judgementPairs.length;\r\n      const countOfOpenJudgementPairs = annotationState.judgementPairs.filter(\r\n        pair =>\r\n          pair.status === JudgementPairStatus.TO_JUDGE ||\r\n          pair.status === JudgementPairStatus.SEND_PENDING,\r\n      ).length;\r\n      const countOfCompletedJudgementPairs = annotationState.judgementPairs.filter(\r\n        pair => pair.status === JudgementPairStatus.SEND_SUCCESS,\r\n      ).length;\r\n      if (\r\n        annotationState.remainingToFinish !== undefined &&\r\n        ((countOfOpenJudgementPairs <= PRELOAD_JUDGEMENTS_THRESHOLD &&\r\n          annotationState.remainingToFinish > countOfAllJudgementPairs) ||\r\n          (annotationState.remainingToFinish > 0 &&\r\n            countOfCompletedJudgementPairs === countOfAllJudgementPairs))\r\n      ) {\r\n        logger.info(\r\n          'count of preloaded judgement pairs does not fulfill threshold and ' +\r\n            'there are remaining judgements to preload on the server --> execute preload...',\r\n        );\r\n        judgementStories.preloadJudgements();\r\n      }\r\n    },\r\n  };\r\n  addMemoizedSubscription(store, retrieveJudgPairsSubscription);\r\n\r\n  // set new currently selected judgement pair if list of judgement pairs changes\r\n  const setNextSelectedPairSubscription: MemoizedSubscription = {\r\n    memoizeOnValue: subscribedStore => subscribedStore.getState().annotation.judgementPairs,\r\n    listener: subscribedStore => {\r\n      const judgePairsOfStore = subscribedStore.getState().annotation.judgementPairs;\r\n\r\n      // select first pair which neither gets currently sent to the server nor was already sent to the server\r\n      const nextPair = judgePairsOfStore.find(pair => pair.status === JudgementPairStatus.TO_JUDGE);\r\n      subscribedStore.dispatch(annotationActions.selectJudgementPair(nextPair));\r\n    },\r\n  };\r\n  addMemoizedSubscription(store, setNextSelectedPairSubscription);\r\n};\r\n\r\ntype MemoizedSubscription = {\r\n  memoizeOnValue: (subscribedStore: RootStore) => any;\r\n  listener: (subscribedStore: RootStore) => void;\r\n};\r\n\r\nfunction addMemoizedSubscription(store: RootStore, subscription: MemoizedSubscription) {\r\n  let memoizedValue = subscription.memoizeOnValue(store);\r\n  store.subscribe(() => {\r\n    const newValueOfStore = subscription.memoizeOnValue(store);\r\n    if (memoizedValue !== newValueOfStore) {\r\n      memoizedValue = newValueOfStore;\r\n      subscription.listener(store);\r\n    }\r\n  });\r\n}\r\n","import { createLogger } from '../../logger/logger';\r\n\r\nconst logger = createLogger('store-logger-middleware');\r\n\r\nconst loggerMiddleware = (store: any) => (next: any) => (action: any) => {\r\n  logger.group(action.type);\r\n  logger.info('dispatching', action);\r\n  const result = next(action);\r\n  logger.info('next state', store.getState());\r\n  logger.groupEnd();\r\n  return result;\r\n};\r\n\r\nexport default loggerMiddleware;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport userReducer from './user/user.slice';\r\nimport annotationReducer from './annotation/annotation.slice';\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  annotation: annotationReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport { setupSubscriptions as setupUserSubscriptions } from './user/user.subscriptions';\r\nimport { setupSubscriptions as setupAnnotationSubscriptions } from './annotation/annotation.subscriptions';\r\nimport loggerMiddleware from './middleware/logger';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [loggerMiddleware, ...getDefaultMiddleware()],\r\n});\r\n\r\nif (process.env.NODE_ENV !== 'production' && (module as any).hot) {\r\n  (module as any).hot.accept('./reducers', () => store.replaceReducer(rootReducer));\r\n}\r\n\r\nconst subscriptions = [setupUserSubscriptions, setupAnnotationSubscriptions];\r\nsubscriptions.forEach(subscription => subscription(store));\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type RootStore = typeof store;\r\nexport type AppDispatch = RootStore['dispatch'];\r\n","import { httpClient } from '../http/http.client';\r\nimport { store } from '../store/store';\r\nimport { createLogger } from '../logger/logger';\r\nimport { actions as userActions } from '../store/user/user.slice';\r\n\r\nconst logger = createLogger('auth.service');\r\n\r\nexport const authStories = {\r\n  login: async (username: string, password: string) => {\r\n    logger.info(`executing login...`, { username });\r\n\r\n    const loginResponse = await httpClient.login({ username, password });\r\n\r\n    logger.info(`login succeeded! dispatching authenticate...`, { loginResponse });\r\n    store.dispatch(userActions.authenticate(loginResponse));\r\n  },\r\n\r\n  refresh: async (refreshToken: string) => {\r\n    logger.info(`executing refresh...`, { refreshToken });\r\n\r\n    let refreshResponse;\r\n    try {\r\n      refreshResponse = await httpClient.refresh({ refreshToken });\r\n    } catch (err) {\r\n      logger.error(`refresh failed! dispatching logout...`, err);\r\n      store.dispatch(userActions.logout());\r\n      return;\r\n    }\r\n\r\n    logger.info(`refresh succeeded! dispatching authenticate...`, { refreshResponse });\r\n    store.dispatch(userActions.authenticate(refreshResponse));\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styles from './Login.module.css';\r\nimport Form from '../elements/forms/Form';\r\nimport { authStories } from '../../stories/auth.stories';\r\nimport { RootState } from '../../store/store';\r\n\r\nconst Login: React.FC = () => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const loggedIn = !!user;\r\n\r\n  if (loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.headline}>\r\n        <h1>Fira</h1>\r\n        <span>Fine-grained Relevance Annotation</span>\r\n      </div>\r\n      <div className={styles.inputArea}>\r\n        <span className={styles.inputHeadline}>Log in</span>\r\n\r\n        <Form\r\n          initialValues={{ username: '', password: '' }}\r\n          validate={values => {\r\n            const errors: any = {};\r\n            if (!values.username) {\r\n              errors.username = 'Required';\r\n            }\r\n            if (!values.password) {\r\n              errors.password = 'Required';\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={async (values, { setErrors }) => {\r\n            try {\r\n              await authStories.login(values.username, values.password);\r\n              // omit setSubmitting here because if login was successful, it will redirect and thus unmount the component\r\n            } catch (e) {\r\n              if (typeof e.getStatus === 'function' && e.getStatus() === 401) {\r\n                setErrors({ formError: `Credentials invalid.` } as any);\r\n              }\r\n              throw e;\r\n            }\r\n          }}\r\n          elements={[\r\n            {\r\n              elementType: 'input',\r\n              label: 'Username',\r\n              htmlProps: {\r\n                name: 'username',\r\n                autoCorrect: 'off',\r\n                autoCapitalize: 'off',\r\n              },\r\n            },\r\n            {\r\n              elementType: 'input',\r\n              label: 'Login-Code',\r\n              htmlProps: {\r\n                name: 'password',\r\n                autoComplete: 'off',\r\n                autoCorrect: 'off',\r\n                autoCapitalize: 'off',\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { httpClient } from '../http/http.client';\r\nimport { createLogger } from '../logger/logger';\r\nimport { store } from '../store/store';\r\nimport { UpdateConfig } from '../typings/fira-be-typings';\r\n\r\nconst logger = createLogger('admin.service');\r\n\r\nexport const adminStories = {\r\n  exportJudgements: async () => {\r\n    logger.info(`executing export of judgements...`);\r\n\r\n    const response = await httpClient.exportJudgements(store.getState().user!.accessToken.val);\r\n    saveTsv('judgements.tsv', response);\r\n\r\n    logger.info(`export of judgements succeeded!`, { response });\r\n  },\r\n\r\n  updateConfig: async (config: UpdateConfig) => {\r\n    logger.info(`executing update of config...`);\r\n\r\n    await httpClient.updateConfig(store.getState().user!.accessToken.val, config);\r\n\r\n    logger.info(`update of config succeeded!`);\r\n  },\r\n\r\n  getStatistics: async () => {\r\n    logger.info(`executing retrieval of statistics...`);\r\n\r\n    const response = await httpClient.getStatistics(store.getState().user!.accessToken.val);\r\n\r\n    logger.info(`retrieval of statistics succeeded!`, { response });\r\n    return response;\r\n  },\r\n};\r\n\r\nfunction saveTsv(filename: string, data: string) {\r\n  const blob = new Blob([data], { type: 'text/tsv' });\r\n  const elem = window.document.createElement('a');\r\n  elem.href = window.URL.createObjectURL(blob);\r\n  elem.download = filename;\r\n  document.body.appendChild(elem);\r\n  elem.click();\r\n  document.body.removeChild(elem);\r\n}\r\n","import { useDispatch } from 'react-redux';\r\n\r\nexport const useActionsWithDispatch = <T extends {}>(actions: T) => {\r\n  // use type \"Dispatch\" just to clarify that dispatching is automatically done\r\n  type Dispatch<FuncType> = FuncType;\r\n\r\n  type DispatchType = {\r\n    [P in keyof typeof actions]: Dispatch<typeof actions[P]>;\r\n  };\r\n\r\n  const dispatch = useDispatch<any>();\r\n\r\n  const actionsWithDispatch: any = {};\r\n\r\n  for (const action in actions) {\r\n    if (actions.hasOwnProperty(action)) {\r\n      actionsWithDispatch[action] = (...args: any[]) => dispatch((actions as any)[action](...args));\r\n    }\r\n  }\r\n\r\n  return actionsWithDispatch as DispatchType;\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../store';\r\nimport { actions } from './user.slice';\r\nimport { useActionsWithDispatch } from '../util/actions.util';\r\nimport { UserRole } from '../../typings/enums';\r\nimport { assertUnreachable } from '../../util/types.util';\r\n\r\nexport function useUserState() {\r\n  const userRole = useSelector((state: RootState) => {\r\n    if (!state.user) {\r\n      return undefined;\r\n    } else if (state.user.role === UserRole.ADMIN || state.user.role === UserRole.ANNOTATOR) {\r\n      return state.user.role;\r\n    } else {\r\n      assertUnreachable(state.user.role);\r\n    }\r\n  });\r\n  const userAcknowledgedInfoPage = useSelector((state: RootState) => {\r\n    return !!state.user?.acknowledgedInfoPage;\r\n  });\r\n\r\n  return { userRole, userAcknowledgedInfoPage };\r\n}\r\n\r\nexport const useUserActions = () => useActionsWithDispatch(actions);\r\n","// tslint:disable-next-line:no-empty\r\nexport const noop = () => {};\r\n","import React from 'react';\r\n\r\nimport styles from './RateButton.module.css';\r\nimport Button from '../../elements/Button';\r\nimport { RateLevelType, RelevanceLevel } from '../../../typings/enums';\r\n\r\nconst RATE_LEVEL_DATA = {\r\n  [RelevanceLevel.MISLEADING_ANSWER]: {\r\n    style: styles.misleadingAnswer,\r\n    text: 'Misleading Answer',\r\n    keyboardKey: '1',\r\n  },\r\n  [RelevanceLevel.NOT_RELEVANT]: {\r\n    style: styles.notRelevant,\r\n    text: 'Not Relevant',\r\n    keyboardKey: '2',\r\n  },\r\n  [RelevanceLevel.TOPIC_RELEVANT_DOES_NOT_ANSWER]: {\r\n    style: styles.topicRelevantDoesNotAnswer,\r\n    text: 'Topic Relevant, But Does Not Answer',\r\n    keyboardKey: '3',\r\n  },\r\n  [RelevanceLevel.GOOD_ANSWER]: { style: styles.goodAnswer, text: 'Good Answer', keyboardKey: '4' },\r\n  [RelevanceLevel.PERFECT_ANSWER]: {\r\n    style: styles.perfectAnswer,\r\n    text: 'Perfect Answer',\r\n    keyboardKey: '5',\r\n  },\r\n} as const;\r\n\r\nconst RateButton: React.FC<{ rateLevel: RateLevelType; onClick: () => void }> = ({\r\n  rateLevel,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Button\r\n        className={`${styles.button} ${RATE_LEVEL_DATA[rateLevel.relevanceLevel].style}`}\r\n        onClick={onClick}\r\n      >\r\n        <div className={styles.hotkey}>{RATE_LEVEL_DATA[rateLevel.relevanceLevel].keyboardKey}</div>\r\n        <span>{RATE_LEVEL_DATA[rateLevel.relevanceLevel].text}</span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RateButton;\r\n","import React from 'react';\r\nimport { Manager, Reference, Popper } from 'react-popper';\r\n\r\nimport styles from './AnnotationPart.module.css';\r\nimport Button from '../../elements/Button';\r\n\r\nconst AnnotationPart: React.FC<{\r\n  text: string;\r\n  isRangeStart: boolean;\r\n  isInSelectedRange: boolean;\r\n  showTooltip: boolean;\r\n  annotationIsAllowedOnPart: boolean;\r\n  annotationIsAllowedInGeneral: boolean;\r\n  onPartClick: () => void;\r\n  onTooltipClick: () => void;\r\n}> = ({\r\n  text,\r\n  isRangeStart,\r\n  isInSelectedRange,\r\n  showTooltip,\r\n  annotationIsAllowedOnPart,\r\n  annotationIsAllowedInGeneral,\r\n  onPartClick,\r\n  onTooltipClick,\r\n}) => {\r\n  // replace blank by fixed-width blank character (otherwise, styles like border/box-shadow don't apply)\r\n  const textToShow = text.replace(' ', '\\u00a0');\r\n\r\n  // set css class if part is start of the current selected range\r\n  const currentRangeStartStyle = isRangeStart ? styles.rangeStart : '';\r\n\r\n  // highlight the span as selectable (e.g., on hover) if annotation on the part is allowed\r\n  const annotationAllowedOnPartStyle = annotationIsAllowedOnPart\r\n    ? styles.annotationAllowedOnPart\r\n    : '';\r\n\r\n  // apply additional styles if annotation is allowed (e.g., spacing for mobile devices)\r\n  const annotationAllowedInGeneralStyle = annotationIsAllowedInGeneral\r\n    ? styles.annotationAllowedInGeneral\r\n    : '';\r\n\r\n  const annotatePartSpan = (ref?: any) => (\r\n    <span\r\n      ref={ref}\r\n      onClick={onPartClick}\r\n      className={`${styles.annotatePart} ${currentRangeStartStyle} ${\r\n        !!isInSelectedRange ? styles.isInRange : ''\r\n      } ${annotationAllowedOnPartStyle} ${annotationAllowedInGeneralStyle}`}\r\n    >\r\n      {textToShow}\r\n    </span>\r\n  );\r\n\r\n  return !showTooltip ? (\r\n    annotatePartSpan()\r\n  ) : (\r\n    <Manager>\r\n      <Reference>{({ ref }) => annotatePartSpan(ref)}</Reference>\r\n      <Popper placement=\"right\">\r\n        {({ ref, style, placement }) => (\r\n          <div ref={ref} style={style} data-placement={placement}>\r\n            <Button className={styles.annotatePartTooltipButton} onClick={onTooltipClick}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"12\"\r\n                height=\"14\"\r\n                viewBox=\"5 3 14 18\"\r\n                fill=\"var(--color-destructive)\"\r\n              >\r\n                <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n              </svg>\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Popper>\r\n    </Manager>\r\n  );\r\n};\r\n\r\nexport default AnnotationPart;\r\n","import React from 'react';\r\n\r\nimport styles from './Line.module.css';\r\n\r\nconst Line: React.FC<{ orientation: 'horizontal' }> = () => (\r\n  <div className={styles.horizontalLine} />\r\n);\r\n\r\nexport default Line;\r\n","import React, { useState } from 'react';\r\n\r\nimport styles from './Annotation.module.css';\r\nimport { RelevanceLevel, RateLevels, JudgementMode } from '../../../typings/enums';\r\nimport { judgementStories } from '../../../stories/judgement.stories';\r\nimport { noop } from '../../../util/functions';\r\nimport Button from '../../elements/Button';\r\nimport { useKeyupEvent as useKeyupHandler } from '../../util/events.hooks';\r\nimport RateButton from './RateButton';\r\nimport { JudgementPair } from '../../../store/annotation/annotation.slice';\r\nimport AnnotationPart from './AnnotationPart';\r\nimport Menu from '../../elements/Menu';\r\nimport Line from '../../elements/Line';\r\n\r\nconst Annotation: React.FC<{\r\n  currentJudgementPair: JudgementPair;\r\n  remainingToFinish: number;\r\n  alreadyFinished: number;\r\n  selectRangeStartEnd: ({ annotationPartIndex }: { annotationPartIndex: number }) => void;\r\n  deleteRange: ({ annotationPartIndex }: { annotationPartIndex: number }) => void;\r\n}> = ({\r\n  currentJudgementPair,\r\n  remainingToFinish,\r\n  alreadyFinished,\r\n  selectRangeStartEnd,\r\n  deleteRange,\r\n}) => {\r\n  const [tooltipAnnotatePartIndex, setTooltipAnnotatePartIndex] = useState<number | undefined>(\r\n    undefined,\r\n  );\r\n\r\n  function createJudgementFn(relevanceLevel: RelevanceLevel) {\r\n    return () => judgementStories.rateJudgementPair(relevanceLevel);\r\n  }\r\n\r\n  useKeyupHandler({\r\n    Digit1: createJudgementFn(RelevanceLevel.MISLEADING_ANSWER),\r\n    Digit2: createJudgementFn(RelevanceLevel.NOT_RELEVANT),\r\n    Digit3: createJudgementFn(RelevanceLevel.TOPIC_RELEVANT_DOES_NOT_ANSWER),\r\n    Digit4: createJudgementFn(RelevanceLevel.GOOD_ANSWER),\r\n    Digit5: createJudgementFn(RelevanceLevel.PERFECT_ANSWER),\r\n  });\r\n\r\n  const currentRateLevel = RateLevels.find(\r\n    rateLevel => rateLevel.relevanceLevel === currentJudgementPair.relevanceLevel,\r\n  );\r\n\r\n  // compute fraction of finished annotation; used for progress bar\r\n  const annotationTarget = remainingToFinish + alreadyFinished;\r\n  const finishedFraction = (alreadyFinished / annotationTarget) * 100;\r\n\r\n  // compute some boolean variables needed to guide the user throw the annotation process\r\n  const ratingRequired = !currentRateLevel;\r\n  const currentSelectionNotFinished = currentJudgementPair.currentAnnotationStart !== undefined;\r\n  const annotationIsAllowedInGeneral =\r\n    currentJudgementPair.mode === JudgementMode.SCORING_AND_SELECT_SPANS;\r\n  const annotationIsRequired =\r\n    annotationIsAllowedInGeneral &&\r\n    !!currentRateLevel?.annotationRequired &&\r\n    currentJudgementPair.annotatedRanges.length === 0;\r\n\r\n  function hideTooltip() {\r\n    setTooltipAnnotatePartIndex(undefined);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {finishedFraction !== undefined && (\r\n        <div style={{ width: `${finishedFraction}%` }} className={styles.progressBar} />\r\n      )}\r\n      <div className={styles.container} onClickCapture={hideTooltip}>\r\n        <div className={styles.actionBar}>\r\n          <div className={styles.queryText}>{currentJudgementPair.queryText}</div>\r\n          <Menu />\r\n        </div>\r\n        <Line orientation=\"horizontal\" />\r\n        <div key={currentJudgementPair.id} className={styles.annotationArea}>\r\n          {currentJudgementPair.docAnnotationParts.map((annotationPart, i) => {\r\n            // determine if part is in one of the selected ranges\r\n            const isInSelectedRange = currentJudgementPair.annotatedRanges.some(\r\n              range => range.start <= i && range.end >= i,\r\n            );\r\n\r\n            /*\r\n             * annotation of a part is allowed if\r\n             * - the corresponding judgement mode is set,\r\n             * - it is no whitespace\r\n             * - and the part is not already part of a selected region\r\n             */\r\n            const canAnnotatePart =\r\n              currentJudgementPair.mode === JudgementMode.SCORING_AND_SELECT_SPANS &&\r\n              annotationPart !== ' ' &&\r\n              !isInSelectedRange;\r\n\r\n            return (\r\n              <AnnotationPart\r\n                key={i}\r\n                text={annotationPart}\r\n                isRangeStart={currentJudgementPair.currentAnnotationStart === i}\r\n                isInSelectedRange={isInSelectedRange}\r\n                showTooltip={tooltipAnnotatePartIndex === i}\r\n                annotationIsAllowedOnPart={canAnnotatePart}\r\n                annotationIsAllowedInGeneral={annotationIsAllowedInGeneral}\r\n                onPartClick={\r\n                  canAnnotatePart\r\n                    ? () => selectRangeStartEnd({ annotationPartIndex: i })\r\n                    : isInSelectedRange\r\n                    ? () => setTooltipAnnotatePartIndex(i)\r\n                    : noop\r\n                }\r\n                onTooltipClick={() => {\r\n                  deleteRange({ annotationPartIndex: i });\r\n                  hideTooltip();\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={styles.footer}>\r\n          {ratingRequired ? (\r\n            RateLevels.map(rateButton => (\r\n              <RateButton\r\n                key={rateButton.relevanceLevel}\r\n                rateLevel={rateButton}\r\n                onClick={createJudgementFn(rateButton.relevanceLevel)}\r\n              />\r\n            ))\r\n          ) : (\r\n            <>\r\n              <span className={styles.guideText}>\r\n                {currentSelectionNotFinished ? (\r\n                  <>Finish your selection</>\r\n                ) : annotationIsRequired ? (\r\n                  <>Please select the relevant regions of the document.</>\r\n                ) : (\r\n                  <>Feel free to add more relevant regions or go to the next judgement pair.</>\r\n                )}\r\n              </span>\r\n              <Button\r\n                buttonType=\"primary\"\r\n                style={{ width: '60px', height: '50px' }}\r\n                disabled={currentSelectionNotFinished || annotationIsRequired}\r\n                onClick={() => judgementStories.submitCurrentJudgement()}\r\n              >\r\n                Next\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Annotation;\r\n","import { useEffect } from 'react';\r\n\r\nexport function useKeyupEvent(keyFunctionMap: { [P: string]: () => void }) {\r\n  useEffect(() => {\r\n    const keyUpHandler = (e: KeyboardEvent) => {\r\n      const key = e.code;\r\n      if (keyFunctionMap.hasOwnProperty(key)) {\r\n        keyFunctionMap[key]();\r\n      }\r\n    };\r\n    document.addEventListener('keyup', keyUpHandler, { passive: true });\r\n    return () => document.removeEventListener('keyup', keyUpHandler);\r\n  });\r\n}\r\n\r\nexport function useOnViewportClick(onViewportClick: () => void) {\r\n  useEffect(() => {\r\n    const viewportClickHandler = () => onViewportClick();\r\n    document.addEventListener('click', viewportClickHandler, { passive: true });\r\n    return () => document.removeEventListener('click', viewportClickHandler);\r\n  });\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { actions, JudgementPairStatus } from './annotation.slice';\r\nimport { RootState } from '../store';\r\nimport { useActionsWithDispatch } from '../util/actions.util';\r\n\r\nexport const useAnnotationActions = () => useActionsWithDispatch(actions);\r\n\r\nexport const useAnnotationState = () => {\r\n  const pairsSuccessfullySent = useSelector((state: RootState) =>\r\n    state.annotation.judgementPairs.filter(\r\n      pair => pair.status === JudgementPairStatus.SEND_SUCCESS,\r\n    ),\r\n  );\r\n\r\n  const remainingToFinish = useSelector((state: RootState) => {\r\n    return state.annotation.remainingToFinish === undefined\r\n      ? undefined\r\n      : state.annotation.remainingToFinish - pairsSuccessfullySent.length;\r\n  });\r\n  const alreadyFinished = useSelector((state: RootState) => {\r\n    return state.annotation.alreadyFinished === undefined\r\n      ? undefined\r\n      : state.annotation.alreadyFinished + pairsSuccessfullySent.length;\r\n  });\r\n  const currentJudgementPair = useSelector((state: RootState) =>\r\n    state.annotation.judgementPairs.find(\r\n      pair => pair.id === state.annotation.currentJudgementPairId,\r\n    ),\r\n  );\r\n  const requiredUserAction = useSelector((state: RootState) => state.annotation.requiredUserAction);\r\n\r\n  return {\r\n    remainingToFinish,\r\n    alreadyFinished,\r\n    currentJudgementPair,\r\n    requiredUserAction,\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport Annotation from './Annotation';\r\nimport {\r\n  useAnnotationState,\r\n  useAnnotationActions,\r\n} from '../../../store/annotation/annotation.hooks';\r\n\r\nconst AnnotationContainer: React.FC = () => {\r\n  const { remainingToFinish, alreadyFinished, currentJudgementPair } = useAnnotationState();\r\n  const { selectRangeStartEnd, deleteRange } = useAnnotationActions();\r\n\r\n  /*\r\n   * - if we know that no annotations must be finished anymore\r\n   *   --> render finished page\r\n   * - if we don't know how many annotations must be finished,\r\n   *   or if we currently have no judgement pair to show\r\n   *   --> render loading page\r\n   * - else, i.e. if we know that at least one judgement must be finished\r\n   *   and we have a judgement pair to show\r\n   *   --> render annotation page\r\n   */\r\n\r\n  if (remainingToFinish !== undefined && remainingToFinish <= 0) {\r\n    return (\r\n      // TODO implement finished page\r\n      <div>Finished!</div>\r\n    );\r\n  }\r\n\r\n  return remainingToFinish === undefined || !currentJudgementPair ? (\r\n    // TODO implement loading page\r\n    <div>Loading...</div>\r\n  ) : (\r\n    <Annotation\r\n      currentJudgementPair={currentJudgementPair}\r\n      remainingToFinish={remainingToFinish}\r\n      alreadyFinished={alreadyFinished ?? 0}\r\n      selectRangeStartEnd={selectRangeStartEnd}\r\n      deleteRange={deleteRange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AnnotationContainer;\r\n","import { createLogger } from '../logger/logger';\r\nimport { store } from '../store/store';\r\nimport { httpClient } from '../http/http.client';\r\nimport { actions as userActions } from '../store/user/user.slice';\r\nimport { SubmitFeedback } from '../typings/fira-be-typings';\r\n\r\nconst logger = createLogger('annotators.service');\r\n\r\nexport const annotatorStories = {\r\n  acknowledgeInfoPage: () => {\r\n    logger.info(`executing acknowledgement of info page...`);\r\n\r\n    store.dispatch(userActions.acknowledgeInfoPage({ acknowledgedInfoPage: true }));\r\n\r\n    logger.info(`acknowledgement of info page succeeded!`);\r\n  },\r\n\r\n  submitFeedback: async (feedbackData: SubmitFeedback) => {\r\n    logger.info(`executing submission of feedback...`);\r\n\r\n    await httpClient.submitFeedback(store.getState().user!.accessToken.val, feedbackData);\r\n\r\n    logger.info(`submission of feedback succeeded!`);\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nimport styles from './AnnotationInfo.module.css';\r\nimport Button from '../../elements/Button';\r\nimport { annotatorStories } from '../../../stories/annotator.stories';\r\nimport { useRouting } from '../AnnotationRouter';\r\n\r\nimport infoPage01 from './info-page-01.png';\r\nimport infoPage02 from './info-page-02.png';\r\n\r\nconst AnnotationInfo: React.FC = () => {\r\n  const annotationRouting = useRouting();\r\n\r\n  const content = [\r\n    {\r\n      type: 'text',\r\n      content: 'Choose a score for the document',\r\n    },\r\n    {\r\n      type: 'image',\r\n      content: infoPage01,\r\n      alt: 'image showing how to choose a score',\r\n    },\r\n    {\r\n      type: 'text',\r\n      content: 'Select regions of the document relevant to the query',\r\n    },\r\n    {\r\n      type: 'image',\r\n      content: infoPage02,\r\n      alt: 'image showing how to select regions of the document',\r\n    },\r\n  ] as const;\r\n\r\n  function onAcknowledge() {\r\n    annotatorStories.acknowledgeInfoPage();\r\n    annotationRouting.routeToAnnotatePage();\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <span className={styles.headline}>Info - How to annotate</span>\r\n      {content.map((entry, idx) =>\r\n        entry.type === 'text' ? (\r\n          <span key={idx}>{entry.content}</span>\r\n        ) : (\r\n          <img key={idx} className={styles.infoImage} src={entry.content} alt={entry.alt} />\r\n        ),\r\n      )}\r\n      <Button onClick={onAcknowledge}>Continue</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnnotationInfo;\r\n","import React from 'react';\r\n\r\nimport styles from './AnnotationFeedback.module.css';\r\nimport Form from '../../elements/forms/Form';\r\nimport { annotatorStories } from '../../../stories/annotator.stories';\r\nimport { judgementStories } from '../../../stories/judgement.stories';\r\nimport { FeedbackScore } from '../../../typings/enums';\r\nimport { SubmitFeedback } from '../../../typings/fira-be-typings';\r\n\r\nconst FEEDBACK_SCORE_TEXTS = {\r\n  [FeedbackScore.VERY_GOOD]: 'Very good',\r\n  [FeedbackScore.GOOD]: 'Good',\r\n  [FeedbackScore.DECENT]: 'Decent',\r\n  [FeedbackScore.DONT_LIKE_IT]: `Don't like it`,\r\n} as const;\r\n\r\nconst AnnotationFeedback: React.FC = () => {\r\n  async function submitFeedback(feedback: SubmitFeedback) {\r\n    await annotatorStories.submitFeedback(feedback);\r\n    await judgementStories.preloadJudgements();\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <span className={styles.headline}>Feedback</span>\r\n      <div>\r\n        How did you like to work with Fira so far?\r\n        <br />\r\n        We kindly ask you to take a minute to provide some feedback!\r\n      </div>\r\n      <Form\r\n        initialValues={{\r\n          feedbackScore: FeedbackScore.VERY_GOOD,\r\n          feedbackText: '',\r\n        }}\r\n        onSubmit={async values => {\r\n          await submitFeedback({ score: values.feedbackScore, text: values.feedbackText });\r\n          // omit setSubmitting here because if submission was successful, it will redirect and thus unmount the component\r\n        }}\r\n        elements={[\r\n          {\r\n            elementType: 'select',\r\n            label: 'Rating',\r\n            childElements: Object.values(FeedbackScore).map(feedbackScore => (\r\n              <option key={feedbackScore} value={feedbackScore}>\r\n                {FEEDBACK_SCORE_TEXTS[feedbackScore]}\r\n              </option>\r\n            )),\r\n            htmlProps: { name: 'feedbackScore' },\r\n          },\r\n          {\r\n            elementType: 'textarea',\r\n            htmlProps: {\r\n              placeholder: 'Do you want to add something?',\r\n              name: 'feedbackText',\r\n              autoComplete: 'off',\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnnotationFeedback;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect, useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport AnnotationContainer from './annotate-page/AnnotationContainer';\r\nimport AnnotationInfo from './info-page/AnnotationInfo';\r\nimport AnnotationFeedback from './feedback-page/AnnotationFeedback';\r\nimport { useUserState } from '../../store/user/user.hooks';\r\nimport { useAnnotationState } from '../../store/annotation/annotation.hooks';\r\nimport { UserAnnotationAction } from '../../typings/enums';\r\n\r\nconst ANNOTATE_RELATIVE_URL = 'annotate';\r\nconst INFO_RELATIVE_URL = 'info';\r\nconst FEEDBACK_RELATIVE_URL = 'feedback';\r\n\r\nexport function useRouting() {\r\n  const history = useHistory();\r\n\r\n  return {\r\n    routeToAnnotatePage: () => {\r\n      history.push(ANNOTATE_RELATIVE_URL);\r\n    },\r\n    routeToInfoPage: () => {\r\n      history.push(INFO_RELATIVE_URL);\r\n    },\r\n  };\r\n}\r\n\r\nconst AnnotationRouter: React.FC = () => {\r\n  const match = useRouteMatch();\r\n  const { userAcknowledgedInfoPage } = useUserState();\r\n  const { requiredUserAction } = useAnnotationState();\r\n\r\n  const redirectToDefault = <Redirect to={`${match.path}/${ANNOTATE_RELATIVE_URL}`} />;\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/${ANNOTATE_RELATIVE_URL}`}>\r\n        {!userAcknowledgedInfoPage ? (\r\n          // on this device, the info page was never shown and\r\n          // acknowledged by the user --> show page\r\n          <Redirect to={`${match.path}/${INFO_RELATIVE_URL}`} />\r\n        ) : requiredUserAction === UserAnnotationAction.SUBMIT_FEEDBACK ? (\r\n          <Redirect to={`${match.path}/${FEEDBACK_RELATIVE_URL}`} />\r\n        ) : (\r\n          <AnnotationContainer />\r\n        )}\r\n      </Route>\r\n      <Route path={`${match.path}/${INFO_RELATIVE_URL}`}>\r\n        <AnnotationInfo />\r\n      </Route>\r\n      <Route path={`${match.path}/${FEEDBACK_RELATIVE_URL}`}>\r\n        {requiredUserAction !== UserAnnotationAction.SUBMIT_FEEDBACK ? (\r\n          redirectToDefault\r\n        ) : (\r\n          <AnnotationFeedback />\r\n        )}\r\n      </Route>\r\n      {redirectToDefault}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AnnotationRouter;\r\n","import React, { useState } from 'react';\r\nimport { Manager, Reference, Popper } from 'react-popper';\r\n\r\nimport styles from './Menu.module.css';\r\nimport Button from './Button';\r\nimport { useOnViewportClick } from '../util/events.hooks';\r\nimport { useUserActions } from '../../store/user/user.hooks';\r\nimport { useRouting } from '../annotation-route/AnnotationRouter';\r\n\r\nconst MenuButton = React.forwardRef<HTMLButtonElement, { onClick: () => void }>(\r\n  ({ onClick }, ref) => (\r\n    <Button ref={ref} buttonType=\"tertiary\" className={styles.menuButton} onClick={onClick}>\r\n      {/* https://material.io/resources/icons/?icon=more_vert&style=baseline */}\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n      </svg>\r\n    </Button>\r\n  ),\r\n);\r\n\r\nconst Menu: React.FC = () => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  useOnViewportClick(() => setShowMenu(false));\r\n  const userActions = useUserActions();\r\n  const annotationRouting = useRouting();\r\n\r\n  function onLogout() {\r\n    userActions.logout();\r\n  }\r\n\r\n  function onShowInfoPage() {\r\n    annotationRouting.routeToInfoPage();\r\n  }\r\n\r\n  function toggleShowMenu() {\r\n    setShowMenu(oldVal => !oldVal);\r\n  }\r\n\r\n  function createMenuButton(ref?: React.Ref<HTMLButtonElement>) {\r\n    return <MenuButton onClick={toggleShowMenu} ref={ref} />;\r\n  }\r\n\r\n  return !showMenu ? (\r\n    createMenuButton()\r\n  ) : (\r\n    <Manager>\r\n      <Reference>{({ ref }) => createMenuButton(ref)}</Reference>\r\n      <Popper placement=\"bottom-end\">\r\n        {({ ref, style, placement }) => (\r\n          <div ref={ref} style={style} data-placement={placement}>\r\n            <Button onClick={onShowInfoPage}>Go to Info Page</Button>\r\n            <Button onClick={onLogout}>Logout</Button>\r\n          </div>\r\n        )}\r\n      </Popper>\r\n    </Manager>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport styles from './Admin.module.css';\r\nimport { Statistic } from '../../typings/fira-be-typings';\r\nimport { JudgementMode } from '../../typings/enums';\r\nimport { adminStories } from '../../stories/admin.stories';\r\nimport Button from '../elements/Button';\r\nimport Menu from '../elements/Menu';\r\nimport Line from '../elements/Line';\r\n\r\nconst Admin: React.FC = () => {\r\n  const [statistics, updateStatistics] = useState<Statistic[] | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    async function fetchStatisticsAndUpdate() {\r\n      updateStatistics((await adminStories.getStatistics()).statistics);\r\n    }\r\n\r\n    fetchStatisticsAndUpdate();\r\n  }, [updateStatistics]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.adminArea}>\r\n        <div className={styles.actionBar}>\r\n          <Button className={styles.button} onClick={adminStories.exportJudgements}>\r\n            <span>Export Judgements</span>\r\n          </Button>\r\n          <Menu />\r\n        </div>\r\n        <Line orientation=\"horizontal\" />\r\n        <Formik\r\n          initialValues={{\r\n            judgementMode: JudgementMode.SCORING_AND_SELECT_SPANS,\r\n            rotateDocumentText: 'true',\r\n          }}\r\n          onSubmit={async (values, { setSubmitting }) => {\r\n            try {\r\n              await adminStories.updateConfig({\r\n                ...values,\r\n                rotateDocumentText: values.rotateDocumentText === 'true',\r\n              });\r\n              setSubmitting(true);\r\n            } catch (e) {\r\n              setSubmitting(false);\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form className={styles.actionBar}>\r\n              <div className={styles.options}>\r\n                <div>\r\n                  <label htmlFor=\"judgementMode\">Judgement Mode:</label>\r\n                  <Field name=\"judgementMode\" as=\"select\">\r\n                    {Object.values(JudgementMode).map(judgementMode => (\r\n                      <option key={judgementMode} value={judgementMode}>\r\n                        {judgementMode}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"rotateDocumentText\">Rotate Document Text:</label>\r\n                  <Field name=\"rotateDocumentText\" as=\"select\">\r\n                    <option value=\"true\">true</option>\r\n                    <option value=\"false\">false</option>\r\n                  </Field>\r\n                </div>\r\n              </div>\r\n              <Button\r\n                className={styles.button}\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                isLoading={isSubmitting}\r\n              >\r\n                Update Config\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Line orientation=\"horizontal\" />\r\n        <div className={styles.statisticsContainer}>\r\n          {statistics &&\r\n            statistics.map(statistic => (\r\n              <div key={statistic.id} className={styles.statistic}>\r\n                <div className={styles.statisticValue}>{statistic.value}</div>\r\n                <div className={styles.statisticLabel}>{statistic.label}</div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from 'react';\r\nimport { RouteProps, Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../store/store';\r\nimport { UserRole } from '../typings/enums';\r\n\r\ntype PrivateRouteProps = RouteProps & {\r\n  requiredRole: UserRole;\r\n};\r\n\r\nconst RoleRoute: React.FC<PrivateRouteProps> = ({ requiredRole, ...rest }) => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n\r\n  if (!!user && user?.role === requiredRole) {\r\n    return <Route {...rest} />;\r\n  } else {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n};\r\n\r\nexport default RoleRoute;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Login from './login-page/Login';\r\nimport Admin from './admin-page/Admin';\r\nimport AnnotationRouter from './annotation-route/AnnotationRouter';\r\nimport RoleRoute from './RoleRoute';\r\nimport { useUserState } from '../store/user/user.hooks';\r\nimport { UserRole } from '../typings/enums';\r\nimport { assertUnreachable } from '../util/types.util';\r\n\r\nconst RedirectDependingOnUserRole: React.FC = () => {\r\n  const { userRole } = useUserState();\r\n\r\n  if (!userRole) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else if (userRole === UserRole.ADMIN) {\r\n    return <Redirect to=\"/admin\" />;\r\n  } else if (userRole === UserRole.ANNOTATOR) {\r\n    return <Redirect to=\"/annotator\" />;\r\n  } else {\r\n    assertUnreachable(userRole);\r\n  }\r\n};\r\n\r\nconst MainRouter: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <RedirectDependingOnUserRole />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <RoleRoute path=\"/admin\" requiredRole={UserRole.ADMIN}>\r\n          <Admin />\r\n        </RoleRoute>\r\n        <RoleRoute path=\"/annotator\" requiredRole={UserRole.ANNOTATOR}>\r\n          <AnnotationRouter />\r\n        </RoleRoute>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default MainRouter;\r\n","import React from 'react';\r\n\r\nimport styles from './App.module.css';\r\nimport MainRouter from './ui/MainRouter';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className={styles.app}>\r\n      <MainRouter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { browserStorage } from '../browser-storage/browser-storage';\r\nimport { store } from '../store/store';\r\nimport { actions as userActions } from '../store/user/user.slice';\r\nimport { createLogger } from '../logger/logger';\r\n\r\nconst logger = createLogger('load-stored-user');\r\n\r\nexport function loadStoredUser() {\r\n  logger.info('load user from browser storage');\r\n  const storedUser = browserStorage.getUser();\r\n\r\n  if (storedUser) {\r\n    logger.info('stored user found. dispatching authenticate and acknowledge info page...', {\r\n      storedUser,\r\n    });\r\n    store.dispatch(userActions.authenticate(storedUser));\r\n    store.dispatch(\r\n      userActions.acknowledgeInfoPage({\r\n        acknowledgedInfoPage: storedUser.acknowledgedInfoPage,\r\n      }),\r\n    );\r\n  } else {\r\n    logger.info('no stored user found');\r\n  }\r\n}\r\n","import { loadStoredUser } from './load-stored-user';\r\nimport { createLogger } from '../logger/logger';\r\n\r\nconst bootScripts = [loadStoredUser];\r\n\r\nconst logger = createLogger('boot');\r\n\r\nexport const executeBootScripts = () => {\r\n  logger.info('executing boot scripts...');\r\n\r\n  bootScripts.forEach(bootScript => bootScript());\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { executeBootScripts } from './boot/boot';\r\n\r\nexecuteBootScripts();\r\n\r\nconst renderApp = () =>\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n  );\r\n\r\nif (process.env.NODE_ENV !== 'production' && (module as any).hot) {\r\n  (module as any).hot.accept('./App', renderApp);\r\n}\r\n\r\nrenderApp();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RateButton_container__3gt5W\",\"button\":\"RateButton_button__376Af\",\"hotkey\":\"RateButton_hotkey__ze67j\",\"misleadingAnswer\":\"RateButton_misleadingAnswer__27_t0\",\"notRelevant\":\"RateButton_notRelevant__3wpKi\",\"topicRelevantDoesNotAnswer\":\"RateButton_topicRelevantDoesNotAnswer__13C4J\",\"goodAnswer\":\"RateButton_goodAnswer__2g9Bs\",\"perfectAnswer\":\"RateButton_perfectAnswer__1XzD9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBar\":\"Annotation_progressBar__1jTVR\",\"container\":\"Annotation_container__235hn\",\"actionBar\":\"Annotation_actionBar__kQjP7\",\"queryText\":\"Annotation_queryText__ETBSK\",\"annotationArea\":\"Annotation_annotationArea__tNPNj\",\"footer\":\"Annotation_footer__1iEYQ\",\"guideText\":\"Annotation_guideText__2LwRl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"annotatePart\":\"AnnotationPart_annotatePart__3YsjT\",\"rangeStart\":\"AnnotationPart_rangeStart__1czle\",\"isInRange\":\"AnnotationPart_isInRange__hFdLD\",\"annotationAllowedOnPart\":\"AnnotationPart_annotationAllowedOnPart__Be0XQ\",\"annotationAllowedInGeneral\":\"AnnotationPart_annotationAllowedInGeneral__33pWq\",\"annotatePartTooltipButton\":\"AnnotationPart_annotatePartTooltipButton__1qKz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__aUVEj\",\"typePrimary\":\"Button_typePrimary__3vapG\",\"typeSecondary\":\"Button_typeSecondary__21OUE\",\"typeTertiary\":\"Button_typeTertiary__lB476\",\"animate\":\"Button_animate__P4pSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1qZ_N\",\"inputArea\":\"Login_inputArea__3gas0\",\"headline\":\"Login_headline__1PqMZ\",\"inputHeadline\":\"Login_inputHeadline__2vy_z\",\"inputContainer\":\"Login_inputContainer__3Jpw4\",\"inputDivider\":\"Login_inputDivider__a50Ku\",\"errorList\":\"Login_errorList__2PJJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Form_inputContainer__1oHRC\",\"inputDivider\":\"Form_inputDivider__36Zo9\",\"errorList\":\"Form_errorList__1LRve\",\"button\":\"Form_button__3zRcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsEllipsis\":\"LoadingIndicator_ldsEllipsis__1NuRE\",\"typePrimary\":\"LoadingIndicator_typePrimary__GpZdE\",\"typeSecondary\":\"LoadingIndicator_typeSecondary__2jfcd\",\"lds-ellipsis1\":\"LoadingIndicator_lds-ellipsis1__3Vee3\",\"lds-ellipsis2\":\"LoadingIndicator_lds-ellipsis2__1xuwq\",\"lds-ellipsis3\":\"LoadingIndicator_lds-ellipsis3__14o4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AnnotationInfo_container__36eTi\",\"headline\":\"AnnotationInfo_headline__2sc42\",\"infoImage\":\"AnnotationInfo_infoImage__3Iuqq\"};"],"sourceRoot":""}